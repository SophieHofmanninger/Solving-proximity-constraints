<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_J5_sgIV5EemzzojpIDPlJA" name="ConstraintUnifier">
  <elementImport xmi:id="_J6e0soV5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
  </elementImport>
  <elementImport xmi:id="_J6e0s4V5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
  </elementImport>
  <elementImport xmi:id="_J6e0tIV5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
  </elementImport>
  <elementImport xmi:id="_J6e0tYV5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
  </elementImport>
  <elementImport xmi:id="_J6e0toV5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
  </elementImport>
  <elementImport xmi:id="_J6e0t4V5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
  </elementImport>
  <elementImport xmi:id="_J6e0uIV5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
  </elementImport>
  <elementImport xmi:id="_J6e0uYV5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
  </elementImport>
  <elementImport xmi:id="_J6e0uoV5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
  </elementImport>
  <elementImport xmi:id="_J6e0u4V5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
  </elementImport>
  <elementImport xmi:id="_J6e0vIV5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
  </elementImport>
  <elementImport xmi:id="_J6e0vYV5EemzzojpIDPlJA">
    <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
  </elementImport>
  <packageImport xmi:id="_J6e0sIV5EemzzojpIDPlJA">
    <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
  </packageImport>
  <packageImport xmi:id="_J6e0sYV5EemzzojpIDPlJA">
    <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
  </packageImport>
  <packagedElement xmi:type="uml:Package" xmi:id="_J6hQ8IV5EemzzojpIDPlJA" name="elements">
    <packagedElement xmi:type="uml:Class" xmi:id="_J6hQ8YV5EemzzojpIDPlJA" name="Element" visibility="public" isAbstract="true">
      <eAnnotations xmi:id="_J6hQ8oV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6hQ84V5EemzzojpIDPlJA" key="documentation" value="&#xD;&#xA; The abstract class Element handles the elements, which can be functions,&#xD;&#xA; constants, variables or names.&#xD;&#xA; @author  Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.1&#xD;&#xA; &#xD;&#xA;"/>
      </eAnnotations>
      <ownedAttribute xmi:id="_J6v6cIV5EemzzojpIDPlJA" name="name" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_J6v6cYV5EemzzojpIDPlJA" name="representsName" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_J6v6coV5EemzzojpIDPlJA" name="" value="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_J6whgIV5EemzzojpIDPlJA" name="numberOfNames" visibility="private" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_J6whgYV5EemzzojpIDPlJA" name="" value="1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </defaultValue>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KHQscIV5EemzzojpIDPlJA" name="copy" specification="_J6xIkIV5EemzzojpIDPlJA" node="_KHZPUIV5EemzzojpIDPlJA _KHbEgIV5EemzzojpIDPlJA _KHcSoIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KHgkEIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KHcSoIV5EemzzojpIDPlJA" source="_KHbEgIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KHZPUIV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J6xIk4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KHbEgIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KHgkEIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KHcSoIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KHgkEIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KHhLIIV5EemzzojpIDPlJA" name="rename" specification="_J6zk0IV5EemzzojpIDPlJA" node="_KHhLIYV5EemzzojpIDPlJA _KHhLIoV5EemzzojpIDPlJA _KHhLI4V5EemzzojpIDPlJA _KHhLJIV5EemzzojpIDPlJA _KHpuAIV5EemzzojpIDPlJA _KHwbsIV5EemzzojpIDPlJA _KHxp0IV5EemzzojpIDPlJA _KHyQ4IV5EemzzojpIDPlJA _KH1UMIV5EemzzojpIDPlJA _KH1UM4V5EemzzojpIDPlJA _KH1UNIV5EemzzojpIDPlJA _KH17QoV5EemzzojpIDPlJA _KH17RoV5EemzzojpIDPlJA _KH17SYV5EemzzojpIDPlJA _KH17TYV5EemzzojpIDPlJA _KH2iUYV5EemzzojpIDPlJA _KH2iVIV5EemzzojpIDPlJA _KH2iVYV5EemzzojpIDPlJA _KH2iV4V5EemzzojpIDPlJA _KH2iWoV5EemzzojpIDPlJA _KH8o8IV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KHqVEIV5EemzzojpIDPlJA" name="InitNode_String newName=numberOfNames + &quot;N&quot;;" target="_KHpuAIV5EemzzojpIDPlJA" source="_KHhLI4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KHxp0YV5EemzzojpIDPlJA" name="String newName=numberOfNames +_If_0_cond" target="_KHwbsIV5EemzzojpIDPlJA" source="_KHpuAIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KHyQ4YV5EemzzojpIDPlJA" name="If_0_cond_Variable ret=new Variable(newName,true);" target="_KHyQ4IV5EemzzojpIDPlJA" source="_KHwbsIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KHyQ4oV5EemzzojpIDPlJA" value="e instanceof Variable"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH1UMYV5EemzzojpIDPlJA" name="Variable ret=new Variable(newN_numberOfNames++;" target="_KH1UMIV5EemzzojpIDPlJA" source="_KHyQ4IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH1UMoV5EemzzojpIDPlJA" name="numberOfNames++;_FinalNode" target="_KHhLJIV5EemzzojpIDPlJA" source="_KH1UMIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH17QIV5EemzzojpIDPlJA" name="If_0_cond_If_1_cond" target="_KH1UM4V5EemzzojpIDPlJA" source="_KHwbsIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KH17QYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH17Q4V5EemzzojpIDPlJA" name="If_1_cond_Constant ret=new Constant(newName,true);" target="_KH17QoV5EemzzojpIDPlJA" source="_KH1UM4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KH17RIV5EemzzojpIDPlJA" value="e instanceof Constant"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH17R4V5EemzzojpIDPlJA" name="Constant ret=new Constant(newN_numberOfNames++;" target="_KH17RoV5EemzzojpIDPlJA" source="_KH17QoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH17SIV5EemzzojpIDPlJA" name="numberOfNames++;_FinalNode" target="_KHhLJIV5EemzzojpIDPlJA" source="_KH17RoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH17SoV5EemzzojpIDPlJA" name="If_1_cond_Function ret=new Function(newName,true);" target="_KH17SYV5EemzzojpIDPlJA" source="_KH1UM4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KH17S4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH2iUIV5EemzzojpIDPlJA" name="Function ret=new Function(newN_numberOfNames++;" target="_KH17TYV5EemzzojpIDPlJA" source="_KH17SYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH2iUoV5EemzzojpIDPlJA" name="numberOfNames++;_Function f=(Function)e;" target="_KH2iUYV5EemzzojpIDPlJA" source="_KH17TYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH2iWIV5EemzzojpIDPlJA" name="int i=0_merge" target="_KH2iVIV5EemzzojpIDPlJA" source="_KH2iV4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH2iWYV5EemzzojpIDPlJA" name="For_0_merge_cond" target="_KH2iVYV5EemzzojpIDPlJA" source="_KH2iVIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH2iW4V5EemzzojpIDPlJA" name="For_0_cond_merge" target="_KH2iVIV5EemzzojpIDPlJA" source="_KH2iWoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KH2iXIV5EemzzojpIDPlJA" name="Function f=(Function)e;_int i=0" target="_KH2iV4V5EemzzojpIDPlJA" source="_KH2iUYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIA6YIV5EemzzojpIDPlJA" name="For_0_cond_ret.addArgument(rename(f.getArgument(i)));" target="_KH8o8IV5EemzzojpIDPlJA" source="_KH2iVYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KIA6YYV5EemzzojpIDPlJA" value="i &lt; f.arity()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIA6YoV5EemzzojpIDPlJA" name="ret.addArgument(rename(f.getAr_i++" target="_KH2iWoV5EemzzojpIDPlJA" source="_KH8o8IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIA6Y4V5EemzzojpIDPlJA" name="For_0_cond_FinalNode" target="_KHhLJIV5EemzzojpIDPlJA" source="_KH2iVYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KIA6ZIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIA6ZYV5EemzzojpIDPlJA" name="If_1_merge_If_0_merge" target="_KHxp0IV5EemzzojpIDPlJA" source="_KH1UNIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIA6ZoV5EemzzojpIDPlJA" name="If_0_merge_FinalNode" target="_KHhLJIV5EemzzojpIDPlJA" source="_KHxp0IV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KHumgIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KHyQ44V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KH17RYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KH17TIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KH2iU4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KH2iVoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KHhLIYV5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J6zk04V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KHhLIoV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J6zk1IV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KHhLI4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KHqVEIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KHhLJIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KH1UMoV5EemzzojpIDPlJA _KH17SIV5EemzzojpIDPlJA _KIA6Y4V5EemzzojpIDPlJA _KIA6ZoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KHpuAIV5EemzzojpIDPlJA" name="String newName=numberOfNames + &quot;N&quot;;" incoming="_KHqVEIV5EemzzojpIDPlJA" outgoing="_KHxp0YV5EemzzojpIDPlJA" variable="_KHumgIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KHwbsIV5EemzzojpIDPlJA" name="If_0_cond" incoming="_KHxp0YV5EemzzojpIDPlJA" outgoing="_KHyQ4YV5EemzzojpIDPlJA _KH17QIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KHxp0IV5EemzzojpIDPlJA" name="If_0_merge" incoming="_KIA6ZYV5EemzzojpIDPlJA" outgoing="_KIA6ZoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KHyQ4IV5EemzzojpIDPlJA" name="Variable ret=new Variable(newName,true);" incoming="_KHyQ4YV5EemzzojpIDPlJA" outgoing="_KH1UMYV5EemzzojpIDPlJA" variable="_KHyQ44V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KH1UMIV5EemzzojpIDPlJA" name="numberOfNames++;" incoming="_KH1UMYV5EemzzojpIDPlJA" outgoing="_KH1UMoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>numberOfNames++;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KH1UM4V5EemzzojpIDPlJA" name="If_1_cond" incoming="_KH17QIV5EemzzojpIDPlJA" outgoing="_KH17Q4V5EemzzojpIDPlJA _KH17SoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KH1UNIV5EemzzojpIDPlJA" name="If_1_merge" outgoing="_KIA6ZYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KH17QoV5EemzzojpIDPlJA" name="Constant ret=new Constant(newName,true);" incoming="_KH17Q4V5EemzzojpIDPlJA" outgoing="_KH17R4V5EemzzojpIDPlJA" variable="_KH17RYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KH17RoV5EemzzojpIDPlJA" name="numberOfNames++;" incoming="_KH17R4V5EemzzojpIDPlJA" outgoing="_KH17SIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>numberOfNames++;
</body>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KH17SYV5EemzzojpIDPlJA" name="Function ret=new Function(newName,true);" incoming="_KH17SoV5EemzzojpIDPlJA" outgoing="_KH2iUIV5EemzzojpIDPlJA" variable="_KH17TIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KH17TYV5EemzzojpIDPlJA" name="numberOfNames++;" incoming="_KH2iUIV5EemzzojpIDPlJA" outgoing="_KH2iUoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>numberOfNames++;
</body>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KH2iUYV5EemzzojpIDPlJA" name="Function f=(Function)e;" incoming="_KH2iUoV5EemzzojpIDPlJA" outgoing="_KH2iXIV5EemzzojpIDPlJA" variable="_KH2iU4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KH2iVIV5EemzzojpIDPlJA" name="For_0_merge" incoming="_KH2iWIV5EemzzojpIDPlJA _KH2iW4V5EemzzojpIDPlJA" outgoing="_KH2iWYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KH2iVYV5EemzzojpIDPlJA" name="For_0_cond" incoming="_KH2iWYV5EemzzojpIDPlJA" outgoing="_KIA6YIV5EemzzojpIDPlJA _KIA6Y4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KH2iV4V5EemzzojpIDPlJA" name="int i=0" incoming="_KH2iXIV5EemzzojpIDPlJA" outgoing="_KH2iWIV5EemzzojpIDPlJA" variable="_KH2iVoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KH2iWoV5EemzzojpIDPlJA" name="i++" incoming="_KIA6YoV5EemzzojpIDPlJA" outgoing="_KH2iW4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KH8o8IV5EemzzojpIDPlJA" name="ret.addArgument(rename(f.getArgument(i)));" incoming="_KIA6YIV5EemzzojpIDPlJA" outgoing="_KIA6YoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIATUIV5EemzzojpIDPlJA" name="rename(f.getArgument(i))"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIA6Z4V5EemzzojpIDPlJA" name="toString" specification="_J61aAIV5EemzzojpIDPlJA" node="_KIA6aIV5EemzzojpIDPlJA _KIBhcIV5EemzzojpIDPlJA _KIBhcYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIBhcoV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIBhcYV5EemzzojpIDPlJA" source="_KIBhcIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIA6aIV5EemzzojpIDPlJA" parameter="_J61aAYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIBhcIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIBhcoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIBhcYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIBhcoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIBhc4V5EemzzojpIDPlJA" name="toFullString" specification="_J632QIV5EemzzojpIDPlJA" node="_KIBhdIV5EemzzojpIDPlJA _KIBhdYV5EemzzojpIDPlJA _KIBhdoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIBhd4V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIBhdoV5EemzzojpIDPlJA" source="_KIBhdYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIBhdIV5EemzzojpIDPlJA" parameter="_J632Q4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIBhdYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIBhd4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIBhdoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIBhd4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIBheIV5EemzzojpIDPlJA" name="getName" specification="_J632RIV5EemzzojpIDPlJA" node="_KIBheYV5EemzzojpIDPlJA _KIBheoV5EemzzojpIDPlJA _KIBhe4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIBhfIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIBhe4V5EemzzojpIDPlJA" source="_KIBheoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIBheYV5EemzzojpIDPlJA" parameter="_J632R4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIBheoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIBhfIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIBhe4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIBhfIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KICIgIV5EemzzojpIDPlJA" name="setName" specification="_J65rcIV5EemzzojpIDPlJA" node="_KICIgYV5EemzzojpIDPlJA _KICIgoV5EemzzojpIDPlJA _KICIg4V5EemzzojpIDPlJA _KICIhIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KICIhYV5EemzzojpIDPlJA" name="InitNode_this.name=name;" target="_KICIhIV5EemzzojpIDPlJA" source="_KICIgoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KICIhoV5EemzzojpIDPlJA" name="this.name=name;_FinalNode" target="_KICIg4V5EemzzojpIDPlJA" source="_KICIhIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KICIgYV5EemzzojpIDPlJA" name="name" parameter="_J65rc4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KICIgoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KICIhYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KICIg4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KICIhoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KICIhIV5EemzzojpIDPlJA" name="this.name=name;" incoming="_KICIhYV5EemzzojpIDPlJA" outgoing="_KICIhoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.name=name;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KICIh4V5EemzzojpIDPlJA" name="representName" specification="_J665kIV5EemzzojpIDPlJA" node="_KICIiIV5EemzzojpIDPlJA _KICIiYV5EemzzojpIDPlJA _KICIioV5EemzzojpIDPlJA _KICIi4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KICvkIV5EemzzojpIDPlJA" name="InitNode_representsName=isName;" target="_KICIi4V5EemzzojpIDPlJA" source="_KICIiYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KICvkYV5EemzzojpIDPlJA" name="representsName=isName;_FinalNode" target="_KICIioV5EemzzojpIDPlJA" source="_KICIi4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KICIiIV5EemzzojpIDPlJA" name="isName" parameter="_J665k4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KICIiYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KICvkIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KICIioV5EemzzojpIDPlJA" name="FinalNode" incoming="_KICvkYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KICIi4V5EemzzojpIDPlJA" name="representsName=isName;" incoming="_KICvkIV5EemzzojpIDPlJA" outgoing="_KICvkYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>representsName=isName;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KICvkoV5EemzzojpIDPlJA" name="equals" specification="_J68uwIV5EemzzojpIDPlJA" node="_KICvk4V5EemzzojpIDPlJA _KICvlIV5EemzzojpIDPlJA _KICvlYV5EemzzojpIDPlJA _KICvloV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KICvl4V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KICvloV5EemzzojpIDPlJA" source="_KICvlYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KICvk4V5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J68uw4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KICvlIV5EemzzojpIDPlJA" parameter="_J68uxIV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KICvlYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KICvl4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KICvloV5EemzzojpIDPlJA" name="FinalNode" incoming="_KICvl4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KICvmIV5EemzzojpIDPlJA" name="hashCode" specification="_J6984IV5EemzzojpIDPlJA" node="_KICvmYV5EemzzojpIDPlJA _KICvmoV5EemzzojpIDPlJA _KICvm4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KICvnIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KICvm4V5EemzzojpIDPlJA" source="_KICvmoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KICvmYV5EemzzojpIDPlJA" parameter="_J6984YV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KICvmoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KICvnIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KICvm4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KICvnIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIDWoIV5EemzzojpIDPlJA" name="equals" specification="_J7EDgIV5EemzzojpIDPlJA" node="_KIDWoYV5EemzzojpIDPlJA _KIDWooV5EemzzojpIDPlJA _KIDWo4V5EemzzojpIDPlJA _KIDWpIV5EemzzojpIDPlJA _KIDWpYV5EemzzojpIDPlJA _KIDWpoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIDWp4V5EemzzojpIDPlJA" name="InitNode_If_2_cond" target="_KIDWpYV5EemzzojpIDPlJA" source="_KIDWo4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIDWqIV5EemzzojpIDPlJA" name="If_2_else" target="_KIDWpoV5EemzzojpIDPlJA" source="_KIDWpYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KID9sYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KID9soV5EemzzojpIDPlJA" name="If_2_cond_FinalNode" target="_KIDWpIV5EemzzojpIDPlJA" source="_KIDWpYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KID9sIV5EemzzojpIDPlJA" value="(obj instanceof Element)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KID9s4V5EemzzojpIDPlJA" name="If_2_merge_FinalNode" target="_KIDWpIV5EemzzojpIDPlJA" source="_KIDWpoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIDWoYV5EemzzojpIDPlJA" name="obj" type="_J7BnQoV5EemzzojpIDPlJA" parameter="_J7EDgYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIDWooV5EemzzojpIDPlJA" parameter="_J7EDgoV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIDWo4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KIDWp4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIDWpIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KID9soV5EemzzojpIDPlJA _KID9s4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KIDWpYV5EemzzojpIDPlJA" name="If_2_cond" incoming="_KIDWp4V5EemzzojpIDPlJA" outgoing="_KIDWqIV5EemzzojpIDPlJA _KID9soV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KIDWpoV5EemzzojpIDPlJA" name="If_2_merge" incoming="_KIDWqIV5EemzzojpIDPlJA" outgoing="_KID9s4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KID9tIV5EemzzojpIDPlJA" name="occurs" specification="_J7HG0IV5EemzzojpIDPlJA" node="_KID9tYV5EemzzojpIDPlJA _KID9toV5EemzzojpIDPlJA _KID9t4V5EemzzojpIDPlJA _KID9uIV5EemzzojpIDPlJA">
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KID9tYV5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J7HG04V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KID9toV5EemzzojpIDPlJA" parameter="_J7HG1IV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KID9t4V5EemzzojpIDPlJA" name="InitNode"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KID9uIV5EemzzojpIDPlJA" name="FinalNode"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIEkwIV5EemzzojpIDPlJA" name="isName" specification="_J7Ht4IV5EemzzojpIDPlJA" node="_KIEkwYV5EemzzojpIDPlJA _KIEkwoV5EemzzojpIDPlJA _KIEkw4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIEkxIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIEkw4V5EemzzojpIDPlJA" source="_KIEkwoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIEkwYV5EemzzojpIDPlJA" parameter="_J7Ht44V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIEkwoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIEkxIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIEkw4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIEkxIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIEkxYV5EemzzojpIDPlJA" name="reset" specification="_J7IU8IV5EemzzojpIDPlJA" node="_KIEkxoV5EemzzojpIDPlJA _KIEkx4V5EemzzojpIDPlJA _KIEkyIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIEkyYV5EemzzojpIDPlJA" name="InitNode_numberOfNames=1;" target="_KIEkyIV5EemzzojpIDPlJA" source="_KIEkxoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIEkyoV5EemzzojpIDPlJA" name="numberOfNames=1;_FinalNode" target="_KIEkx4V5EemzzojpIDPlJA" source="_KIEkyIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIEkxoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIEkyYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIEkx4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIEkyoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIEkyIV5EemzzojpIDPlJA" name="numberOfNames=1;" incoming="_KIEkyYV5EemzzojpIDPlJA" outgoing="_KIEkyoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>numberOfNames=1;
</body>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_J6xIkIV5EemzzojpIDPlJA" name="copy" visibility="public" isAbstract="true" method="_KHQscIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J6xIkYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J6xIkoV5EemzzojpIDPlJA" key="documentation" value=" Creates a copy of an element.&#xD;&#xA; @param e the element to copy.&#xD;&#xA; @return the copy.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J6xIk4V5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J6zk0IV5EemzzojpIDPlJA" name="rename" visibility="public" isStatic="true" method="_KHhLIIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J6zk0YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J6zk0oV5EemzzojpIDPlJA" key="documentation" value=" Creates an element with a new name from an element.&#xD;&#xA; @param e the element that is renamed.&#xD;&#xA; @return A new name.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J6zk04V5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J6zk1IV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J61aAIV5EemzzojpIDPlJA" name="toString" visibility="public" isAbstract="true" method="_KIA6Z4V5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_J61aAYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J632QIV5EemzzojpIDPlJA" name="toFullString" visibility="public" isAbstract="true" method="_KIBhc4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J632QYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J632QoV5EemzzojpIDPlJA" key="documentation" value=" Full string representation.&#xD;&#xA; @return a string representation.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J632Q4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J632RIV5EemzzojpIDPlJA" name="getName" visibility="public" method="_KIBheIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J632RYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J632RoV5EemzzojpIDPlJA" key="documentation" value=" @return the Name.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J632R4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J65rcIV5EemzzojpIDPlJA" name="setName" visibility="public" method="_KICIgIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J65rcYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J65rcoV5EemzzojpIDPlJA" key="documentation" value=" @param name the Name to set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J65rc4V5EemzzojpIDPlJA" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J665kIV5EemzzojpIDPlJA" name="representName" visibility="protected" method="_KICIh4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J665kYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J665koV5EemzzojpIDPlJA" key="documentation" value=" Set a value, that indicates if this Element represents a Name.&#xD;&#xA; @param isName {@code boolean} indicating if this represents a Name.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J665k4V5EemzzojpIDPlJA" name="isName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J68uwIV5EemzzojpIDPlJA" name="equals" visibility="public" method="_KICvkoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J68uwYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J68uwoV5EemzzojpIDPlJA" key="documentation" value=" Test if this is equal to another element, where equality means, the &#xD;&#xA; elements have the same name.&#xD;&#xA; @param e The other element to test equality with.&#xD;&#xA; @return {@code boolean} true iff the elements are the same.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J68uw4V5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J68uxIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J6984IV5EemzzojpIDPlJA" name="hashCode" visibility="public" method="_KICvmIV5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_J6984YV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J7EDgIV5EemzzojpIDPlJA" name="equals" visibility="public" method="_KIDWoIV5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_J7EDgYV5EemzzojpIDPlJA" name="obj" type="_J7BnQoV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J7EDgoV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J7HG0IV5EemzzojpIDPlJA" name="occurs" visibility="public" isAbstract="true" method="_KID9tIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J7HG0YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J7HG0oV5EemzzojpIDPlJA" key="documentation" value=" Checks if another element occurs in this term.&#xD;&#xA; @param e The element to search for.&#xD;&#xA; @return {@code boolean} true iff the element occurs.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J7HG04V5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J7HG1IV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J7Ht4IV5EemzzojpIDPlJA" name="isName" visibility="public" method="_KIEkwIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J7Ht4YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J7Ht4oV5EemzzojpIDPlJA" key="documentation" value=" Get a boolean value, that indicates if this Element represents a Name.&#xD;&#xA; @return {@code boolean} indicating if this is a Name.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J7Ht44V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J7IU8IV5EemzzojpIDPlJA" name="reset" visibility="public" isStatic="true" method="_KIEkxYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J7IU8YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J7IU8oV5EemzzojpIDPlJA" key="documentation" value=" Resets the number of names used.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6hQ9IV5EemzzojpIDPlJA" name="Name" visibility="public">
      <eAnnotations xmi:id="_J6hQ9YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6hQ9oV5EemzzojpIDPlJA" key="documentation" value="&#xD;&#xA; The class Name handles the names.&#xD;&#xA; @author  Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA; &#xD;&#xA;"/>
      </eAnnotations>
      <generalization xmi:id="_J7KxMIV5EemzzojpIDPlJA" general="_J6hQ8YV5EemzzojpIDPlJA"/>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIGZ8IV5EemzzojpIDPlJA" name="occurs" specification="_J7PCoIV5EemzzojpIDPlJA" node="_KIGZ8YV5EemzzojpIDPlJA _KIGZ8oV5EemzzojpIDPlJA _KIGZ84V5EemzzojpIDPlJA _KIGZ9IV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIGZ9YV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIGZ9IV5EemzzojpIDPlJA" source="_KIGZ84V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIGZ8YV5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J7PCo4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIGZ8oV5EemzzojpIDPlJA" parameter="_J7PCpIV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIGZ84V5EemzzojpIDPlJA" name="InitNode" outgoing="_KIGZ9YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIGZ9IV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIGZ9YV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIGZ9oV5EemzzojpIDPlJA" name="toString" specification="_J7SF8IV5EemzzojpIDPlJA" node="_KIGZ94V5EemzzojpIDPlJA _KIGZ-IV5EemzzojpIDPlJA _KIGZ-YV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIGZ-oV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIGZ-YV5EemzzojpIDPlJA" source="_KIGZ-IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIGZ94V5EemzzojpIDPlJA" parameter="_J7SF8YV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIGZ-IV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIGZ-oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIGZ-YV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIGZ-oV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIHBAIV5EemzzojpIDPlJA" name="copy" specification="_J8SLgIV5EemzzojpIDPlJA" node="_KIHBAYV5EemzzojpIDPlJA _KIHBAoV5EemzzojpIDPlJA _KIHBA4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIHBBIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIHBA4V5EemzzojpIDPlJA" source="_KIHBAoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIHBAYV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J8SLg4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIHBAoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIHBBIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIHBA4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIHBBIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIHBBYV5EemzzojpIDPlJA" name="toFullString" specification="_J8VO0IV5EemzzojpIDPlJA" node="_KIHBBoV5EemzzojpIDPlJA _KIHBB4V5EemzzojpIDPlJA _KIHBCIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIHBCYV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIHBCIV5EemzzojpIDPlJA" source="_KIHBB4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIHBBoV5EemzzojpIDPlJA" parameter="_J8VO04V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIHBB4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KIHBCYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIHBCIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIHBCYV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedOperation xmi:id="_J7PCoIV5EemzzojpIDPlJA" name="occurs" visibility="public" method="_KIGZ8IV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J7PCoYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J7PCooV5EemzzojpIDPlJA" key="documentation" value=" Checks if another element occurs in this term.&#xD;&#xA; @param e The element to search for.&#xD;&#xA; @return {@code boolean} true iff the element occurs.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J7PCo4V5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J7PCpIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J7SF8IV5EemzzojpIDPlJA" name="toString" visibility="public" method="_KIGZ9oV5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_J7SF8YV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J8SLgIV5EemzzojpIDPlJA" name="copy" visibility="public" method="_KIHBAIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8SLgYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8SLgoV5EemzzojpIDPlJA" key="documentation" value=" Creates a copy of an element.&#xD;&#xA; @param e the element to copy.&#xD;&#xA; @return the copy.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8SLg4V5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J8VO0IV5EemzzojpIDPlJA" name="toFullString" visibility="public" method="_KIHBBYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8VO0YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8VO0oV5EemzzojpIDPlJA" key="documentation" value=" Full string representation.&#xD;&#xA; @return a string representation.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8VO04V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6h4AIV5EemzzojpIDPlJA" name="Constant" visibility="public">
      <eAnnotations xmi:id="_J6h4AYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6h4AoV5EemzzojpIDPlJA" key="documentation" value="&#xD;&#xA; The class Constants handles the constants.&#xD;&#xA; @author  Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA; &#xD;&#xA;"/>
      </eAnnotations>
      <generalization xmi:id="_J8XrEIV5EemzzojpIDPlJA" general="_J6ifEIV5EemzzojpIDPlJA"/>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KII2MIV5EemzzojpIDPlJA" name="Constant" specification="_J8YSIIV5EemzzojpIDPlJA" node="_KII2MYV5EemzzojpIDPlJA _KII2MoV5EemzzojpIDPlJA _KII2M4V5EemzzojpIDPlJA _KIJdQIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIJdQYV5EemzzojpIDPlJA" name="InitNode_super(name);" target="_KIJdQIV5EemzzojpIDPlJA" source="_KII2MoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIJdQoV5EemzzojpIDPlJA" name="super(name);_FinalNode" target="_KII2M4V5EemzzojpIDPlJA" source="_KIJdQIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KII2MYV5EemzzojpIDPlJA" name="name" parameter="_J8YSI4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KII2MoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIJdQYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KII2M4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIJdQoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIJdQIV5EemzzojpIDPlJA" name="super(name);" incoming="_KIJdQYV5EemzzojpIDPlJA" outgoing="_KIJdQoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>super(name);
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIJdQ4V5EemzzojpIDPlJA" name="Constant" specification="_J8Y5MIV5EemzzojpIDPlJA" node="_KIJdRIV5EemzzojpIDPlJA _KIJdRYV5EemzzojpIDPlJA _KIJdRoV5EemzzojpIDPlJA _KIJdR4V5EemzzojpIDPlJA _KIKEUIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIKEUYV5EemzzojpIDPlJA" name="InitNode_super(name,isName);" target="_KIKEUIV5EemzzojpIDPlJA" source="_KIJdRoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIKEUoV5EemzzojpIDPlJA" name="super(name,isName);_FinalNode" target="_KIJdR4V5EemzzojpIDPlJA" source="_KIKEUIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIJdRIV5EemzzojpIDPlJA" name="name" parameter="_J8Y5M4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIJdRYV5EemzzojpIDPlJA" name="isName" parameter="_J8Y5NIV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIJdRoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIKEUYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIJdR4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIKEUoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIKEUIV5EemzzojpIDPlJA" name="super(name,isName);" incoming="_KIKEUYV5EemzzojpIDPlJA" outgoing="_KIKEUoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>super(name,isName);
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIKEU4V5EemzzojpIDPlJA" name="toString" specification="_J8auYIV5EemzzojpIDPlJA" node="_KIKEVIV5EemzzojpIDPlJA _KIKEVYV5EemzzojpIDPlJA _KIKEVoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIKEV4V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIKEVoV5EemzzojpIDPlJA" source="_KIKEVYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIKEVIV5EemzzojpIDPlJA" parameter="_J8auYYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIKEVYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIKEV4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIKEVoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIKEV4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIKrYIV5EemzzojpIDPlJA" name="copy" specification="_J8eYwIV5EemzzojpIDPlJA" node="_KIKrYYV5EemzzojpIDPlJA _KIKrYoV5EemzzojpIDPlJA _KIKrY4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIKrZIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIKrY4V5EemzzojpIDPlJA" source="_KIKrYoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIKrYYV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J8eYw4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIKrYoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIKrZIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIKrY4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIKrZIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedOperation xmi:id="_J8YSIIV5EemzzojpIDPlJA" name="Constant" visibility="public" method="_KII2MIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8YSIYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8YSIoV5EemzzojpIDPlJA" key="documentation" value=" This is the constructor for the class Constant.&#xD;&#xA; Constants are treated as 0-ary functions.&#xD;&#xA; @param name The name.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8YSI4V5EemzzojpIDPlJA" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J8Y5MIV5EemzzojpIDPlJA" name="Constant" visibility="public" method="_KIJdQ4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8Y5MYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8Y5MoV5EemzzojpIDPlJA" key="documentation" value=" This is the constructor to create a Constant that can represent a Name.&#xD;&#xA; @param name The name.&#xD;&#xA; @param isName {@code boolean} indicating if this is a Name.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8Y5M4V5EemzzojpIDPlJA" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J8Y5NIV5EemzzojpIDPlJA" name="isName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J8auYIV5EemzzojpIDPlJA" name="toString" visibility="public" method="_KIKEU4V5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_J8auYYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J8eYwIV5EemzzojpIDPlJA" name="copy" visibility="public" method="_KIKrYIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8eYwYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8eYwoV5EemzzojpIDPlJA" key="documentation" value=" Creates a copy of an element.&#xD;&#xA; @param e the element to copy.&#xD;&#xA; @return the copy.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8eYw4V5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6h4A4V5EemzzojpIDPlJA" name="Variable" visibility="public">
      <eAnnotations xmi:id="_J6h4BIV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6h4BYV5EemzzojpIDPlJA" key="documentation" value="&#xD;&#xA; The class Variable handles the variables.&#xD;&#xA; @author  Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA; &#xD;&#xA;"/>
      </eAnnotations>
      <generalization xmi:id="_J8hcEIV5EemzzojpIDPlJA" general="_J6hQ8YV5EemzzojpIDPlJA"/>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KINHoIV5EemzzojpIDPlJA" name="toString" specification="_J8jRQIV5EemzzojpIDPlJA" node="_KINHoYV5EemzzojpIDPlJA _KINHooV5EemzzojpIDPlJA _KINHo4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KINHpIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KINHo4V5EemzzojpIDPlJA" source="_KINHooV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KINHoYV5EemzzojpIDPlJA" parameter="_J8jRQYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KINHooV5EemzzojpIDPlJA" name="InitNode" outgoing="_KINHpIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KINHo4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KINHpIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KINHpYV5EemzzojpIDPlJA" name="occurs" specification="_J8nisIV5EemzzojpIDPlJA" node="_KINHpoV5EemzzojpIDPlJA _KINHp4V5EemzzojpIDPlJA _KINHqIV5EemzzojpIDPlJA _KINHqYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KINHqoV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KINHqYV5EemzzojpIDPlJA" source="_KINHqIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KINHpoV5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J8nis4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KINHp4V5EemzzojpIDPlJA" parameter="_J8nitIV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KINHqIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KINHqoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KINHqYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KINHqoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KINHq4V5EemzzojpIDPlJA" name="replace" specification="_J8r0IIV5EemzzojpIDPlJA" node="_KINHrIV5EemzzojpIDPlJA _KINusIV5EemzzojpIDPlJA _KINusYV5EemzzojpIDPlJA _KINusoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KINus4V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KINusoV5EemzzojpIDPlJA" source="_KINusYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KINHrIV5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J8r0I4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KINusIV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J8r0JIV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KINusYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KINus4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KINusoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KINus4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KINutIV5EemzzojpIDPlJA" name="mapsto" specification="_J8uQYIV5EemzzojpIDPlJA" node="_KINutYV5EemzzojpIDPlJA _KINutoV5EemzzojpIDPlJA _KINut4V5EemzzojpIDPlJA _KINuuIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KINuuoV5EemzzojpIDPlJA" name="InitNode_setName(v.getName());" target="_KINuuIV5EemzzojpIDPlJA" source="_KINutoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KINuu4V5EemzzojpIDPlJA" name="setName(v.getName());_FinalNode" target="_KINut4V5EemzzojpIDPlJA" source="_KINuuIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KINutYV5EemzzojpIDPlJA" name="v" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J8uQY4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KINutoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KINuuoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KINut4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KINuu4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KINuuIV5EemzzojpIDPlJA" name="setName(v.getName());" incoming="_KINuuoV5EemzzojpIDPlJA" outgoing="_KINuu4V5EemzzojpIDPlJA">
          <argument xmi:id="_KINuuYV5EemzzojpIDPlJA" name="v.getName()"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KINuvIV5EemzzojpIDPlJA" name="Variable" specification="_J8u3cIV5EemzzojpIDPlJA" node="_KIOVwIV5EemzzojpIDPlJA _KIOVwYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIOVwoV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIOVwYV5EemzzojpIDPlJA" source="_KIOVwIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIOVwIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIOVwoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIOVwYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIOVwoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIOVw4V5EemzzojpIDPlJA" name="Variable" specification="_J8vegIV5EemzzojpIDPlJA" node="_KIOVxIV5EemzzojpIDPlJA _KIOVxYV5EemzzojpIDPlJA _KIOVxoV5EemzzojpIDPlJA _KIOVx4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIOVyYV5EemzzojpIDPlJA" name="InitNode_this.setName(name);" target="_KIOVx4V5EemzzojpIDPlJA" source="_KIOVxYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIOVyoV5EemzzojpIDPlJA" name="this.setName(name);_FinalNode" target="_KIOVxoV5EemzzojpIDPlJA" source="_KIOVx4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIOVxIV5EemzzojpIDPlJA" name="name" parameter="_J8veg4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIOVxYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIOVyYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIOVxoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIOVyoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIOVx4V5EemzzojpIDPlJA" name="this.setName(name);" incoming="_KIOVyYV5EemzzojpIDPlJA" outgoing="_KIOVyoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIOVyIV5EemzzojpIDPlJA" name="name"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIOVy4V5EemzzojpIDPlJA" name="Variable" specification="_J8wFkIV5EemzzojpIDPlJA" node="_KIO80IV5EemzzojpIDPlJA _KIO80YV5EemzzojpIDPlJA _KIO80oV5EemzzojpIDPlJA _KIO804V5EemzzojpIDPlJA _KIO81IV5EemzzojpIDPlJA _KIO81oV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIO81YV5EemzzojpIDPlJA" name="InitNode_this(name);" target="_KIO81IV5EemzzojpIDPlJA" source="_KIO80oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIO82IV5EemzzojpIDPlJA" name="this(name);_representName(isName);" target="_KIO81oV5EemzzojpIDPlJA" source="_KIO81IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIO82YV5EemzzojpIDPlJA" name="representName(isName);_FinalNode" target="_KIO804V5EemzzojpIDPlJA" source="_KIO81oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIO80IV5EemzzojpIDPlJA" name="name" parameter="_J8wFk4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIO80YV5EemzzojpIDPlJA" name="isName" parameter="_J8wFlIV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIO80oV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIO81YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIO804V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIO82YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIO81IV5EemzzojpIDPlJA" name="this(name);" incoming="_KIO81YV5EemzzojpIDPlJA" outgoing="_KIO82IV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this(name);
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIO81oV5EemzzojpIDPlJA" name="representName(isName);" incoming="_KIO82IV5EemzzojpIDPlJA" outgoing="_KIO82YV5EemzzojpIDPlJA">
          <argument xmi:id="_KIO814V5EemzzojpIDPlJA" name="isName"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIPj4IV5EemzzojpIDPlJA" name="copy" specification="_J8zI4IV5EemzzojpIDPlJA" node="_KIPj4YV5EemzzojpIDPlJA _KIPj4oV5EemzzojpIDPlJA _KIPj44V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIPj5IV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIPj44V5EemzzojpIDPlJA" source="_KIPj4oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIPj4YV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J8zI44V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIPj4oV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIPj5IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIPj44V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIPj5IV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIPj5YV5EemzzojpIDPlJA" name="toFullString" specification="_J9xZQIV5EemzzojpIDPlJA" node="_KIPj5oV5EemzzojpIDPlJA _KIPj54V5EemzzojpIDPlJA _KIPj6IV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIPj6YV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIPj6IV5EemzzojpIDPlJA" source="_KIPj54V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIPj5oV5EemzzojpIDPlJA" parameter="_J9xZQ4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIPj54V5EemzzojpIDPlJA" name="InitNode" outgoing="_KIPj6YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIPj6IV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIPj6YV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedOperation xmi:id="_J8jRQIV5EemzzojpIDPlJA" name="toString" visibility="public" method="_KINHoIV5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_J8jRQYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J8nisIV5EemzzojpIDPlJA" name="occurs" visibility="public" method="_KINHpYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8nisYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8nisoV5EemzzojpIDPlJA" key="documentation" value=" Checks if another element occurs in this term.&#xD;&#xA; @param e The element to search for.&#xD;&#xA; @return {@code boolean} true iff the element occurs.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8nis4V5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J8nitIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J8r0IIV5EemzzojpIDPlJA" name="replace" visibility="public" isStatic="true" method="_KINHq4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8r0IYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8r0IoV5EemzzojpIDPlJA" key="documentation" value=" Replaces a Variable with an Element.&#xD;&#xA; @param e the element the Variable is replaced with&#xD;&#xA; @return A new Element.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8r0I4V5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J8r0JIV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J8uQYIV5EemzzojpIDPlJA" name="mapsto" visibility="public" method="_KINutIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8uQYYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8uQYoV5EemzzojpIDPlJA" key="documentation" value=" Unification of 2 variables&#xD;&#xA; @param v the element to unify with.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8uQY4V5EemzzojpIDPlJA" name="v" type="_J6hQ8YV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J8u3cIV5EemzzojpIDPlJA" name="Variable" visibility="public" method="_KINuvIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8u3cYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8u3coV5EemzzojpIDPlJA" key="documentation" value=" This is the default constructor for the class Variable.&#xD;&#xA; @param name The name.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_J8vegIV5EemzzojpIDPlJA" name="Variable" visibility="public" method="_KIOVw4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8vegYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8vegoV5EemzzojpIDPlJA" key="documentation" value=" This is the constructor for the class Variable.&#xD;&#xA; @param name The name.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8veg4V5EemzzojpIDPlJA" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J8wFkIV5EemzzojpIDPlJA" name="Variable" visibility="public" method="_KIOVy4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8wFkYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8wFkoV5EemzzojpIDPlJA" key="documentation" value=" This is the constructor to create a Variable that can represent a Name.&#xD;&#xA; @param name The name.&#xD;&#xA; @param isName {@code boolean} indicating if this is a Name.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8wFk4V5EemzzojpIDPlJA" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J8wFlIV5EemzzojpIDPlJA" name="isName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J8zI4IV5EemzzojpIDPlJA" name="copy" visibility="public" method="_KIPj4IV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J8zI4YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J8zI4oV5EemzzojpIDPlJA" key="documentation" value=" Creates a copy of an element.&#xD;&#xA; @param e the element to copy.&#xD;&#xA; @return the copy.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J8zI44V5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J9xZQIV5EemzzojpIDPlJA" name="toFullString" visibility="public" method="_KIPj5YV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J9xZQYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J9xZQoV5EemzzojpIDPlJA" key="documentation" value=" Full string representation.&#xD;&#xA; @return a string representation.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J9xZQ4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6ifEIV5EemzzojpIDPlJA" name="Function" visibility="public">
      <eAnnotations xmi:id="_J6ifEYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6ifEoV5EemzzojpIDPlJA" key="documentation" value="&#xD;&#xA; The class Function handles the functions.&#xD;&#xA; @author  Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA; &#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_J97KQoV5EemzzojpIDPlJA" importedElement="_J97KQYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J97KQ4V5EemzzojpIDPlJA" importedElement="_J6hQ8YV5EemzzojpIDPlJA" visibility="private"/>
      <generalization xmi:id="_J96jMIV5EemzzojpIDPlJA" general="_J6hQ8YV5EemzzojpIDPlJA"/>
      <ownedAttribute xmi:id="_J9-NkIV5EemzzojpIDPlJA" name="arguments" visibility="private" type="_J6hQ8YV5EemzzojpIDPlJA" isOrdered="true" isUnique="false" association="_KFr_IoV5EemzzojpIDPlJA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_J9-NkYV5EemzzojpIDPlJA" value="*"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIW4oIV5EemzzojpIDPlJA" name="Function" specification="_J9-0oIV5EemzzojpIDPlJA" node="_KIW4oYV5EemzzojpIDPlJA _KIW4ooV5EemzzojpIDPlJA _KIW4o4V5EemzzojpIDPlJA _KIW4pIV5EemzzojpIDPlJA _KIXfsYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIXfsIV5EemzzojpIDPlJA" name="InitNode_this.setName(name);" target="_KIW4pIV5EemzzojpIDPlJA" source="_KIW4ooV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIXfsoV5EemzzojpIDPlJA" name="this.setName(name);_arguments=new ArrayList&lt;>();" target="_KIXfsYV5EemzzojpIDPlJA" source="_KIW4pIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIXfs4V5EemzzojpIDPlJA" name="arguments=new ArrayList&lt;>();_FinalNode" target="_KIW4o4V5EemzzojpIDPlJA" source="_KIXfsYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIW4oYV5EemzzojpIDPlJA" name="name" parameter="_J9-0o4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIW4ooV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIXfsIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIW4o4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIXfs4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIW4pIV5EemzzojpIDPlJA" name="this.setName(name);" incoming="_KIXfsIV5EemzzojpIDPlJA" outgoing="_KIXfsoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIW4pYV5EemzzojpIDPlJA" name="name"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIXfsYV5EemzzojpIDPlJA" name="arguments=new ArrayList&lt;>();" incoming="_KIXfsoV5EemzzojpIDPlJA" outgoing="_KIXfs4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>arguments=new ArrayList&lt;>();
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIXftIV5EemzzojpIDPlJA" name="getArguments" specification="_J-ACwIV5EemzzojpIDPlJA" node="_KIXftYV5EemzzojpIDPlJA _KIXftoV5EemzzojpIDPlJA _KIXft4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIXfuIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIXft4V5EemzzojpIDPlJA" source="_KIXftoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIXftYV5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" parameter="_J-ACw4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIXftoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIXfuIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIXft4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIXfuIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIYGwIV5EemzzojpIDPlJA" name="addArgument" specification="_J-GwcIV5EemzzojpIDPlJA" node="_KIYGwYV5EemzzojpIDPlJA _KIYGwoV5EemzzojpIDPlJA _KIYGw4V5EemzzojpIDPlJA _KIYGxIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIYGxoV5EemzzojpIDPlJA" name="InitNode_this.arguments.add(argument);" target="_KIYGxIV5EemzzojpIDPlJA" source="_KIYGwoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIYGx4V5EemzzojpIDPlJA" name="this.arguments.add(argument);_FinalNode" target="_KIYGw4V5EemzzojpIDPlJA" source="_KIYGxIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIYGwYV5EemzzojpIDPlJA" name="argument" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J-Gwc4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIYGwoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIYGxoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIYGw4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIYGx4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIYGxIV5EemzzojpIDPlJA" name="this.arguments.add(argument);" incoming="_KIYGxoV5EemzzojpIDPlJA" outgoing="_KIYGx4V5EemzzojpIDPlJA">
          <argument xmi:id="_KIYGxYV5EemzzojpIDPlJA" name="argument"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIYGyIV5EemzzojpIDPlJA" name="getArgument" specification="_J-IloIV5EemzzojpIDPlJA" node="_KIYGyYV5EemzzojpIDPlJA _KIYGyoV5EemzzojpIDPlJA _KIYGy4V5EemzzojpIDPlJA _KIYGzIV5EemzzojpIDPlJA _KIYt0IV5EemzzojpIDPlJA _KIYt0YV5EemzzojpIDPlJA _KIYt1oV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIYt0oV5EemzzojpIDPlJA" name="InitNode_If_0_cond" target="_KIYt0IV5EemzzojpIDPlJA" source="_KIYGy4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIYt04V5EemzzojpIDPlJA" name="If_0_else" target="_KIYt0YV5EemzzojpIDPlJA" source="_KIYt0IV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KIYt1YV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIYt14V5EemzzojpIDPlJA" name="If_0_cond_throw new IndexOutOfBoundsException(&quot;Index &quot; + num" target="_KIYt1oV5EemzzojpIDPlJA" source="_KIYt0IV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KIYt1IV5EemzzojpIDPlJA" value="number &lt; 0 || arguments.size() &lt;= number"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIYt2IV5EemzzojpIDPlJA" name="throw new IndexOutOfBoundsExce_If_0_merge" target="_KIYt0YV5EemzzojpIDPlJA" source="_KIYt1oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIYt2YV5EemzzojpIDPlJA" name="If_0_merge_FinalNode" target="_KIYGzIV5EemzzojpIDPlJA" source="_KIYt0YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIYGyYV5EemzzojpIDPlJA" name="number" parameter="_J-Ilo4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIYGyoV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J-IlpIV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIYGy4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KIYt0oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIYGzIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIYt2YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KIYt0IV5EemzzojpIDPlJA" name="If_0_cond" incoming="_KIYt0oV5EemzzojpIDPlJA" outgoing="_KIYt04V5EemzzojpIDPlJA _KIYt14V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KIYt0YV5EemzzojpIDPlJA" name="If_0_merge" incoming="_KIYt04V5EemzzojpIDPlJA _KIYt2IV5EemzzojpIDPlJA" outgoing="_KIYt2YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIYt1oV5EemzzojpIDPlJA" name="throw new IndexOutOfBoundsException(&quot;Index &quot; + number + &quot; not allowed.&quot;);" incoming="_KIYt14V5EemzzojpIDPlJA" outgoing="_KIYt2IV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>throw new IndexOutOfBoundsException(&quot;Index &quot; + number + &quot; not allowed.&quot;);
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIZU4IV5EemzzojpIDPlJA" name="Function" specification="_J-JMsIV5EemzzojpIDPlJA" node="_KIZU4YV5EemzzojpIDPlJA _KIZU4oV5EemzzojpIDPlJA _KIZU44V5EemzzojpIDPlJA _KIZU5IV5EemzzojpIDPlJA _KIZU5YV5EemzzojpIDPlJA _KIZU54V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIZU5oV5EemzzojpIDPlJA" name="InitNode_this(name);" target="_KIZU5YV5EemzzojpIDPlJA" source="_KIZU44V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIZU6YV5EemzzojpIDPlJA" name="this(name);_representName(isName);" target="_KIZU54V5EemzzojpIDPlJA" source="_KIZU5YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIZU6oV5EemzzojpIDPlJA" name="representName(isName);_FinalNode" target="_KIZU5IV5EemzzojpIDPlJA" source="_KIZU54V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIZU4YV5EemzzojpIDPlJA" name="name" parameter="_J-JMs4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIZU4oV5EemzzojpIDPlJA" name="isName" parameter="_J-JMtIV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIZU44V5EemzzojpIDPlJA" name="InitNode" outgoing="_KIZU5oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIZU5IV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIZU6oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIZU5YV5EemzzojpIDPlJA" name="this(name);" incoming="_KIZU5oV5EemzzojpIDPlJA" outgoing="_KIZU6YV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this(name);
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIZU54V5EemzzojpIDPlJA" name="representName(isName);" incoming="_KIZU6YV5EemzzojpIDPlJA" outgoing="_KIZU6oV5EemzzojpIDPlJA">
          <argument xmi:id="_KIZU6IV5EemzzojpIDPlJA" name="isName"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIZ78IV5EemzzojpIDPlJA" name="arity" specification="_J-JzwIV5EemzzojpIDPlJA" node="_KIZ78YV5EemzzojpIDPlJA _KIZ78oV5EemzzojpIDPlJA _KIZ784V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIZ79IV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIZ784V5EemzzojpIDPlJA" source="_KIZ78oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIZ78YV5EemzzojpIDPlJA" parameter="_J-Jzw4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIZ78oV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIZ79IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIZ784V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIZ79IV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIZ79YV5EemzzojpIDPlJA" name="toFullString" specification="_J-Lo8IV5EemzzojpIDPlJA" node="_KIZ79oV5EemzzojpIDPlJA _KIZ794V5EemzzojpIDPlJA _KIZ7-IV5EemzzojpIDPlJA _KIZ7-YV5EemzzojpIDPlJA _KIZ7-oV5EemzzojpIDPlJA _KIZ8AIV5EemzzojpIDPlJA _KIajAoV5EemzzojpIDPlJA _KIajBIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIZ7-4V5EemzzojpIDPlJA" name="InitNode_If_1_cond" target="_KIZ7-YV5EemzzojpIDPlJA" source="_KIZ794V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIZ7_IV5EemzzojpIDPlJA" name="If_1_else" target="_KIZ7-oV5EemzzojpIDPlJA" source="_KIZ7-YV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KIZ7_oV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIZ7_4V5EemzzojpIDPlJA" name="If_1_cond_FinalNode" target="_KIZ7-IV5EemzzojpIDPlJA" source="_KIZ7-YV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KIZ7_YV5EemzzojpIDPlJA" value="this.arguments.isEmpty()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIajAIV5EemzzojpIDPlJA" name="If_1_merge_String ret=this.getName() + &quot;(&quot;;" target="_KIZ8AIV5EemzzojpIDPlJA" source="_KIZ7-oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIajA4V5EemzzojpIDPlJA" name="String ret=this.getName() + &quot;(_ret+=e.toFullString() + &quot;,&quot;;" target="_KIajAoV5EemzzojpIDPlJA" source="_KIZ8AIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIajBYV5EemzzojpIDPlJA" name="ret+=e.toFullString() + &quot;,&quot;;_ret=ret.substring(0,ret.length(" target="_KIajBIV5EemzzojpIDPlJA" source="_KIajAoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIajBoV5EemzzojpIDPlJA" name="ret=ret.substring(0,ret.length_FinalNode" target="_KIZ7-IV5EemzzojpIDPlJA" source="_KIajBIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIajAYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIZ79oV5EemzzojpIDPlJA" parameter="_J-Lo84V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIZ794V5EemzzojpIDPlJA" name="InitNode" outgoing="_KIZ7-4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIZ7-IV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIZ7_4V5EemzzojpIDPlJA _KIajBoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KIZ7-YV5EemzzojpIDPlJA" name="If_1_cond" incoming="_KIZ7-4V5EemzzojpIDPlJA" outgoing="_KIZ7_IV5EemzzojpIDPlJA _KIZ7_4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KIZ7-oV5EemzzojpIDPlJA" name="If_1_merge" incoming="_KIZ7_IV5EemzzojpIDPlJA" outgoing="_KIajAIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIZ8AIV5EemzzojpIDPlJA" name="String ret=this.getName() + &quot;(&quot;;" incoming="_KIajAIV5EemzzojpIDPlJA" outgoing="_KIajA4V5EemzzojpIDPlJA" variable="_KIajAYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIajAoV5EemzzojpIDPlJA" name="ret+=e.toFullString() + &quot;,&quot;;" incoming="_KIajA4V5EemzzojpIDPlJA" outgoing="_KIajBYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret+=e.toFullString() + &quot;,&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIajBIV5EemzzojpIDPlJA" name="ret=ret.substring(0,ret.length() - 1) + &quot;)&quot;;" incoming="_KIajBYV5EemzzojpIDPlJA" outgoing="_KIajBoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret=ret.substring(0,ret.length() - 1) + &quot;)&quot;;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIajB4V5EemzzojpIDPlJA" name="occurs" specification="_J-RIgIV5EemzzojpIDPlJA" node="_KIajCIV5EemzzojpIDPlJA _KIajCYV5EemzzojpIDPlJA _KIajCoV5EemzzojpIDPlJA _KIbKEIV5EemzzojpIDPlJA _KIbKEYV5EemzzojpIDPlJA _KIbKEoV5EemzzojpIDPlJA _KIbKFoV5EemzzojpIDPlJA _KIbKGoV5EemzzojpIDPlJA _KIbKHYV5EemzzojpIDPlJA _KIbKHoV5EemzzojpIDPlJA _KIbxIoV5EemzzojpIDPlJA _KIbxJYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbKE4V5EemzzojpIDPlJA" name="InitNode_If_2_cond" target="_KIbKEYV5EemzzojpIDPlJA" source="_KIajCoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbKFIV5EemzzojpIDPlJA" name="If_2_cond_FinalNode" target="_KIbKEIV5EemzzojpIDPlJA" source="_KIbKEYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KIbKFYV5EemzzojpIDPlJA" value="this.equals(e)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbKF4V5EemzzojpIDPlJA" name="If_2_cond_boolean retVal=false;" target="_KIbKFoV5EemzzojpIDPlJA" source="_KIbKEYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KIbKGIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbKG4V5EemzzojpIDPlJA" name="boolean retVal=false;_int i=0;" target="_KIbKGoV5EemzzojpIDPlJA" source="_KIbKFoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbxIIV5EemzzojpIDPlJA" name="While_0_merge_cond" target="_KIbKHoV5EemzzojpIDPlJA" source="_KIbKHYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbxIYV5EemzzojpIDPlJA" name="int i=0;_While_0_merge" target="_KIbKHYV5EemzzojpIDPlJA" source="_KIbKGoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbxI4V5EemzzojpIDPlJA" name="While_0_cond_retVal=retVal || arguments.get(i).occurs(e);" target="_KIbxIoV5EemzzojpIDPlJA" source="_KIbKHoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KIbxJIV5EemzzojpIDPlJA" value="i &lt; arguments.size() &amp;&amp; !(retVal)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbxJoV5EemzzojpIDPlJA" name="retVal=retVal || arguments.get_i++;" target="_KIbxJYV5EemzzojpIDPlJA" source="_KIbxIoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbxJ4V5EemzzojpIDPlJA" name="i++;_While_0_merge" target="_KIbKHYV5EemzzojpIDPlJA" source="_KIbxJYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbxKIV5EemzzojpIDPlJA" name="While_0_cond_FinalNode" target="_KIbKEIV5EemzzojpIDPlJA" source="_KIbKHoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KIbxKYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIbxKoV5EemzzojpIDPlJA" name="If_2_merge_FinalNode" target="_KIbKEIV5EemzzojpIDPlJA" source="_KIbKEoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIbKGYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIbKHIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIajCIV5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J-RIg4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIajCYV5EemzzojpIDPlJA" parameter="_J-RIhIV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIajCoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIbKE4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIbKEIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIbKFIV5EemzzojpIDPlJA _KIbxKIV5EemzzojpIDPlJA _KIbxKoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KIbKEYV5EemzzojpIDPlJA" name="If_2_cond" incoming="_KIbKE4V5EemzzojpIDPlJA" outgoing="_KIbKFIV5EemzzojpIDPlJA _KIbKF4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KIbKEoV5EemzzojpIDPlJA" name="If_2_merge" outgoing="_KIbxKoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIbKFoV5EemzzojpIDPlJA" name="boolean retVal=false;" incoming="_KIbKF4V5EemzzojpIDPlJA" outgoing="_KIbKG4V5EemzzojpIDPlJA" variable="_KIbKGYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIbKGoV5EemzzojpIDPlJA" name="int i=0;" incoming="_KIbKG4V5EemzzojpIDPlJA" outgoing="_KIbxIYV5EemzzojpIDPlJA" variable="_KIbKHIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KIbKHYV5EemzzojpIDPlJA" name="While_0_merge" incoming="_KIbxIYV5EemzzojpIDPlJA _KIbxJ4V5EemzzojpIDPlJA" outgoing="_KIbxIIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KIbKHoV5EemzzojpIDPlJA" name="While_0_cond" incoming="_KIbxIIV5EemzzojpIDPlJA" outgoing="_KIbxI4V5EemzzojpIDPlJA _KIbxKIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIbxIoV5EemzzojpIDPlJA" name="retVal=retVal || arguments.get(i).occurs(e);" incoming="_KIbxI4V5EemzzojpIDPlJA" outgoing="_KIbxJoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>retVal=retVal || arguments.get(i).occurs(e);
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KIbxJYV5EemzzojpIDPlJA" name="i++;" incoming="_KIbxJoV5EemzzojpIDPlJA" outgoing="_KIbxJ4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>i++;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIcYMIV5EemzzojpIDPlJA" name="copy" specification="_J-WBAIV5EemzzojpIDPlJA" node="_KIcYMYV5EemzzojpIDPlJA _KIcYMoV5EemzzojpIDPlJA _KIcYM4V5EemzzojpIDPlJA _KIcYNIV5EemzzojpIDPlJA _KIcYN4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIcYNYV5EemzzojpIDPlJA" name="InitNode_Function ret=new Function(this.getName(),this.isNam" target="_KIcYNIV5EemzzojpIDPlJA" source="_KIcYMoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIcYOYV5EemzzojpIDPlJA" name="Function ret=new Function(this_ret.addArgument(e.copy());" target="_KIcYN4V5EemzzojpIDPlJA" source="_KIcYNIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIcYOoV5EemzzojpIDPlJA" name="ret.addArgument(e.copy());_FinalNode" target="_KIcYM4V5EemzzojpIDPlJA" source="_KIcYN4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIcYNoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIcYMYV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J-WBA4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIcYMoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIcYNYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIcYM4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIcYOoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIcYNIV5EemzzojpIDPlJA" name="Function ret=new Function(this.getName(),this.isName());" incoming="_KIcYNYV5EemzzojpIDPlJA" outgoing="_KIcYOYV5EemzzojpIDPlJA" variable="_KIcYNoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIcYN4V5EemzzojpIDPlJA" name="ret.addArgument(e.copy());" incoming="_KIcYOYV5EemzzojpIDPlJA" outgoing="_KIcYOoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIcYOIV5EemzzojpIDPlJA" name="e.copy()"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIcYO4V5EemzzojpIDPlJA" name="toString" specification="_J-ZrYIV5EemzzojpIDPlJA" node="_KIc_QIV5EemzzojpIDPlJA _KIc_QYV5EemzzojpIDPlJA _KIc_QoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIc_Q4V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIc_QoV5EemzzojpIDPlJA" source="_KIc_QYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KIc_QIV5EemzzojpIDPlJA" parameter="_J-ZrYYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KIc_QYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIc_Q4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIc_QoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIc_Q4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedOperation xmi:id="_J9-0oIV5EemzzojpIDPlJA" name="Function" visibility="public" method="_KIW4oIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J9-0oYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J9-0ooV5EemzzojpIDPlJA" key="documentation" value=" This is the constructor for the class Function.&#xD;&#xA; @param name the name of the function.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J9-0o4V5EemzzojpIDPlJA" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J-ACwIV5EemzzojpIDPlJA" name="getArguments" visibility="public" method="_KIXftIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-ACwYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-ACwoV5EemzzojpIDPlJA" key="documentation" value=" Return the list of arguments.&#xD;&#xA; @return the arguments&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-ACw4V5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J-DtIIV5EemzzojpIDPlJA" name="setArguments" visibility="public">
        <eAnnotations xmi:id="_J-DtIYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-DtIoV5EemzzojpIDPlJA" key="documentation" value=" Set the arguments.&#xD;&#xA; @param arguments the arguments to set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-DtI4V5EemzzojpIDPlJA" name="arguments" type="_J97KQYV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J-GwcIV5EemzzojpIDPlJA" name="addArgument" visibility="public" method="_KIYGwIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-GwcYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-GwcoV5EemzzojpIDPlJA" key="documentation" value=" Add an argument.&#xD;&#xA; @param argument the argument to add.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-Gwc4V5EemzzojpIDPlJA" name="argument" type="_J6hQ8YV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J-IloIV5EemzzojpIDPlJA" name="getArgument" visibility="public" method="_KIYGyIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-IloYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-IlooV5EemzzojpIDPlJA" key="documentation" value=" Returns an argument of the function.&#xD;&#xA; @param number the number of the argument.&#xD;&#xA; @return the element at the specified position.&#xD;&#xA; @throws IndexOutOfBoundsException if number is smaller than 0&#xD;&#xA;  or greater/equal than the number of arguments.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-Ilo4V5EemzzojpIDPlJA" name="number">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J-IlpIV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J-JMsIV5EemzzojpIDPlJA" name="Function" visibility="public" method="_KIZU4IV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-JMsYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-JMsoV5EemzzojpIDPlJA" key="documentation" value=" This is the constructor to create a Function that can represent a Name.&#xD;&#xA; @param name The name.&#xD;&#xA; @param isName {@code boolean} indicating if this is a Name.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-JMs4V5EemzzojpIDPlJA" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J-JMtIV5EemzzojpIDPlJA" name="isName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J-JzwIV5EemzzojpIDPlJA" name="arity" visibility="public" method="_KIZ78IV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-JzwYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-JzwoV5EemzzojpIDPlJA" key="documentation" value=" The number of arguments of the function.&#xD;&#xA; @return the functions arity.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-Jzw4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J-Lo8IV5EemzzojpIDPlJA" name="toFullString" visibility="public" method="_KIZ79YV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-Lo8YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-Lo8oV5EemzzojpIDPlJA" key="documentation" value=" Full string representation.&#xD;&#xA; @return a string representation.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-Lo84V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J-RIgIV5EemzzojpIDPlJA" name="occurs" visibility="public" method="_KIajB4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-RIgYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-RIgoV5EemzzojpIDPlJA" key="documentation" value=" Checks if another element occurs in this term.&#xD;&#xA; @param e The element to search for.&#xD;&#xA; @return {@code boolean} true iff the element occurs.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-RIg4V5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J-RIhIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J-WBAIV5EemzzojpIDPlJA" name="copy" visibility="public" method="_KIcYMIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-WBAYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-WBAoV5EemzzojpIDPlJA" key="documentation" value=" Creates a copy of an element.&#xD;&#xA; @param e the element to copy.&#xD;&#xA; @return the copy.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-WBA4V5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J-ZrYIV5EemzzojpIDPlJA" name="toString" visibility="public" method="_KIcYO4V5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_J-ZrYYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFr_IIV5EemzzojpIDPlJA" name="elements_util" client="_J6hQ8IV5EemzzojpIDPlJA" supplier="_J97KQIV5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFr_IYV5EemzzojpIDPlJA" name="elements_elements" client="_J6hQ8IV5EemzzojpIDPlJA" supplier="_J6hQ8IV5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFr_IoV5EemzzojpIDPlJA" name="arguments_target" memberEnd="_J9-NkIV5EemzzojpIDPlJA _KFr_I4V5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFr_I4V5EemzzojpIDPlJA" name="target" type="_J6ifEIV5EemzzojpIDPlJA" association="_KFr_IoV5EemzzojpIDPlJA"/>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_J6gp4IV5EemzzojpIDPlJA" name="Test" visibility="public">
    <eAnnotations xmi:id="_J6gp4YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
      <details xmi:id="_J6gp4oV5EemzzojpIDPlJA" key="documentation" value="&#xD;&#xA; The class Test contains the main method. &#xD;&#xA; &#xD;&#xA; @author  Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA; &#xD;&#xA;"/>
    </eAnnotations>
    <elementImport xmi:id="_J6rB9oV5EemzzojpIDPlJA" importedElement="_J6rB9YV5EemzzojpIDPlJA" visibility="private"/>
    <elementImport xmi:id="_J6rB94V5EemzzojpIDPlJA" importedElement="_J6jtMIV5EemzzojpIDPlJA" visibility="private"/>
    <elementImport xmi:id="_J6rpAIV5EemzzojpIDPlJA" importedElement="_J6mJc4V5EemzzojpIDPlJA" visibility="private"/>
    <elementImport xmi:id="_J6rpAYV5EemzzojpIDPlJA" importedElement="_J6k7UIV5EemzzojpIDPlJA" visibility="private"/>
    <ownedOperation xmi:id="_J6uFQIV5EemzzojpIDPlJA" name="main" visibility="public" isStatic="true">
      <eAnnotations xmi:id="_J6uFQYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6uFQoV5EemzzojpIDPlJA" key="documentation" value=" This is the main method.&#xD;&#xA; @param args Nothing&#xD;&#xA;&#x9;"/>
      </eAnnotations>
      <ownedParameter xmi:id="_J6uFQ4V5EemzzojpIDPlJA" name="args">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_J6uFRIV5EemzzojpIDPlJA" value="*"/>
      </ownedParameter>
    </ownedOperation>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_J6ifE4V5EemzzojpIDPlJA" name="tool">
    <packagedElement xmi:type="uml:Class" xmi:id="_J6ifFIV5EemzzojpIDPlJA" name="TupleJUnit" visibility="package">
      <eAnnotations xmi:id="_J6ifFYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6ifFoV5EemzzojpIDPlJA" key="documentation" value=" Test Cases for Tuple.&#xD;&#xA; @author Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_J-ej4YV5EemzzojpIDPlJA" importedElement="_J-ej4IV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J-fK8IV5EemzzojpIDPlJA" importedElement="_J-ej4oV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J-fyAIV5EemzzojpIDPlJA" importedElement="_J-fK8YV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J-fyAoV5EemzzojpIDPlJA" importedElement="_J-fyAYV5EemzzojpIDPlJA" visibility="private"/>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIgpoIV5EemzzojpIDPlJA" name="setUp" specification="_J-iOQIV5EemzzojpIDPlJA" node="_KIgpoYV5EemzzojpIDPlJA _KIgpooV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIgpo4V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIgpooV5EemzzojpIDPlJA" source="_KIgpoYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIgpoYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIgpo4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIgpooV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIgpo4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIgppIV5EemzzojpIDPlJA" name="tearDown" specification="_J-kqgIV5EemzzojpIDPlJA" node="_KIhQsIV5EemzzojpIDPlJA _KIhQsYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIhQsoV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIhQsYV5EemzzojpIDPlJA" source="_KIhQsIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIhQsIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIhQsoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIhQsYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIhQsoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIhQs4V5EemzzojpIDPlJA" name="testTuple" specification="_J-l4oIV5EemzzojpIDPlJA" node="_KIhQtIV5EemzzojpIDPlJA _KIhQtYV5EemzzojpIDPlJA _KIhQtoV5EemzzojpIDPlJA _KIhQuYV5EemzzojpIDPlJA _KIh3wIV5EemzzojpIDPlJA _KIh3xIV5EemzzojpIDPlJA _KIh3x4V5EemzzojpIDPlJA _KIie0IV5EemzzojpIDPlJA _KIie04V5EemzzojpIDPlJA _KIie14V5EemzzojpIDPlJA _KIie2oV5EemzzojpIDPlJA _KIjF4YV5EemzzojpIDPlJA _KIjF5YV5EemzzojpIDPlJA _KIjs8IV5EemzzojpIDPlJA _KIjs84V5EemzzojpIDPlJA _KIjs94V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIhQt4V5EemzzojpIDPlJA" name="InitNode_Tuple&lt;Integer> t=new Tuple&lt;Integer>(-1,1);" target="_KIhQtoV5EemzzojpIDPlJA" source="_KIhQtIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIhQvIV5EemzzojpIDPlJA" name="Tuple&lt;Integer> t=new Tuple&lt;Int_assertEquals(Integer.valueOf(" target="_KIhQuYV5EemzzojpIDPlJA" source="_KIhQtoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIh3w4V5EemzzojpIDPlJA" name="assertEquals(Integer.valueOf(-_assertEquals(Integer.valueOf(" target="_KIh3wIV5EemzzojpIDPlJA" source="_KIhQuYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIh3xoV5EemzzojpIDPlJA" name="assertEquals(Integer.valueOf(1_t.setFirst(5);" target="_KIh3xIV5EemzzojpIDPlJA" source="_KIh3wIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIh3yoV5EemzzojpIDPlJA" name="t.setFirst(5);_assertEquals(Integer.valueOf(5),t.getFirst())" target="_KIh3x4V5EemzzojpIDPlJA" source="_KIh3xIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIie0oV5EemzzojpIDPlJA" name="assertEquals(Integer.valueOf(5_t.setSecond(-5);" target="_KIie0IV5EemzzojpIDPlJA" source="_KIh3x4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIie1oV5EemzzojpIDPlJA" name="t.setSecond(-5);_assertEquals(Integer.valueOf(-5),t.getSecon" target="_KIie04V5EemzzojpIDPlJA" source="_KIie0IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIie2IV5EemzzojpIDPlJA" name="assertEquals(Integer.valueOf(-_Tuple&lt;String> s=new Tuple&lt;Str" target="_KIie14V5EemzzojpIDPlJA" source="_KIie04V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIjF4IV5EemzzojpIDPlJA" name="Tuple&lt;String> s=new Tuple&lt;Stri_assertEquals(&quot;Hello &quot;,s.getFi" target="_KIie2oV5EemzzojpIDPlJA" source="_KIie14V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIjF5IV5EemzzojpIDPlJA" name="assertEquals(&quot;Hello &quot;,s.getFir_assertEquals(&quot;World!&quot;,s.getSe" target="_KIjF4YV5EemzzojpIDPlJA" source="_KIie2oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIjF54V5EemzzojpIDPlJA" name="assertEquals(&quot;World!&quot;,s.getSec_s.setFirst(&quot;Greetings &quot;);" target="_KIjF5YV5EemzzojpIDPlJA" source="_KIjF4YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIjs8oV5EemzzojpIDPlJA" name="s.setFirst(&quot;Greetings &quot;);_s.setSecond(&quot;User!&quot;);" target="_KIjs8IV5EemzzojpIDPlJA" source="_KIjF5YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIjs9oV5EemzzojpIDPlJA" name="s.setSecond(&quot;User!&quot;);_assertEquals(&quot;Greetings &quot;,s.getFirst()" target="_KIjs84V5EemzzojpIDPlJA" source="_KIjs8IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIjs-oV5EemzzojpIDPlJA" name="assertEquals(&quot;Greetings &quot;,s.ge_assertEquals(&quot;User!&quot;,s.getSec" target="_KIjs94V5EemzzojpIDPlJA" source="_KIjs84V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIjs-4V5EemzzojpIDPlJA" name="assertEquals(&quot;User!&quot;,s.getSeco_FinalNode" target="_KIhQtYV5EemzzojpIDPlJA" source="_KIjs94V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIhQuIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIie2YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIhQtIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIhQt4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIhQtYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIjs-4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIhQtoV5EemzzojpIDPlJA" name="Tuple&lt;Integer> t=new Tuple&lt;Integer>(-1,1);" incoming="_KIhQt4V5EemzzojpIDPlJA" outgoing="_KIhQvIV5EemzzojpIDPlJA" variable="_KIhQuIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIhQuYV5EemzzojpIDPlJA" name="assertEquals(Integer.valueOf(-1),t.getFirst());" incoming="_KIhQvIV5EemzzojpIDPlJA" outgoing="_KIh3w4V5EemzzojpIDPlJA">
          <argument xmi:id="_KIhQuoV5EemzzojpIDPlJA" name="Integer.valueOf(-1)"/>
          <argument xmi:id="_KIhQu4V5EemzzojpIDPlJA" name="t.getFirst()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIh3wIV5EemzzojpIDPlJA" name="assertEquals(Integer.valueOf(1),t.getSecond());" incoming="_KIh3w4V5EemzzojpIDPlJA" outgoing="_KIh3xoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIh3wYV5EemzzojpIDPlJA" name="Integer.valueOf(1)"/>
          <argument xmi:id="_KIh3woV5EemzzojpIDPlJA" name="t.getSecond()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIh3xIV5EemzzojpIDPlJA" name="t.setFirst(5);" incoming="_KIh3xoV5EemzzojpIDPlJA" outgoing="_KIh3yoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIh3xYV5EemzzojpIDPlJA" name="5"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIh3x4V5EemzzojpIDPlJA" name="assertEquals(Integer.valueOf(5),t.getFirst());" incoming="_KIh3yoV5EemzzojpIDPlJA" outgoing="_KIie0oV5EemzzojpIDPlJA">
          <argument xmi:id="_KIh3yIV5EemzzojpIDPlJA" name="Integer.valueOf(5)"/>
          <argument xmi:id="_KIh3yYV5EemzzojpIDPlJA" name="t.getFirst()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIie0IV5EemzzojpIDPlJA" name="t.setSecond(-5);" incoming="_KIie0oV5EemzzojpIDPlJA" outgoing="_KIie1oV5EemzzojpIDPlJA">
          <argument xmi:id="_KIie0YV5EemzzojpIDPlJA" name="-5"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIie04V5EemzzojpIDPlJA" name="assertEquals(Integer.valueOf(-5),t.getSecond());" incoming="_KIie1oV5EemzzojpIDPlJA" outgoing="_KIie2IV5EemzzojpIDPlJA">
          <argument xmi:id="_KIie1IV5EemzzojpIDPlJA" name="Integer.valueOf(-5)"/>
          <argument xmi:id="_KIie1YV5EemzzojpIDPlJA" name="t.getSecond()"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIie14V5EemzzojpIDPlJA" name="Tuple&lt;String> s=new Tuple&lt;String>(&quot;Hello &quot;,&quot;World!&quot;);" incoming="_KIie2IV5EemzzojpIDPlJA" outgoing="_KIjF4IV5EemzzojpIDPlJA" variable="_KIie2YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIie2oV5EemzzojpIDPlJA" name="assertEquals(&quot;Hello &quot;,s.getFirst());" incoming="_KIjF4IV5EemzzojpIDPlJA" outgoing="_KIjF5IV5EemzzojpIDPlJA">
          <argument xmi:id="_KIie24V5EemzzojpIDPlJA" name="&quot;Hello &quot;"/>
          <argument xmi:id="_KIie3IV5EemzzojpIDPlJA" name="s.getFirst()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIjF4YV5EemzzojpIDPlJA" name="assertEquals(&quot;World!&quot;,s.getSecond());" incoming="_KIjF5IV5EemzzojpIDPlJA" outgoing="_KIjF54V5EemzzojpIDPlJA">
          <argument xmi:id="_KIjF4oV5EemzzojpIDPlJA" name="&quot;World!&quot;"/>
          <argument xmi:id="_KIjF44V5EemzzojpIDPlJA" name="s.getSecond()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIjF5YV5EemzzojpIDPlJA" name="s.setFirst(&quot;Greetings &quot;);" incoming="_KIjF54V5EemzzojpIDPlJA" outgoing="_KIjs8oV5EemzzojpIDPlJA">
          <argument xmi:id="_KIjF5oV5EemzzojpIDPlJA" name="&quot;Greetings &quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIjs8IV5EemzzojpIDPlJA" name="s.setSecond(&quot;User!&quot;);" incoming="_KIjs8oV5EemzzojpIDPlJA" outgoing="_KIjs9oV5EemzzojpIDPlJA">
          <argument xmi:id="_KIjs8YV5EemzzojpIDPlJA" name="&quot;User!&quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIjs84V5EemzzojpIDPlJA" name="assertEquals(&quot;Greetings &quot;,s.getFirst());" incoming="_KIjs9oV5EemzzojpIDPlJA" outgoing="_KIjs-oV5EemzzojpIDPlJA">
          <argument xmi:id="_KIjs9IV5EemzzojpIDPlJA" name="&quot;Greetings &quot;"/>
          <argument xmi:id="_KIjs9YV5EemzzojpIDPlJA" name="s.getFirst()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIjs94V5EemzzojpIDPlJA" name="assertEquals(&quot;User!&quot;,s.getSecond());" incoming="_KIjs-oV5EemzzojpIDPlJA" outgoing="_KIjs-4V5EemzzojpIDPlJA">
          <argument xmi:id="_KIjs-IV5EemzzojpIDPlJA" name="&quot;User!&quot;"/>
          <argument xmi:id="_KIjs-YV5EemzzojpIDPlJA" name="s.getSecond()"/>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_J-iOQIV5EemzzojpIDPlJA" name="setUp" method="_KIgpoIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-iOQYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-iOQoV5EemzzojpIDPlJA" key="documentation" value=" @throws java.lang.Exception ignored&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_J-kqgIV5EemzzojpIDPlJA" name="tearDown" method="_KIgppIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-kqgYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-kqgoV5EemzzojpIDPlJA" key="documentation" value=" @throws java.lang.Exception ignored&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_J-l4oIV5EemzzojpIDPlJA" name="testTuple" method="_KIhQs4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-mfsIV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-mfsYV5EemzzojpIDPlJA" key="documentation" value=" Test method for {@link tool.Tuple#Tuple(java.lang.Object, java.lang.Object)}, &#xD;&#xA; {@link tool.Tuple#getFirst()}, {@link tool.Tuple#getSecond()},&#xD;&#xA; {@link tool.Tuple#setFirst(java.lang.Object)} and&#xD;&#xA;  {@link tool.Tuple#setSecond(java.lang.Object)}.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6jGIIV5EemzzojpIDPlJA" name="MatrixJUnit" visibility="package">
      <eAnnotations xmi:id="_J6jGIYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6jGIoV5EemzzojpIDPlJA" key="documentation" value=" Test Cases for Matrix.&#xD;&#xA; &#xD;&#xA; @author Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 2.0&#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_J-oU4YV5EemzzojpIDPlJA" importedElement="_J97KQYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J-oU4oV5EemzzojpIDPlJA" importedElement="_J-ej4oV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J-oU44V5EemzzojpIDPlJA" importedElement="_J-fK8YV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J-o78IV5EemzzojpIDPlJA" importedElement="_J-fyAYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J-o78YV5EemzzojpIDPlJA" importedElement="_J6h4AIV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J-o78oV5EemzzojpIDPlJA" importedElement="_J6hQ8YV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J-o784V5EemzzojpIDPlJA" importedElement="_J6ifEIV5EemzzojpIDPlJA" visibility="private"/>
      <packageImport xmi:id="_J-oU4IV5EemzzojpIDPlJA" importedPackage="_J6rB9IV5EemzzojpIDPlJA" visibility="private"/>
      <ownedAttribute xmi:id="_J-qKEIV5EemzzojpIDPlJA" name="m" type="_J6jtMIV5EemzzojpIDPlJA" association="_KFsmNIV5EemzzojpIDPlJA"/>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KInXUIV5EemzzojpIDPlJA" name="setUp" specification="_J-r_QIV5EemzzojpIDPlJA" node="_KInXUYV5EemzzojpIDPlJA _KInXUoV5EemzzojpIDPlJA _KInXU4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIn-YIV5EemzzojpIDPlJA" name="InitNode_m=new Matrix();" target="_KInXU4V5EemzzojpIDPlJA" source="_KInXUYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIn-YYV5EemzzojpIDPlJA" name="m=new Matrix();_FinalNode" target="_KInXUoV5EemzzojpIDPlJA" source="_KInXU4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KInXUYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIn-YIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KInXUoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIn-YYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KInXU4V5EemzzojpIDPlJA" name="m=new Matrix();" incoming="_KIn-YIV5EemzzojpIDPlJA" outgoing="_KIn-YYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>m=new Matrix();
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIn-YoV5EemzzojpIDPlJA" name="tearDown" specification="_J-tNYIV5EemzzojpIDPlJA" node="_KIn-Y4V5EemzzojpIDPlJA _KIn-ZIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIn-ZYV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KIn-ZIV5EemzzojpIDPlJA" source="_KIn-Y4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIn-Y4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KIn-ZYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIn-ZIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIn-ZYV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIn-ZoV5EemzzojpIDPlJA" name="testAddGetRelation" specification="_J-vCkIV5EemzzojpIDPlJA" node="_KIn-Z4V5EemzzojpIDPlJA _KIn-aIV5EemzzojpIDPlJA _KIolcIV5EemzzojpIDPlJA _KIolc4V5EemzzojpIDPlJA _KIoldoV5EemzzojpIDPlJA _KIoleYV5EemzzojpIDPlJA _KIpMgYV5EemzzojpIDPlJA _KIpMhoV5EemzzojpIDPlJA _KIpMioV5EemzzojpIDPlJA _KIpzkYV5EemzzojpIDPlJA _KIpzloV5EemzzojpIDPlJA _KIpzm4V5EemzzojpIDPlJA _KIqaooV5EemzzojpIDPlJA _KIqapoV5EemzzojpIDPlJA _KIqaqoV5EemzzojpIDPlJA _KIrBsYV5EemzzojpIDPlJA _KIrBtYV5EemzzojpIDPlJA _KIrBuYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIolcYV5EemzzojpIDPlJA" name="InitNode_Element f=new Function(&quot;f&quot;);" target="_KIolcIV5EemzzojpIDPlJA" source="_KIn-Z4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIoldIV5EemzzojpIDPlJA" name="Element f=new Function(&quot;f&quot;);_Element g=new Function(&quot;g&quot;);" target="_KIolc4V5EemzzojpIDPlJA" source="_KIolcIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIold4V5EemzzojpIDPlJA" name="Element g=new Function(&quot;g&quot;);_Element h=new Function(&quot;h&quot;);" target="_KIoldoV5EemzzojpIDPlJA" source="_KIolc4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIpMgIV5EemzzojpIDPlJA" name="Element h=new Function(&quot;h&quot;);_m.addRelation(f,g,0.11f);" target="_KIoleYV5EemzzojpIDPlJA" source="_KIoldoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIpMhYV5EemzzojpIDPlJA" name="m.addRelation(f,g,0.11f);_m.addRelation(h,g,0.22f);" target="_KIpMgYV5EemzzojpIDPlJA" source="_KIoleYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIpMiYV5EemzzojpIDPlJA" name="m.addRelation(h,g,0.22f);_assertEquals(0.11f,m.getRelation(f" target="_KIpMhoV5EemzzojpIDPlJA" source="_KIpMgYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIpzkIV5EemzzojpIDPlJA" name="assertEquals(0.11f,m.getRelati_assertEquals(0f,m.getRelation" target="_KIpMioV5EemzzojpIDPlJA" source="_KIpMhoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIpzlYV5EemzzojpIDPlJA" name="assertEquals(0f,m.getRelation(_m.addRelation(&quot;a&quot;,&quot;b&quot;,0.7f);" target="_KIpzkYV5EemzzojpIDPlJA" source="_KIpMioV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIpzmoV5EemzzojpIDPlJA" name="m.addRelation(&quot;a&quot;,&quot;b&quot;,0.7f);_m.addRelation(&quot;a&quot;,&quot;c&quot;,0.7f);" target="_KIpzloV5EemzzojpIDPlJA" source="_KIpzkYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIqaoYV5EemzzojpIDPlJA" name="m.addRelation(&quot;a&quot;,&quot;c&quot;,0.7f);_m.addRelation(&quot;d&quot;,&quot;c&quot;,0.6f);" target="_KIpzm4V5EemzzojpIDPlJA" source="_KIpzloV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIqapYV5EemzzojpIDPlJA" name="m.addRelation(&quot;d&quot;,&quot;c&quot;,0.6f);_assertEquals(0.7f,m.getRelation" target="_KIqaooV5EemzzojpIDPlJA" source="_KIpzm4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIqaqYV5EemzzojpIDPlJA" name="assertEquals(0.7f,m.getRelatio_assertEquals(0.6f,m.getRelati" target="_KIqapoV5EemzzojpIDPlJA" source="_KIqaooV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIrBsIV5EemzzojpIDPlJA" name="assertEquals(0.6f,m.getRelatio_assertEquals(0f,m.getRelation" target="_KIqaqoV5EemzzojpIDPlJA" source="_KIqapoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIrBtIV5EemzzojpIDPlJA" name="assertEquals(0f,m.getRelation(_assertEquals(0.11f,m.getRelat" target="_KIrBsYV5EemzzojpIDPlJA" source="_KIqaqoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIrBuIV5EemzzojpIDPlJA" name="assertEquals(0.11f,m.getRelati_assertEquals(0.11f,m.getRelat" target="_KIrBtYV5EemzzojpIDPlJA" source="_KIrBsYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIrBvIV5EemzzojpIDPlJA" name="assertEquals(0.11f,m.getRelati_assertEquals(1f,m.getRelation" target="_KIrBuYV5EemzzojpIDPlJA" source="_KIrBtYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIrowIV5EemzzojpIDPlJA" name="assertEquals(1f,m.getRelation(_FinalNode" target="_KIn-aIV5EemzzojpIDPlJA" source="_KIrBuYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIolcoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIoldYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIoleIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIn-Z4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KIolcYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIn-aIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIrowIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIolcIV5EemzzojpIDPlJA" name="Element f=new Function(&quot;f&quot;);" incoming="_KIolcYV5EemzzojpIDPlJA" outgoing="_KIoldIV5EemzzojpIDPlJA" variable="_KIolcoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIolc4V5EemzzojpIDPlJA" name="Element g=new Function(&quot;g&quot;);" incoming="_KIoldIV5EemzzojpIDPlJA" outgoing="_KIold4V5EemzzojpIDPlJA" variable="_KIoldYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIoldoV5EemzzojpIDPlJA" name="Element h=new Function(&quot;h&quot;);" incoming="_KIold4V5EemzzojpIDPlJA" outgoing="_KIpMgIV5EemzzojpIDPlJA" variable="_KIoleIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIoleYV5EemzzojpIDPlJA" name="m.addRelation(f,g,0.11f);" incoming="_KIpMgIV5EemzzojpIDPlJA" outgoing="_KIpMhYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIoleoV5EemzzojpIDPlJA" name="f"/>
          <argument xmi:id="_KIole4V5EemzzojpIDPlJA" name="g"/>
          <argument xmi:id="_KIolfIV5EemzzojpIDPlJA" name="0.11f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIpMgYV5EemzzojpIDPlJA" name="m.addRelation(h,g,0.22f);" incoming="_KIpMhYV5EemzzojpIDPlJA" outgoing="_KIpMiYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIpMgoV5EemzzojpIDPlJA" name="h"/>
          <argument xmi:id="_KIpMg4V5EemzzojpIDPlJA" name="g"/>
          <argument xmi:id="_KIpMhIV5EemzzojpIDPlJA" name="0.22f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIpMhoV5EemzzojpIDPlJA" name="assertEquals(0.11f,m.getRelation(f,g));" incoming="_KIpMiYV5EemzzojpIDPlJA" outgoing="_KIpzkIV5EemzzojpIDPlJA">
          <argument xmi:id="_KIpMh4V5EemzzojpIDPlJA" name="0.11f"/>
          <argument xmi:id="_KIpMiIV5EemzzojpIDPlJA" name="m.getRelation(f,g)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIpMioV5EemzzojpIDPlJA" name="assertEquals(0f,m.getRelation(f,h));" incoming="_KIpzkIV5EemzzojpIDPlJA" outgoing="_KIpzlYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIpMi4V5EemzzojpIDPlJA" name="0f"/>
          <argument xmi:id="_KIpMjIV5EemzzojpIDPlJA" name="m.getRelation(f,h)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIpzkYV5EemzzojpIDPlJA" name="m.addRelation(&quot;a&quot;,&quot;b&quot;,0.7f);" incoming="_KIpzlYV5EemzzojpIDPlJA" outgoing="_KIpzmoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIpzkoV5EemzzojpIDPlJA" name="&quot;a&quot;"/>
          <argument xmi:id="_KIpzk4V5EemzzojpIDPlJA" name="&quot;b&quot;"/>
          <argument xmi:id="_KIpzlIV5EemzzojpIDPlJA" name="0.7f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIpzloV5EemzzojpIDPlJA" name="m.addRelation(&quot;a&quot;,&quot;c&quot;,0.7f);" incoming="_KIpzmoV5EemzzojpIDPlJA" outgoing="_KIqaoYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIpzl4V5EemzzojpIDPlJA" name="&quot;a&quot;"/>
          <argument xmi:id="_KIpzmIV5EemzzojpIDPlJA" name="&quot;c&quot;"/>
          <argument xmi:id="_KIpzmYV5EemzzojpIDPlJA" name="0.7f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIpzm4V5EemzzojpIDPlJA" name="m.addRelation(&quot;d&quot;,&quot;c&quot;,0.6f);" incoming="_KIqaoYV5EemzzojpIDPlJA" outgoing="_KIqapYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIpznIV5EemzzojpIDPlJA" name="&quot;d&quot;"/>
          <argument xmi:id="_KIpznYV5EemzzojpIDPlJA" name="&quot;c&quot;"/>
          <argument xmi:id="_KIqaoIV5EemzzojpIDPlJA" name="0.6f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIqaooV5EemzzojpIDPlJA" name="assertEquals(0.7f,m.getRelation(&quot;b&quot;,&quot;a&quot;));" incoming="_KIqapYV5EemzzojpIDPlJA" outgoing="_KIqaqYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIqao4V5EemzzojpIDPlJA" name="0.7f"/>
          <argument xmi:id="_KIqapIV5EemzzojpIDPlJA" name="m.getRelation(&quot;b&quot;,&quot;a&quot;)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIqapoV5EemzzojpIDPlJA" name="assertEquals(0.6f,m.getRelation(&quot;c&quot;,&quot;d&quot;));" incoming="_KIqaqYV5EemzzojpIDPlJA" outgoing="_KIrBsIV5EemzzojpIDPlJA">
          <argument xmi:id="_KIqap4V5EemzzojpIDPlJA" name="0.6f"/>
          <argument xmi:id="_KIqaqIV5EemzzojpIDPlJA" name="m.getRelation(&quot;c&quot;,&quot;d&quot;)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIqaqoV5EemzzojpIDPlJA" name="assertEquals(0f,m.getRelation(&quot;c&quot;,&quot;b&quot;));" incoming="_KIrBsIV5EemzzojpIDPlJA" outgoing="_KIrBtIV5EemzzojpIDPlJA">
          <argument xmi:id="_KIqaq4V5EemzzojpIDPlJA" name="0f"/>
          <argument xmi:id="_KIqarIV5EemzzojpIDPlJA" name="m.getRelation(&quot;c&quot;,&quot;b&quot;)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIrBsYV5EemzzojpIDPlJA" name="assertEquals(0.11f,m.getRelation(f,g));" incoming="_KIrBtIV5EemzzojpIDPlJA" outgoing="_KIrBuIV5EemzzojpIDPlJA">
          <argument xmi:id="_KIrBsoV5EemzzojpIDPlJA" name="0.11f"/>
          <argument xmi:id="_KIrBs4V5EemzzojpIDPlJA" name="m.getRelation(f,g)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIrBtYV5EemzzojpIDPlJA" name="assertEquals(0.11f,m.getRelation(g,f));" incoming="_KIrBuIV5EemzzojpIDPlJA" outgoing="_KIrBvIV5EemzzojpIDPlJA">
          <argument xmi:id="_KIrBtoV5EemzzojpIDPlJA" name="0.11f"/>
          <argument xmi:id="_KIrBt4V5EemzzojpIDPlJA" name="m.getRelation(g,f)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIrBuYV5EemzzojpIDPlJA" name="assertEquals(1f,m.getRelation(i,i));" incoming="_KIrBvIV5EemzzojpIDPlJA" outgoing="_KIrowIV5EemzzojpIDPlJA">
          <argument xmi:id="_KIrBuoV5EemzzojpIDPlJA" name="1f"/>
          <argument xmi:id="_KIrBu4V5EemzzojpIDPlJA" name="m.getRelation(i,i)"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIrowYV5EemzzojpIDPlJA" name="testGetRelations" specification="_J-w3wIV5EemzzojpIDPlJA" node="_KIrowoV5EemzzojpIDPlJA _KIrow4V5EemzzojpIDPlJA _KIroxIV5EemzzojpIDPlJA _KIrox4V5EemzzojpIDPlJA _KIroyoV5EemzzojpIDPlJA _KIsP0IV5EemzzojpIDPlJA _KIsP04V5EemzzojpIDPlJA _KIsP1oV5EemzzojpIDPlJA _KIsP2YV5EemzzojpIDPlJA _KIsP3IV5EemzzojpIDPlJA _KIs24YV5EemzzojpIDPlJA _KIs25IV5EemzzojpIDPlJA _KIs26YV5EemzzojpIDPlJA _KIs27YV5EemzzojpIDPlJA _KItd9IV5EemzzojpIDPlJA _KItd-IV5EemzzojpIDPlJA _KItd_YV5EemzzojpIDPlJA _KIuFAIV5EemzzojpIDPlJA _KIuFBYV5EemzzojpIDPlJA _KIuFCoV5EemzzojpIDPlJA _KIuFDYV5EemzzojpIDPlJA _KIusEYV5EemzzojpIDPlJA _KIwhQIV5EemzzojpIDPlJA _KIwhQ4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIroxYV5EemzzojpIDPlJA" name="InitNode_Element f=new Function(&quot;f&quot;);" target="_KIroxIV5EemzzojpIDPlJA" source="_KIrowoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIroyIV5EemzzojpIDPlJA" name="Element f=new Function(&quot;f&quot;);_Element g=new Function(&quot;g&quot;);" target="_KIrox4V5EemzzojpIDPlJA" source="_KIroxIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIroy4V5EemzzojpIDPlJA" name="Element g=new Function(&quot;g&quot;);_Element h=new Function(&quot;h&quot;);" target="_KIroyoV5EemzzojpIDPlJA" source="_KIrox4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIsP0YV5EemzzojpIDPlJA" name="Element h=new Function(&quot;h&quot;);_Element j=new Function(&quot;j&quot;);" target="_KIsP0IV5EemzzojpIDPlJA" source="_KIroyoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIsP1IV5EemzzojpIDPlJA" name="Element j=new Function(&quot;j&quot;);_Element a=new Constant(&quot;a&quot;);" target="_KIsP04V5EemzzojpIDPlJA" source="_KIsP0IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIsP14V5EemzzojpIDPlJA" name="Element a=new Constant(&quot;a&quot;);_Element b=new Constant(&quot;b&quot;);" target="_KIsP1oV5EemzzojpIDPlJA" source="_KIsP04V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIsP2oV5EemzzojpIDPlJA" name="Element b=new Constant(&quot;b&quot;);_ArrayList&lt;Element> list=new Arr" target="_KIsP2YV5EemzzojpIDPlJA" source="_KIsP1oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIsP3YV5EemzzojpIDPlJA" name="ArrayList&lt;Element> list=new Ar_ArrayList&lt;Element> test;" target="_KIsP3IV5EemzzojpIDPlJA" source="_KIsP2YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIs244V5EemzzojpIDPlJA" name="ArrayList&lt;Element> test;_list.add(f);" target="_KIs24YV5EemzzojpIDPlJA" source="_KIsP3IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIs26IV5EemzzojpIDPlJA" name="list.add(f);_m.addRelation(f,g,0.11f);" target="_KIs25IV5EemzzojpIDPlJA" source="_KIs24YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIs27IV5EemzzojpIDPlJA" name="m.addRelation(f,g,0.11f);_assertEquals(list,m.getRelations(f" target="_KIs26YV5EemzzojpIDPlJA" source="_KIs25IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KItd84V5EemzzojpIDPlJA" name="assertEquals(list,m.getRelatio_m.addRelation(h,g,0.22f);" target="_KIs27YV5EemzzojpIDPlJA" source="_KIs26YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KItd94V5EemzzojpIDPlJA" name="m.addRelation(h,g,0.22f);_assertEquals(list,m.getRelations(f" target="_KItd9IV5EemzzojpIDPlJA" source="_KIs27YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KItd_IV5EemzzojpIDPlJA" name="assertEquals(list,m.getRelatio_m.addRelation(h,f,0.33f);" target="_KItd-IV5EemzzojpIDPlJA" source="_KItd9IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIteAYV5EemzzojpIDPlJA" name="m.addRelation(h,f,0.33f);_m.addRelation(f,j,0.6f);" target="_KItd_YV5EemzzojpIDPlJA" source="_KItd-IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIuFBIV5EemzzojpIDPlJA" name="m.addRelation(f,j,0.6f);_m.addRelation(a,b,0.7f);" target="_KIuFAIV5EemzzojpIDPlJA" source="_KItd_YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIuFCYV5EemzzojpIDPlJA" name="m.addRelation(a,b,0.7f);_m.addRelation(g,j,0.5f);" target="_KIuFBYV5EemzzojpIDPlJA" source="_KIuFAIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIuFDIV5EemzzojpIDPlJA" name="m.addRelation(g,j,0.5f);_list.add(h);" target="_KIuFCoV5EemzzojpIDPlJA" source="_KIuFBYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIusEIV5EemzzojpIDPlJA" name="list.add(h);_list.add(j);" target="_KIuFDYV5EemzzojpIDPlJA" source="_KIuFCoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIv6MYV5EemzzojpIDPlJA" name="list.add(j);_test=m.getRelations(f,0.3f);" target="_KIusEYV5EemzzojpIDPlJA" source="_KIuFDYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIwhQoV5EemzzojpIDPlJA" name="test=m.getRelations(f,0.3f);_assertTrue(list.contains(e));" target="_KIwhQIV5EemzzojpIDPlJA" source="_KIusEYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIwhRoV5EemzzojpIDPlJA" name="assertTrue(list.contains(e));_assertEquals(list.size(),test." target="_KIwhQ4V5EemzzojpIDPlJA" source="_KIwhQIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIwhR4V5EemzzojpIDPlJA" name="assertEquals(list.size(),test._FinalNode" target="_KIrow4V5EemzzojpIDPlJA" source="_KIwhQ4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIroxoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIroyYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIrozIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIsP0oV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIsP1YV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIsP2IV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIsP24V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIs24IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIrowoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIroxYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIrow4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KIwhR4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIroxIV5EemzzojpIDPlJA" name="Element f=new Function(&quot;f&quot;);" incoming="_KIroxYV5EemzzojpIDPlJA" outgoing="_KIroyIV5EemzzojpIDPlJA" variable="_KIroxoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIrox4V5EemzzojpIDPlJA" name="Element g=new Function(&quot;g&quot;);" incoming="_KIroyIV5EemzzojpIDPlJA" outgoing="_KIroy4V5EemzzojpIDPlJA" variable="_KIroyYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIroyoV5EemzzojpIDPlJA" name="Element h=new Function(&quot;h&quot;);" incoming="_KIroy4V5EemzzojpIDPlJA" outgoing="_KIsP0YV5EemzzojpIDPlJA" variable="_KIrozIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIsP0IV5EemzzojpIDPlJA" name="Element j=new Function(&quot;j&quot;);" incoming="_KIsP0YV5EemzzojpIDPlJA" outgoing="_KIsP1IV5EemzzojpIDPlJA" variable="_KIsP0oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIsP04V5EemzzojpIDPlJA" name="Element a=new Constant(&quot;a&quot;);" incoming="_KIsP1IV5EemzzojpIDPlJA" outgoing="_KIsP14V5EemzzojpIDPlJA" variable="_KIsP1YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIsP1oV5EemzzojpIDPlJA" name="Element b=new Constant(&quot;b&quot;);" incoming="_KIsP14V5EemzzojpIDPlJA" outgoing="_KIsP2oV5EemzzojpIDPlJA" variable="_KIsP2IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIsP2YV5EemzzojpIDPlJA" name="ArrayList&lt;Element> list=new ArrayList&lt;Element>();" incoming="_KIsP2oV5EemzzojpIDPlJA" outgoing="_KIsP3YV5EemzzojpIDPlJA" variable="_KIsP24V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIsP3IV5EemzzojpIDPlJA" name="ArrayList&lt;Element> test;" incoming="_KIsP3YV5EemzzojpIDPlJA" outgoing="_KIs244V5EemzzojpIDPlJA" variable="_KIs24IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIs24YV5EemzzojpIDPlJA" name="list.add(f);" incoming="_KIs244V5EemzzojpIDPlJA" outgoing="_KIs26IV5EemzzojpIDPlJA">
          <argument xmi:id="_KIs24oV5EemzzojpIDPlJA" name="f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIs25IV5EemzzojpIDPlJA" name="m.addRelation(f,g,0.11f);" incoming="_KIs26IV5EemzzojpIDPlJA" outgoing="_KIs27IV5EemzzojpIDPlJA">
          <argument xmi:id="_KIs25YV5EemzzojpIDPlJA" name="f"/>
          <argument xmi:id="_KIs25oV5EemzzojpIDPlJA" name="g"/>
          <argument xmi:id="_KIs254V5EemzzojpIDPlJA" name="0.11f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIs26YV5EemzzojpIDPlJA" name="assertEquals(list,m.getRelations(f,0.3f));" incoming="_KIs27IV5EemzzojpIDPlJA" outgoing="_KItd84V5EemzzojpIDPlJA">
          <argument xmi:id="_KIs26oV5EemzzojpIDPlJA" name="list"/>
          <argument xmi:id="_KIs264V5EemzzojpIDPlJA" name="m.getRelations(f,0.3f)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIs27YV5EemzzojpIDPlJA" name="m.addRelation(h,g,0.22f);" incoming="_KItd84V5EemzzojpIDPlJA" outgoing="_KItd94V5EemzzojpIDPlJA">
          <argument xmi:id="_KItd8IV5EemzzojpIDPlJA" name="h"/>
          <argument xmi:id="_KItd8YV5EemzzojpIDPlJA" name="g"/>
          <argument xmi:id="_KItd8oV5EemzzojpIDPlJA" name="0.22f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KItd9IV5EemzzojpIDPlJA" name="assertEquals(list,m.getRelations(f,0.3f));" incoming="_KItd94V5EemzzojpIDPlJA" outgoing="_KItd_IV5EemzzojpIDPlJA">
          <argument xmi:id="_KItd9YV5EemzzojpIDPlJA" name="list"/>
          <argument xmi:id="_KItd9oV5EemzzojpIDPlJA" name="m.getRelations(f,0.3f)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KItd-IV5EemzzojpIDPlJA" name="m.addRelation(h,f,0.33f);" incoming="_KItd_IV5EemzzojpIDPlJA" outgoing="_KIteAYV5EemzzojpIDPlJA">
          <argument xmi:id="_KItd-YV5EemzzojpIDPlJA" name="h"/>
          <argument xmi:id="_KItd-oV5EemzzojpIDPlJA" name="f"/>
          <argument xmi:id="_KItd-4V5EemzzojpIDPlJA" name="0.33f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KItd_YV5EemzzojpIDPlJA" name="m.addRelation(f,j,0.6f);" incoming="_KIteAYV5EemzzojpIDPlJA" outgoing="_KIuFBIV5EemzzojpIDPlJA">
          <argument xmi:id="_KItd_oV5EemzzojpIDPlJA" name="f"/>
          <argument xmi:id="_KItd_4V5EemzzojpIDPlJA" name="j"/>
          <argument xmi:id="_KIteAIV5EemzzojpIDPlJA" name="0.6f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIuFAIV5EemzzojpIDPlJA" name="m.addRelation(a,b,0.7f);" incoming="_KIuFBIV5EemzzojpIDPlJA" outgoing="_KIuFCYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIuFAYV5EemzzojpIDPlJA" name="a"/>
          <argument xmi:id="_KIuFAoV5EemzzojpIDPlJA" name="b"/>
          <argument xmi:id="_KIuFA4V5EemzzojpIDPlJA" name="0.7f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIuFBYV5EemzzojpIDPlJA" name="m.addRelation(g,j,0.5f);" incoming="_KIuFCYV5EemzzojpIDPlJA" outgoing="_KIuFDIV5EemzzojpIDPlJA">
          <argument xmi:id="_KIuFBoV5EemzzojpIDPlJA" name="g"/>
          <argument xmi:id="_KIuFB4V5EemzzojpIDPlJA" name="j"/>
          <argument xmi:id="_KIuFCIV5EemzzojpIDPlJA" name="0.5f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIuFCoV5EemzzojpIDPlJA" name="list.add(h);" incoming="_KIuFDIV5EemzzojpIDPlJA" outgoing="_KIusEIV5EemzzojpIDPlJA">
          <argument xmi:id="_KIuFC4V5EemzzojpIDPlJA" name="h"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIuFDYV5EemzzojpIDPlJA" name="list.add(j);" incoming="_KIusEIV5EemzzojpIDPlJA" outgoing="_KIv6MYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIuFDoV5EemzzojpIDPlJA" name="j"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIusEYV5EemzzojpIDPlJA" name="test=m.getRelations(f,0.3f);" incoming="_KIv6MYV5EemzzojpIDPlJA" outgoing="_KIwhQoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIusEoV5EemzzojpIDPlJA" name="f"/>
          <argument xmi:id="_KIusE4V5EemzzojpIDPlJA" name="0.3f"/>
          <result xmi:id="_KIv6MIV5EemzzojpIDPlJA" name="test"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIwhQIV5EemzzojpIDPlJA" name="assertTrue(list.contains(e));" incoming="_KIwhQoV5EemzzojpIDPlJA" outgoing="_KIwhRoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIwhQYV5EemzzojpIDPlJA" name="list.contains(e)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIwhQ4V5EemzzojpIDPlJA" name="assertEquals(list.size(),test.size());" incoming="_KIwhRoV5EemzzojpIDPlJA" outgoing="_KIwhR4V5EemzzojpIDPlJA">
          <argument xmi:id="_KIwhRIV5EemzzojpIDPlJA" name="list.size()"/>
          <argument xmi:id="_KIwhRYV5EemzzojpIDPlJA" name="test.size()"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIwhSIV5EemzzojpIDPlJA" name="testIsPM" specification="_J-ys8IV5EemzzojpIDPlJA" node="_KIwhSYV5EemzzojpIDPlJA _KIwhSoV5EemzzojpIDPlJA _KIwhS4V5EemzzojpIDPlJA _KIxIUYV5EemzzojpIDPlJA _KIxIVoV5EemzzojpIDPlJA _KIxIW4V5EemzzojpIDPlJA _KIxIYIV5EemzzojpIDPlJA _KIxvY4V5EemzzojpIDPlJA _KIxvZoV5EemzzojpIDPlJA _KIxva4V5EemzzojpIDPlJA _KIxvboV5EemzzojpIDPlJA _KIyWdIV5EemzzojpIDPlJA _KIyWd4V5EemzzojpIDPlJA _KIyWfIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIxIUIV5EemzzojpIDPlJA" name="InitNode_m.addRelation(&quot;f&quot;,&quot;g&quot;,0.11f);" target="_KIwhS4V5EemzzojpIDPlJA" source="_KIwhSYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIxIVYV5EemzzojpIDPlJA" name="m.addRelation(&quot;f&quot;,&quot;g&quot;,0.11f);_m.addRelation(&quot;h&quot;,&quot;g&quot;,0.22f);" target="_KIxIUYV5EemzzojpIDPlJA" source="_KIwhS4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIxIWoV5EemzzojpIDPlJA" name="m.addRelation(&quot;h&quot;,&quot;g&quot;,0.22f);_m.addRelation(&quot;h&quot;,&quot;f&quot;,0.33f);" target="_KIxIVoV5EemzzojpIDPlJA" source="_KIxIUYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIxIX4V5EemzzojpIDPlJA" name="m.addRelation(&quot;h&quot;,&quot;f&quot;,0.33f);_m.addRelation(&quot;a&quot;,&quot;b&quot;,0.44f);" target="_KIxIW4V5EemzzojpIDPlJA" source="_KIxIVoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIxvYoV5EemzzojpIDPlJA" name="m.addRelation(&quot;a&quot;,&quot;b&quot;,0.44f);_m.addRelation(&quot;b&quot;,&quot;d&quot;,0.55f);" target="_KIxIYIV5EemzzojpIDPlJA" source="_KIxIW4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIxvZYV5EemzzojpIDPlJA" name="m.addRelation(&quot;b&quot;,&quot;d&quot;,0.55f);_assertTrue(m.isPM());" target="_KIxvY4V5EemzzojpIDPlJA" source="_KIxIYIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIxvaoV5EemzzojpIDPlJA" name="assertTrue(m.isPM());_m.addRelation(&quot;b&quot;,&quot;b&quot;,0.5f);" target="_KIxvZoV5EemzzojpIDPlJA" source="_KIxvY4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIxvbYV5EemzzojpIDPlJA" name="m.addRelation(&quot;b&quot;,&quot;b&quot;,0.5f);_assertTrue(m.isPM());" target="_KIxva4V5EemzzojpIDPlJA" source="_KIxvZoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIyWc4V5EemzzojpIDPlJA" name="assertTrue(m.isPM());_m.addRelation(&quot;b&quot;,&quot;d&quot;,1.5f);" target="_KIxvboV5EemzzojpIDPlJA" source="_KIxva4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIyWdoV5EemzzojpIDPlJA" name="m.addRelation(&quot;b&quot;,&quot;d&quot;,1.5f);_assertFalse(m.isPM());" target="_KIyWdIV5EemzzojpIDPlJA" source="_KIxvboV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIyWe4V5EemzzojpIDPlJA" name="assertFalse(m.isPM());_m.addRelation(&quot;b&quot;,&quot;d&quot;,-2f);" target="_KIyWd4V5EemzzojpIDPlJA" source="_KIyWdIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIy9gYV5EemzzojpIDPlJA" name="m.addRelation(&quot;b&quot;,&quot;d&quot;,-2f);_assertFalse(m.isPM());" target="_KIyWfIV5EemzzojpIDPlJA" source="_KIyWd4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIy9goV5EemzzojpIDPlJA" name="assertFalse(m.isPM());_FinalNode" target="_KIwhSoV5EemzzojpIDPlJA" source="_KIyWfIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIwhSYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIxIUIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIwhSoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KIy9goV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIwhS4V5EemzzojpIDPlJA" name="m.addRelation(&quot;f&quot;,&quot;g&quot;,0.11f);" incoming="_KIxIUIV5EemzzojpIDPlJA" outgoing="_KIxIVYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIwhTIV5EemzzojpIDPlJA" name="&quot;f&quot;"/>
          <argument xmi:id="_KIwhTYV5EemzzojpIDPlJA" name="&quot;g&quot;"/>
          <argument xmi:id="_KIwhToV5EemzzojpIDPlJA" name="0.11f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIxIUYV5EemzzojpIDPlJA" name="m.addRelation(&quot;h&quot;,&quot;g&quot;,0.22f);" incoming="_KIxIVYV5EemzzojpIDPlJA" outgoing="_KIxIWoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIxIUoV5EemzzojpIDPlJA" name="&quot;h&quot;"/>
          <argument xmi:id="_KIxIU4V5EemzzojpIDPlJA" name="&quot;g&quot;"/>
          <argument xmi:id="_KIxIVIV5EemzzojpIDPlJA" name="0.22f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIxIVoV5EemzzojpIDPlJA" name="m.addRelation(&quot;h&quot;,&quot;f&quot;,0.33f);" incoming="_KIxIWoV5EemzzojpIDPlJA" outgoing="_KIxIX4V5EemzzojpIDPlJA">
          <argument xmi:id="_KIxIV4V5EemzzojpIDPlJA" name="&quot;h&quot;"/>
          <argument xmi:id="_KIxIWIV5EemzzojpIDPlJA" name="&quot;f&quot;"/>
          <argument xmi:id="_KIxIWYV5EemzzojpIDPlJA" name="0.33f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIxIW4V5EemzzojpIDPlJA" name="m.addRelation(&quot;a&quot;,&quot;b&quot;,0.44f);" incoming="_KIxIX4V5EemzzojpIDPlJA" outgoing="_KIxvYoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIxIXIV5EemzzojpIDPlJA" name="&quot;a&quot;"/>
          <argument xmi:id="_KIxIXYV5EemzzojpIDPlJA" name="&quot;b&quot;"/>
          <argument xmi:id="_KIxIXoV5EemzzojpIDPlJA" name="0.44f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIxIYIV5EemzzojpIDPlJA" name="m.addRelation(&quot;b&quot;,&quot;d&quot;,0.55f);" incoming="_KIxvYoV5EemzzojpIDPlJA" outgoing="_KIxvZYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIxIYYV5EemzzojpIDPlJA" name="&quot;b&quot;"/>
          <argument xmi:id="_KIxvYIV5EemzzojpIDPlJA" name="&quot;d&quot;"/>
          <argument xmi:id="_KIxvYYV5EemzzojpIDPlJA" name="0.55f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIxvY4V5EemzzojpIDPlJA" name="assertTrue(m.isPM());" incoming="_KIxvZYV5EemzzojpIDPlJA" outgoing="_KIxvaoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIxvZIV5EemzzojpIDPlJA" name="m.isPM()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIxvZoV5EemzzojpIDPlJA" name="m.addRelation(&quot;b&quot;,&quot;b&quot;,0.5f);" incoming="_KIxvaoV5EemzzojpIDPlJA" outgoing="_KIxvbYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIxvZ4V5EemzzojpIDPlJA" name="&quot;b&quot;"/>
          <argument xmi:id="_KIxvaIV5EemzzojpIDPlJA" name="&quot;b&quot;"/>
          <argument xmi:id="_KIxvaYV5EemzzojpIDPlJA" name="0.5f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIxva4V5EemzzojpIDPlJA" name="assertTrue(m.isPM());" incoming="_KIxvbYV5EemzzojpIDPlJA" outgoing="_KIyWc4V5EemzzojpIDPlJA">
          <argument xmi:id="_KIxvbIV5EemzzojpIDPlJA" name="m.isPM()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIxvboV5EemzzojpIDPlJA" name="m.addRelation(&quot;b&quot;,&quot;d&quot;,1.5f);" incoming="_KIyWc4V5EemzzojpIDPlJA" outgoing="_KIyWdoV5EemzzojpIDPlJA">
          <argument xmi:id="_KIyWcIV5EemzzojpIDPlJA" name="&quot;b&quot;"/>
          <argument xmi:id="_KIyWcYV5EemzzojpIDPlJA" name="&quot;d&quot;"/>
          <argument xmi:id="_KIyWcoV5EemzzojpIDPlJA" name="1.5f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIyWdIV5EemzzojpIDPlJA" name="assertFalse(m.isPM());" incoming="_KIyWdoV5EemzzojpIDPlJA" outgoing="_KIyWe4V5EemzzojpIDPlJA">
          <argument xmi:id="_KIyWdYV5EemzzojpIDPlJA" name="m.isPM()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIyWd4V5EemzzojpIDPlJA" name="m.addRelation(&quot;b&quot;,&quot;d&quot;,-2f);" incoming="_KIyWe4V5EemzzojpIDPlJA" outgoing="_KIy9gYV5EemzzojpIDPlJA">
          <argument xmi:id="_KIyWeIV5EemzzojpIDPlJA" name="&quot;b&quot;"/>
          <argument xmi:id="_KIyWeYV5EemzzojpIDPlJA" name="&quot;d&quot;"/>
          <argument xmi:id="_KIyWeoV5EemzzojpIDPlJA" name="-2f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KIyWfIV5EemzzojpIDPlJA" name="assertFalse(m.isPM());" incoming="_KIy9gYV5EemzzojpIDPlJA" outgoing="_KIy9goV5EemzzojpIDPlJA">
          <argument xmi:id="_KIy9gIV5EemzzojpIDPlJA" name="m.isPM()"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KIy9g4V5EemzzojpIDPlJA" name="testGetAllElements" specification="_J-z7EIV5EemzzojpIDPlJA" node="_KIy9hIV5EemzzojpIDPlJA _KIy9hYV5EemzzojpIDPlJA _KIy9hoV5EemzzojpIDPlJA _KIy9iYV5EemzzojpIDPlJA _KIzkkYV5EemzzojpIDPlJA _KIzklIV5EemzzojpIDPlJA _KIzkl4V5EemzzojpIDPlJA _KIzkmoV5EemzzojpIDPlJA _KI0LoIV5EemzzojpIDPlJA _KI0Lo4V5EemzzojpIDPlJA _KI0LpoV5EemzzojpIDPlJA _KI0LqYV5EemzzojpIDPlJA _KI0ysoV5EemzzojpIDPlJA _KI0ytoV5EemzzojpIDPlJA _KI0yu4V5EemzzojpIDPlJA _KI1ZwIV5EemzzojpIDPlJA _KI1ZxYV5EemzzojpIDPlJA _KI1ZyoV5EemzzojpIDPlJA _KI1Zz4V5EemzzojpIDPlJA _KI2A0YV5EemzzojpIDPlJA _KI2A1IV5EemzzojpIDPlJA _KI2A14V5EemzzojpIDPlJA _KI2A2oV5EemzzojpIDPlJA _KI2n4YV5EemzzojpIDPlJA _KI2n5IV5EemzzojpIDPlJA _KI2n54V5EemzzojpIDPlJA _KI2n6oV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIy9h4V5EemzzojpIDPlJA" name="InitNode_Element f=new Function(&quot;f&quot;);" target="_KIy9hoV5EemzzojpIDPlJA" source="_KIy9hIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIy9ioV5EemzzojpIDPlJA" name="Element f=new Function(&quot;f&quot;);_Element g=new Function(&quot;g&quot;);" target="_KIy9iYV5EemzzojpIDPlJA" source="_KIy9hoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIzkkoV5EemzzojpIDPlJA" name="Element g=new Function(&quot;g&quot;);_Element h=new Function(&quot;h&quot;);" target="_KIzkkYV5EemzzojpIDPlJA" source="_KIy9iYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIzklYV5EemzzojpIDPlJA" name="Element h=new Function(&quot;h&quot;);_Element a=new Function(&quot;a&quot;);" target="_KIzklIV5EemzzojpIDPlJA" source="_KIzkkYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIzkmIV5EemzzojpIDPlJA" name="Element a=new Function(&quot;a&quot;);_Element b=new Function(&quot;b&quot;);" target="_KIzkl4V5EemzzojpIDPlJA" source="_KIzklIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KIzkm4V5EemzzojpIDPlJA" name="Element b=new Function(&quot;b&quot;);_Element d=new Function(&quot;d&quot;);" target="_KIzkmoV5EemzzojpIDPlJA" source="_KIzkl4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI0LoYV5EemzzojpIDPlJA" name="Element d=new Function(&quot;d&quot;);_ArrayList&lt;Element> elem=new Arr" target="_KI0LoIV5EemzzojpIDPlJA" source="_KIzkmoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI0LpIV5EemzzojpIDPlJA" name="ArrayList&lt;Element> elem=new Ar_ArrayList&lt;Element> test;" target="_KI0Lo4V5EemzzojpIDPlJA" source="_KI0LoIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI0LqIV5EemzzojpIDPlJA" name="ArrayList&lt;Element> test;_test=m.getAllElements();" target="_KI0LpoV5EemzzojpIDPlJA" source="_KI0Lo4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI0ysYV5EemzzojpIDPlJA" name="test=m.getAllElements();_assertTrue(elem.contains(e));" target="_KI0LqYV5EemzzojpIDPlJA" source="_KI0LpoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI0ytYV5EemzzojpIDPlJA" name="assertTrue(elem.contains(e));_assertEquals(elem.size(),test." target="_KI0ysoV5EemzzojpIDPlJA" source="_KI0LqYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI0yuoV5EemzzojpIDPlJA" name="assertEquals(elem.size(),test._m.addRelation(f,g,0.11f);" target="_KI0ytoV5EemzzojpIDPlJA" source="_KI0ysoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI0yv4V5EemzzojpIDPlJA" name="m.addRelation(f,g,0.11f);_m.addRelation(h,g,0.22f);" target="_KI0yu4V5EemzzojpIDPlJA" source="_KI0ytoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI1ZxIV5EemzzojpIDPlJA" name="m.addRelation(h,g,0.22f);_m.addRelation(h,f,0.33f);" target="_KI1ZwIV5EemzzojpIDPlJA" source="_KI0yu4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI1ZyYV5EemzzojpIDPlJA" name="m.addRelation(h,f,0.33f);_m.addRelation(a,b,0.44f);" target="_KI1ZxYV5EemzzojpIDPlJA" source="_KI1ZwIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI1ZzoV5EemzzojpIDPlJA" name="m.addRelation(a,b,0.44f);_m.addRelation(b,d,0.55f);" target="_KI1ZyoV5EemzzojpIDPlJA" source="_KI1ZxYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI2A0IV5EemzzojpIDPlJA" name="m.addRelation(b,d,0.55f);_elem.add(f);" target="_KI1Zz4V5EemzzojpIDPlJA" source="_KI1ZyoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI2A04V5EemzzojpIDPlJA" name="elem.add(f);_elem.add(g);" target="_KI2A0YV5EemzzojpIDPlJA" source="_KI1Zz4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI2A1oV5EemzzojpIDPlJA" name="elem.add(g);_elem.add(h);" target="_KI2A1IV5EemzzojpIDPlJA" source="_KI2A0YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI2A2YV5EemzzojpIDPlJA" name="elem.add(h);_elem.add(a);" target="_KI2A14V5EemzzojpIDPlJA" source="_KI2A1IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI2n4IV5EemzzojpIDPlJA" name="elem.add(a);_elem.add(b);" target="_KI2A2oV5EemzzojpIDPlJA" source="_KI2A14V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI2n44V5EemzzojpIDPlJA" name="elem.add(b);_elem.add(d);" target="_KI2n4YV5EemzzojpIDPlJA" source="_KI2A2oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI2n5oV5EemzzojpIDPlJA" name="elem.add(d);_test=m.getAllElements();" target="_KI2n5IV5EemzzojpIDPlJA" source="_KI2n4YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI2n6YV5EemzzojpIDPlJA" name="test=m.getAllElements();_assertTrue(elem.contains(e));" target="_KI2n54V5EemzzojpIDPlJA" source="_KI2n5IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI3O8IV5EemzzojpIDPlJA" name="assertTrue(elem.contains(e));_assertEquals(elem.size(),test." target="_KI2n6oV5EemzzojpIDPlJA" source="_KI2n54V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI3O8YV5EemzzojpIDPlJA" name="assertEquals(elem.size(),test._FinalNode" target="_KIy9hYV5EemzzojpIDPlJA" source="_KI2n6oV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIy9iIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIzkkIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIzkk4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIzkloV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIzkmYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KIzknIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KI0LooV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KI0LpYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KIy9hIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KIy9h4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KIy9hYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KI3O8YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIy9hoV5EemzzojpIDPlJA" name="Element f=new Function(&quot;f&quot;);" incoming="_KIy9h4V5EemzzojpIDPlJA" outgoing="_KIy9ioV5EemzzojpIDPlJA" variable="_KIy9iIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIy9iYV5EemzzojpIDPlJA" name="Element g=new Function(&quot;g&quot;);" incoming="_KIy9ioV5EemzzojpIDPlJA" outgoing="_KIzkkoV5EemzzojpIDPlJA" variable="_KIzkkIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIzkkYV5EemzzojpIDPlJA" name="Element h=new Function(&quot;h&quot;);" incoming="_KIzkkoV5EemzzojpIDPlJA" outgoing="_KIzklYV5EemzzojpIDPlJA" variable="_KIzkk4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIzklIV5EemzzojpIDPlJA" name="Element a=new Function(&quot;a&quot;);" incoming="_KIzklYV5EemzzojpIDPlJA" outgoing="_KIzkmIV5EemzzojpIDPlJA" variable="_KIzkloV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIzkl4V5EemzzojpIDPlJA" name="Element b=new Function(&quot;b&quot;);" incoming="_KIzkmIV5EemzzojpIDPlJA" outgoing="_KIzkm4V5EemzzojpIDPlJA" variable="_KIzkmYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KIzkmoV5EemzzojpIDPlJA" name="Element d=new Function(&quot;d&quot;);" incoming="_KIzkm4V5EemzzojpIDPlJA" outgoing="_KI0LoYV5EemzzojpIDPlJA" variable="_KIzknIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KI0LoIV5EemzzojpIDPlJA" name="ArrayList&lt;Element> elem=new ArrayList&lt;Element>();" incoming="_KI0LoYV5EemzzojpIDPlJA" outgoing="_KI0LpIV5EemzzojpIDPlJA" variable="_KI0LooV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KI0Lo4V5EemzzojpIDPlJA" name="ArrayList&lt;Element> test;" incoming="_KI0LpIV5EemzzojpIDPlJA" outgoing="_KI0LqIV5EemzzojpIDPlJA" variable="_KI0LpYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI0LpoV5EemzzojpIDPlJA" name="test=m.getAllElements();" incoming="_KI0LqIV5EemzzojpIDPlJA" outgoing="_KI0ysYV5EemzzojpIDPlJA">
          <result xmi:id="_KI0Lp4V5EemzzojpIDPlJA" name="test"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI0LqYV5EemzzojpIDPlJA" name="assertTrue(elem.contains(e));" incoming="_KI0ysYV5EemzzojpIDPlJA" outgoing="_KI0ytYV5EemzzojpIDPlJA">
          <argument xmi:id="_KI0ysIV5EemzzojpIDPlJA" name="elem.contains(e)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI0ysoV5EemzzojpIDPlJA" name="assertEquals(elem.size(),test.size());" incoming="_KI0ytYV5EemzzojpIDPlJA" outgoing="_KI0yuoV5EemzzojpIDPlJA">
          <argument xmi:id="_KI0ys4V5EemzzojpIDPlJA" name="elem.size()"/>
          <argument xmi:id="_KI0ytIV5EemzzojpIDPlJA" name="test.size()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI0ytoV5EemzzojpIDPlJA" name="m.addRelation(f,g,0.11f);" incoming="_KI0yuoV5EemzzojpIDPlJA" outgoing="_KI0yv4V5EemzzojpIDPlJA">
          <argument xmi:id="_KI0yt4V5EemzzojpIDPlJA" name="f"/>
          <argument xmi:id="_KI0yuIV5EemzzojpIDPlJA" name="g"/>
          <argument xmi:id="_KI0yuYV5EemzzojpIDPlJA" name="0.11f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI0yu4V5EemzzojpIDPlJA" name="m.addRelation(h,g,0.22f);" incoming="_KI0yv4V5EemzzojpIDPlJA" outgoing="_KI1ZxIV5EemzzojpIDPlJA">
          <argument xmi:id="_KI0yvIV5EemzzojpIDPlJA" name="h"/>
          <argument xmi:id="_KI0yvYV5EemzzojpIDPlJA" name="g"/>
          <argument xmi:id="_KI0yvoV5EemzzojpIDPlJA" name="0.22f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI1ZwIV5EemzzojpIDPlJA" name="m.addRelation(h,f,0.33f);" incoming="_KI1ZxIV5EemzzojpIDPlJA" outgoing="_KI1ZyYV5EemzzojpIDPlJA">
          <argument xmi:id="_KI1ZwYV5EemzzojpIDPlJA" name="h"/>
          <argument xmi:id="_KI1ZwoV5EemzzojpIDPlJA" name="f"/>
          <argument xmi:id="_KI1Zw4V5EemzzojpIDPlJA" name="0.33f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI1ZxYV5EemzzojpIDPlJA" name="m.addRelation(a,b,0.44f);" incoming="_KI1ZyYV5EemzzojpIDPlJA" outgoing="_KI1ZzoV5EemzzojpIDPlJA">
          <argument xmi:id="_KI1ZxoV5EemzzojpIDPlJA" name="a"/>
          <argument xmi:id="_KI1Zx4V5EemzzojpIDPlJA" name="b"/>
          <argument xmi:id="_KI1ZyIV5EemzzojpIDPlJA" name="0.44f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI1ZyoV5EemzzojpIDPlJA" name="m.addRelation(b,d,0.55f);" incoming="_KI1ZzoV5EemzzojpIDPlJA" outgoing="_KI2A0IV5EemzzojpIDPlJA">
          <argument xmi:id="_KI1Zy4V5EemzzojpIDPlJA" name="b"/>
          <argument xmi:id="_KI1ZzIV5EemzzojpIDPlJA" name="d"/>
          <argument xmi:id="_KI1ZzYV5EemzzojpIDPlJA" name="0.55f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI1Zz4V5EemzzojpIDPlJA" name="elem.add(f);" incoming="_KI2A0IV5EemzzojpIDPlJA" outgoing="_KI2A04V5EemzzojpIDPlJA">
          <argument xmi:id="_KI1Z0IV5EemzzojpIDPlJA" name="f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI2A0YV5EemzzojpIDPlJA" name="elem.add(g);" incoming="_KI2A04V5EemzzojpIDPlJA" outgoing="_KI2A1oV5EemzzojpIDPlJA">
          <argument xmi:id="_KI2A0oV5EemzzojpIDPlJA" name="g"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI2A1IV5EemzzojpIDPlJA" name="elem.add(h);" incoming="_KI2A1oV5EemzzojpIDPlJA" outgoing="_KI2A2YV5EemzzojpIDPlJA">
          <argument xmi:id="_KI2A1YV5EemzzojpIDPlJA" name="h"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI2A14V5EemzzojpIDPlJA" name="elem.add(a);" incoming="_KI2A2YV5EemzzojpIDPlJA" outgoing="_KI2n4IV5EemzzojpIDPlJA">
          <argument xmi:id="_KI2A2IV5EemzzojpIDPlJA" name="a"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI2A2oV5EemzzojpIDPlJA" name="elem.add(b);" incoming="_KI2n4IV5EemzzojpIDPlJA" outgoing="_KI2n44V5EemzzojpIDPlJA">
          <argument xmi:id="_KI2A24V5EemzzojpIDPlJA" name="b"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI2n4YV5EemzzojpIDPlJA" name="elem.add(d);" incoming="_KI2n44V5EemzzojpIDPlJA" outgoing="_KI2n5oV5EemzzojpIDPlJA">
          <argument xmi:id="_KI2n4oV5EemzzojpIDPlJA" name="d"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI2n5IV5EemzzojpIDPlJA" name="test=m.getAllElements();" incoming="_KI2n5oV5EemzzojpIDPlJA" outgoing="_KI2n6YV5EemzzojpIDPlJA">
          <result xmi:id="_KI2n5YV5EemzzojpIDPlJA" name="test"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI2n54V5EemzzojpIDPlJA" name="assertTrue(elem.contains(e));" incoming="_KI2n6YV5EemzzojpIDPlJA" outgoing="_KI3O8IV5EemzzojpIDPlJA">
          <argument xmi:id="_KI2n6IV5EemzzojpIDPlJA" name="elem.contains(e)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI2n6oV5EemzzojpIDPlJA" name="assertEquals(elem.size(),test.size());" incoming="_KI3O8IV5EemzzojpIDPlJA" outgoing="_KI3O8YV5EemzzojpIDPlJA">
          <argument xmi:id="_KI2n64V5EemzzojpIDPlJA" name="elem.size()"/>
          <argument xmi:id="_KI2n7IV5EemzzojpIDPlJA" name="test.size()"/>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_J-r_QIV5EemzzojpIDPlJA" name="setUp" method="_KInXUIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-r_QYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-r_QoV5EemzzojpIDPlJA" key="documentation" value=" @throws java.lang.Exception ignored&#xD;&#xA; "/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_J-tNYIV5EemzzojpIDPlJA" name="tearDown" method="_KIn-YoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-tNYYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-tNYoV5EemzzojpIDPlJA" key="documentation" value=" @throws java.lang.Exception ignored&#xD;&#xA; "/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_J-vCkIV5EemzzojpIDPlJA" name="testAddGetRelation" method="_KIn-ZoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-vCkYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-vCkoV5EemzzojpIDPlJA" key="documentation" value=" Test method for {@link tool.Matrix#addRelation(elemets.Element,elemets.Element, float)} and &#xD;&#xA; {@link tool.Matrix#addRelation(string, string, float)} and&#xD;&#xA; {@link tool.Matrix#getRelation(elemets.Element,elemets.Element)} and &#xD;&#xA; {@link tool.Matrix#getRelation(string , string)}.&#xD;&#xA; "/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_J-w3wIV5EemzzojpIDPlJA" name="testGetRelations" method="_KIrowYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-w3wYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-w3woV5EemzzojpIDPlJA" key="documentation" value=" Test method for {@link tool.Matrix#agetRelations(String, float)}.&#xD;&#xA; "/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_J-ys8IV5EemzzojpIDPlJA" name="testIsPM" method="_KIwhSIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-ys8YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-ys8oV5EemzzojpIDPlJA" key="documentation" value=" Test method for {@link tool.Matrix#isPM()}.&#xD;&#xA; "/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_J-z7EIV5EemzzojpIDPlJA" name="testGetAllElements" method="_KIy9g4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-z7EYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-z7EoV5EemzzojpIDPlJA" key="documentation" value=" Test method for {@link tool.Matrix#getAllElements()}.&#xD;&#xA; "/>
        </eAnnotations>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6jGI4V5EemzzojpIDPlJA" name="Tuple" visibility="public">
      <eAnnotations xmi:id="_J6jGJIV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6jGJYV5EemzzojpIDPlJA" key="documentation" value=" Generic Tuple Class&#xD;&#xA; @author Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA;"/>
      </eAnnotations>
      <ownedTemplateSignature xmi:type="uml:RedefinableTemplateSignature" xmi:id="_J6jGJoV5EemzzojpIDPlJA" parameter="_J6jGJ4V5EemzzojpIDPlJA">
        <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="_J6jGJ4V5EemzzojpIDPlJA" parameteredElement="_J6jGKIV5EemzzojpIDPlJA">
          <ownedParameteredElement xmi:type="uml:Class" xmi:id="_J6jGKIV5EemzzojpIDPlJA" name="E" templateParameter="_J6jGJ4V5EemzzojpIDPlJA"/>
        </ownedParameter>
      </ownedTemplateSignature>
      <ownedAttribute xmi:id="_J-0iIIV5EemzzojpIDPlJA" name="f" visibility="private" type="_J6jGKIV5EemzzojpIDPlJA"/>
      <ownedAttribute xmi:id="_J-1JMIV5EemzzojpIDPlJA" name="s" visibility="private" type="_J6jGKIV5EemzzojpIDPlJA"/>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KI4dEIV5EemzzojpIDPlJA" name="Tuple" specification="_J-3lcIV5EemzzojpIDPlJA" node="_KI5EIIV5EemzzojpIDPlJA _KI5EIYV5EemzzojpIDPlJA _KI5EIoV5EemzzojpIDPlJA _KI5EI4V5EemzzojpIDPlJA _KI5EJIV5EemzzojpIDPlJA _KI5EJoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI5EJYV5EemzzojpIDPlJA" name="InitNode_this.f=first;" target="_KI5EJIV5EemzzojpIDPlJA" source="_KI5EIoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI5EJ4V5EemzzojpIDPlJA" name="this.f=first;_this.s=second;" target="_KI5EJoV5EemzzojpIDPlJA" source="_KI5EJIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI5EKIV5EemzzojpIDPlJA" name="this.s=second;_FinalNode" target="_KI5EI4V5EemzzojpIDPlJA" source="_KI5EJoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI5EIIV5EemzzojpIDPlJA" name="first" type="_J6jGKIV5EemzzojpIDPlJA" parameter="_J-3lcYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI5EIYV5EemzzojpIDPlJA" name="second" type="_J6jGKIV5EemzzojpIDPlJA" parameter="_J-3lcoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KI5EIoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KI5EJYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KI5EI4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KI5EKIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KI5EJIV5EemzzojpIDPlJA" name="this.f=first;" incoming="_KI5EJYV5EemzzojpIDPlJA" outgoing="_KI5EJ4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.f=first;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KI5EJoV5EemzzojpIDPlJA" name="this.s=second;" incoming="_KI5EJ4V5EemzzojpIDPlJA" outgoing="_KI5EKIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.s=second;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KI5EKYV5EemzzojpIDPlJA" name="getFirst" specification="_J-5aoIV5EemzzojpIDPlJA" node="_KI5EKoV5EemzzojpIDPlJA _KI5EK4V5EemzzojpIDPlJA _KI5rMIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI5rMYV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KI5rMIV5EemzzojpIDPlJA" source="_KI5EK4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI5EKoV5EemzzojpIDPlJA" type="_J6jGKIV5EemzzojpIDPlJA" parameter="_J-5ao4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KI5EK4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KI5rMYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KI5rMIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KI5rMYV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KI5rMoV5EemzzojpIDPlJA" name="setFirst" specification="_J-7P0IV5EemzzojpIDPlJA" node="_KI5rM4V5EemzzojpIDPlJA _KI5rNIV5EemzzojpIDPlJA _KI5rNYV5EemzzojpIDPlJA _KI5rNoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI5rN4V5EemzzojpIDPlJA" name="InitNode_this.f=f;" target="_KI5rNoV5EemzzojpIDPlJA" source="_KI5rNIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI5rOIV5EemzzojpIDPlJA" name="this.f=f;_FinalNode" target="_KI5rNYV5EemzzojpIDPlJA" source="_KI5rNoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI5rM4V5EemzzojpIDPlJA" name="f" type="_J6jGKIV5EemzzojpIDPlJA" parameter="_J-7P04V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KI5rNIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KI5rN4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KI5rNYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KI5rOIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KI5rNoV5EemzzojpIDPlJA" name="this.f=f;" incoming="_KI5rN4V5EemzzojpIDPlJA" outgoing="_KI5rOIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.f=f;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KI5rOYV5EemzzojpIDPlJA" name="getSecond" specification="_J-7P1IV5EemzzojpIDPlJA" node="_KI5rOoV5EemzzojpIDPlJA _KI5rO4V5EemzzojpIDPlJA _KI6SQIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI6SQYV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KI6SQIV5EemzzojpIDPlJA" source="_KI5rO4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI5rOoV5EemzzojpIDPlJA" type="_J6jGKIV5EemzzojpIDPlJA" parameter="_J-7P14V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KI5rO4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KI6SQYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KI6SQIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KI6SQYV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KI6SQoV5EemzzojpIDPlJA" name="setSecond" specification="_J-9FAIV5EemzzojpIDPlJA" node="_KI6SQ4V5EemzzojpIDPlJA _KI6SRIV5EemzzojpIDPlJA _KI6SRYV5EemzzojpIDPlJA _KI6SRoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI6SR4V5EemzzojpIDPlJA" name="InitNode_this.s=s;" target="_KI6SRoV5EemzzojpIDPlJA" source="_KI6SRIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI6SSIV5EemzzojpIDPlJA" name="this.s=s;_FinalNode" target="_KI6SRYV5EemzzojpIDPlJA" source="_KI6SRoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI6SQ4V5EemzzojpIDPlJA" name="s" type="_J6jGKIV5EemzzojpIDPlJA" parameter="_J-9FA4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KI6SRIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KI6SR4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KI6SRYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KI6SSIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KI6SRoV5EemzzojpIDPlJA" name="this.s=s;" incoming="_KI6SR4V5EemzzojpIDPlJA" outgoing="_KI6SSIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.s=s;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KI6SSYV5EemzzojpIDPlJA" name="toString" specification="_J--6MIV5EemzzojpIDPlJA" node="_KI65UIV5EemzzojpIDPlJA _KI65UYV5EemzzojpIDPlJA _KI65UoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI65U4V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KI65UoV5EemzzojpIDPlJA" source="_KI65UYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI65UIV5EemzzojpIDPlJA" parameter="_J--6MYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KI65UYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KI65U4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KI65UoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KI65U4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedOperation xmi:id="_J-3lcIV5EemzzojpIDPlJA" name="Tuple" visibility="public" method="_KI4dEIV5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_J-3lcYV5EemzzojpIDPlJA" name="first" type="_J6jGKIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J-3lcoV5EemzzojpIDPlJA" name="second" type="_J6jGKIV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J-5aoIV5EemzzojpIDPlJA" name="getFirst" visibility="public" method="_KI5EKYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-5aoYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-5aooV5EemzzojpIDPlJA" key="documentation" value=" @return the first element&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-5ao4V5EemzzojpIDPlJA" type="_J6jGKIV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J-7P0IV5EemzzojpIDPlJA" name="setFirst" visibility="public" method="_KI5rMoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-7P0YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-7P0oV5EemzzojpIDPlJA" key="documentation" value=" @param f the first element to set&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-7P04V5EemzzojpIDPlJA" name="f" type="_J6jGKIV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J-7P1IV5EemzzojpIDPlJA" name="getSecond" visibility="public" method="_KI5rOYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-7P1YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-7P1oV5EemzzojpIDPlJA" key="documentation" value=" @return the second element&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-7P14V5EemzzojpIDPlJA" type="_J6jGKIV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J-9FAIV5EemzzojpIDPlJA" name="setSecond" visibility="public" method="_KI6SQoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J-9FAYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J-9FAoV5EemzzojpIDPlJA" key="documentation" value=" @param s the second element to set&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J-9FA4V5EemzzojpIDPlJA" name="s" type="_J6jGKIV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J--6MIV5EemzzojpIDPlJA" name="toString" visibility="public" method="_KI6SSYV5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_J--6MYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6jtMIV5EemzzojpIDPlJA" name="Matrix" visibility="public">
      <eAnnotations xmi:id="_J6jtMYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6jtMoV5EemzzojpIDPlJA" key="documentation" value=" Proximity Matrix class. Representation of a symmetric matrix of size n>=1,&#xD;&#xA; where only the values above the main diagonal are stored and are different&#xD;&#xA; from 1. All values must be in [0,1].&#xD;&#xA; &#xD;&#xA; @author Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.2&#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_J_DLoIV5EemzzojpIDPlJA" importedElement="_J97KQYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J_DLooV5EemzzojpIDPlJA" importedElement="_J_DLoYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J_DLpIV5EemzzojpIDPlJA" importedElement="_J_DLo4V5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J_DysYV5EemzzojpIDPlJA" importedElement="_J_DysIV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_J_Dys4V5EemzzojpIDPlJA" importedElement="_J_DysoV5EemzzojpIDPlJA" visibility="private"/>
      <packageImport xmi:id="_J_DytIV5EemzzojpIDPlJA" importedPackage="_J6hQ8IV5EemzzojpIDPlJA" visibility="private"/>
      <ownedAttribute xmi:id="_J_GO8IV5EemzzojpIDPlJA" name="relations" visibility="private" type="_J_DLo4V5EemzzojpIDPlJA"/>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KI-jsIV5EemzzojpIDPlJA" name="Matrix" specification="_J_G2AIV5EemzzojpIDPlJA" node="_KI-jsYV5EemzzojpIDPlJA _KI-jsoV5EemzzojpIDPlJA _KI_KwIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI_KwYV5EemzzojpIDPlJA" name="InitNode_relations=new HashMap&lt;String,Map&lt;String,Float>>();" target="_KI_KwIV5EemzzojpIDPlJA" source="_KI-jsYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI_KwoV5EemzzojpIDPlJA" name="relations=new HashMap&lt;String,M_FinalNode" target="_KI-jsoV5EemzzojpIDPlJA" source="_KI_KwIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KI-jsYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KI_KwYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KI-jsoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KI_KwoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KI_KwIV5EemzzojpIDPlJA" name="relations=new HashMap&lt;String,Map&lt;String,Float>>();" incoming="_KI_KwYV5EemzzojpIDPlJA" outgoing="_KI_KwoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>relations=new HashMap&lt;String,Map&lt;String,Float>>();
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KI_Kw4V5EemzzojpIDPlJA" name="addRelation" specification="_J_WtoIV5EemzzojpIDPlJA" node="_KI_KxIV5EemzzojpIDPlJA _KI_KxYV5EemzzojpIDPlJA _KI_KxoV5EemzzojpIDPlJA _KI_Kx4V5EemzzojpIDPlJA _KI_KyIV5EemzzojpIDPlJA _KI_KyYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI_KzYV5EemzzojpIDPlJA" name="InitNode_addRelation(elem1.getName(),elem2.getName(),f);" target="_KI_KyYV5EemzzojpIDPlJA" source="_KI_Kx4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KI_x0IV5EemzzojpIDPlJA" name="addRelation(elem1.getName(),el_FinalNode" target="_KI_KyIV5EemzzojpIDPlJA" source="_KI_KyYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI_KxIV5EemzzojpIDPlJA" name="elem1" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J_Wto4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI_KxYV5EemzzojpIDPlJA" name="elem2" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J_WtpIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI_KxoV5EemzzojpIDPlJA" name="f" parameter="_J_WtpYV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KI_Kx4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KI_KzYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KI_KyIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KI_x0IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KI_KyYV5EemzzojpIDPlJA" name="addRelation(elem1.getName(),elem2.getName(),f);" incoming="_KI_KzYV5EemzzojpIDPlJA" outgoing="_KI_x0IV5EemzzojpIDPlJA">
          <argument xmi:id="_KI_KyoV5EemzzojpIDPlJA" name="elem1.getName()"/>
          <argument xmi:id="_KI_Ky4V5EemzzojpIDPlJA" name="elem2.getName()"/>
          <argument xmi:id="_KI_KzIV5EemzzojpIDPlJA" name="f"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KI_x0YV5EemzzojpIDPlJA" name="addRelation" specification="_J_a_EIV5EemzzojpIDPlJA" node="_KI_x0oV5EemzzojpIDPlJA _KI_x04V5EemzzojpIDPlJA _KI_x1IV5EemzzojpIDPlJA _KI_x1YV5EemzzojpIDPlJA _KI_x1oV5EemzzojpIDPlJA _KI_x14V5EemzzojpIDPlJA _KI_x2IV5EemzzojpIDPlJA _KJAY4YV5EemzzojpIDPlJA _KJAY5oV5EemzzojpIDPlJA _KJA_8IV5EemzzojpIDPlJA _KJA_9oV5EemzzojpIDPlJA _KJA_94V5EemzzojpIDPlJA _KJA_-YV5EemzzojpIDPlJA _KJA__oV5EemzzojpIDPlJA _KJBnBIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJAY4IV5EemzzojpIDPlJA" name="InitNode_If_0_cond" target="_KI_x14V5EemzzojpIDPlJA" source="_KI_x1YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJAY5IV5EemzzojpIDPlJA" name="If_0_cond_relations.get(s1).put(s2,f);" target="_KJAY4YV5EemzzojpIDPlJA" source="_KI_x14V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJAY5YV5EemzzojpIDPlJA" value="relations.containsKey(s1)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJAY6YV5EemzzojpIDPlJA" name="If_0_cond_relations.put(s1,new HashMap&lt;String,Float>());" target="_KJAY5oV5EemzzojpIDPlJA" source="_KI_x14V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJAY6oV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJA_84V5EemzzojpIDPlJA" name="relations.put(s1,new HashMap&lt;S_relations.get(s1).put(s2,f);" target="_KJA_8IV5EemzzojpIDPlJA" source="_KJAY5oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJA_9IV5EemzzojpIDPlJA" name="thenPathTo_If_0_merge" target="_KI_x2IV5EemzzojpIDPlJA" source="_KJAY4YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJA_9YV5EemzzojpIDPlJA" name="relations.get(s1).put(s2,f);_If_0_merge" target="_KI_x2IV5EemzzojpIDPlJA" source="_KJA_8IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJA_-IV5EemzzojpIDPlJA" name="If_0_merge_If_1_cond" target="_KJA_9oV5EemzzojpIDPlJA" source="_KI_x2IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJA__IV5EemzzojpIDPlJA" name="If_1_cond_relations.get(s2).put(s1,f);" target="_KJA_-YV5EemzzojpIDPlJA" source="_KJA_9oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJA__YV5EemzzojpIDPlJA" value="relations.containsKey(s2)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJBnAoV5EemzzojpIDPlJA" name="If_1_cond_relations.put(s2,new HashMap&lt;String,Float>());" target="_KJA__oV5EemzzojpIDPlJA" source="_KJA_9oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJBnA4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJBnB4V5EemzzojpIDPlJA" name="relations.put(s2,new HashMap&lt;S_relations.get(s2).put(s1,f);" target="_KJBnBIV5EemzzojpIDPlJA" source="_KJA__oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJBnCIV5EemzzojpIDPlJA" name="thenPathTo_If_1_merge" target="_KJA_94V5EemzzojpIDPlJA" source="_KJA_-YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJBnCYV5EemzzojpIDPlJA" name="relations.get(s2).put(s1,f);_If_1_merge" target="_KJA_94V5EemzzojpIDPlJA" source="_KJBnBIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJBnCoV5EemzzojpIDPlJA" name="If_1_merge_FinalNode" target="_KI_x1oV5EemzzojpIDPlJA" source="_KJA_94V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI_x0oV5EemzzojpIDPlJA" name="s1" parameter="_J_a_E4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI_x04V5EemzzojpIDPlJA" name="s2" parameter="_J_a_FIV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KI_x1IV5EemzzojpIDPlJA" name="f" parameter="_J_a_FYV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KI_x1YV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJAY4IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KI_x1oV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJBnCoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KI_x14V5EemzzojpIDPlJA" name="If_0_cond" incoming="_KJAY4IV5EemzzojpIDPlJA" outgoing="_KJAY5IV5EemzzojpIDPlJA _KJAY6YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KI_x2IV5EemzzojpIDPlJA" name="If_0_merge" incoming="_KJA_9IV5EemzzojpIDPlJA _KJA_9YV5EemzzojpIDPlJA" outgoing="_KJA_-IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJAY4YV5EemzzojpIDPlJA" name="relations.get(s1).put(s2,f);" incoming="_KJAY5IV5EemzzojpIDPlJA" outgoing="_KJA_9IV5EemzzojpIDPlJA">
          <argument xmi:id="_KJAY4oV5EemzzojpIDPlJA" name="s2"/>
          <argument xmi:id="_KJAY44V5EemzzojpIDPlJA" name="f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJAY5oV5EemzzojpIDPlJA" name="relations.put(s1,new HashMap&lt;String,Float>());" incoming="_KJAY6YV5EemzzojpIDPlJA" outgoing="_KJA_84V5EemzzojpIDPlJA">
          <argument xmi:id="_KJAY54V5EemzzojpIDPlJA" name="s1"/>
          <argument xmi:id="_KJAY6IV5EemzzojpIDPlJA" name="new HashMap&lt;String,Float>()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJA_8IV5EemzzojpIDPlJA" name="relations.get(s1).put(s2,f);" incoming="_KJA_84V5EemzzojpIDPlJA" outgoing="_KJA_9YV5EemzzojpIDPlJA">
          <argument xmi:id="_KJA_8YV5EemzzojpIDPlJA" name="s2"/>
          <argument xmi:id="_KJA_8oV5EemzzojpIDPlJA" name="f"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJA_9oV5EemzzojpIDPlJA" name="If_1_cond" incoming="_KJA_-IV5EemzzojpIDPlJA" outgoing="_KJA__IV5EemzzojpIDPlJA _KJBnAoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJA_94V5EemzzojpIDPlJA" name="If_1_merge" incoming="_KJBnCIV5EemzzojpIDPlJA _KJBnCYV5EemzzojpIDPlJA" outgoing="_KJBnCoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJA_-YV5EemzzojpIDPlJA" name="relations.get(s2).put(s1,f);" incoming="_KJA__IV5EemzzojpIDPlJA" outgoing="_KJBnCIV5EemzzojpIDPlJA">
          <argument xmi:id="_KJA_-oV5EemzzojpIDPlJA" name="s1"/>
          <argument xmi:id="_KJA_-4V5EemzzojpIDPlJA" name="f"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJA__oV5EemzzojpIDPlJA" name="relations.put(s2,new HashMap&lt;String,Float>());" incoming="_KJBnAoV5EemzzojpIDPlJA" outgoing="_KJBnB4V5EemzzojpIDPlJA">
          <argument xmi:id="_KJBnAIV5EemzzojpIDPlJA" name="s2"/>
          <argument xmi:id="_KJBnAYV5EemzzojpIDPlJA" name="new HashMap&lt;String,Float>()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJBnBIV5EemzzojpIDPlJA" name="relations.get(s2).put(s1,f);" incoming="_KJBnB4V5EemzzojpIDPlJA" outgoing="_KJBnCYV5EemzzojpIDPlJA">
          <argument xmi:id="_KJBnBYV5EemzzojpIDPlJA" name="s1"/>
          <argument xmi:id="_KJBnBoV5EemzzojpIDPlJA" name="f"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJBnC4V5EemzzojpIDPlJA" name="getRelation" specification="_J_nMUIV5EemzzojpIDPlJA" node="_KJCOEIV5EemzzojpIDPlJA _KJCOEYV5EemzzojpIDPlJA _KJCOEoV5EemzzojpIDPlJA _KJCOE4V5EemzzojpIDPlJA _KJCOFIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJCOFYV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJCOFIV5EemzzojpIDPlJA" source="_KJCOE4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJCOEIV5EemzzojpIDPlJA" name="elem1" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J_nMU4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJCOEYV5EemzzojpIDPlJA" name="elem2" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J_nMVIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJCOEoV5EemzzojpIDPlJA" parameter="_J_nMVYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJCOE4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KJCOFYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJCOFIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJCOFYV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJCOFoV5EemzzojpIDPlJA" name="getRelation" specification="_J_oacIV5EemzzojpIDPlJA" node="_KJCOF4V5EemzzojpIDPlJA _KJCOGIV5EemzzojpIDPlJA _KJCOGYV5EemzzojpIDPlJA _KJCOGoV5EemzzojpIDPlJA _KJCOG4V5EemzzojpIDPlJA _KJCOHIV5EemzzojpIDPlJA _KJCOHYV5EemzzojpIDPlJA _KJC1IoV5EemzzojpIDPlJA _KJC1I4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJCOHoV5EemzzojpIDPlJA" name="InitNode_If_2_cond" target="_KJCOHIV5EemzzojpIDPlJA" source="_KJCOGoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJC1IIV5EemzzojpIDPlJA" name="If_2_cond_FinalNode" target="_KJCOG4V5EemzzojpIDPlJA" source="_KJCOHIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJC1IYV5EemzzojpIDPlJA" value="s1 == s2"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJC1JIV5EemzzojpIDPlJA" name="If_2_cond_If_3_cond" target="_KJC1IoV5EemzzojpIDPlJA" source="_KJCOHIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJC1JYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJC1JoV5EemzzojpIDPlJA" name="If_3_cond_FinalNode" target="_KJCOG4V5EemzzojpIDPlJA" source="_KJC1IoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJC1J4V5EemzzojpIDPlJA" value="relations.containsKey(s1) &amp;&amp; relations.get(s1).containsKey(s2)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJC1KIV5EemzzojpIDPlJA" name="If_3_cond_FinalNode" target="_KJCOG4V5EemzzojpIDPlJA" source="_KJC1IoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJC1KYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJC1KoV5EemzzojpIDPlJA" name="If_3_merge_If_2_merge" target="_KJCOHYV5EemzzojpIDPlJA" source="_KJC1I4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJC1K4V5EemzzojpIDPlJA" name="If_2_merge_FinalNode" target="_KJCOG4V5EemzzojpIDPlJA" source="_KJCOHYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJCOF4V5EemzzojpIDPlJA" name="s1" parameter="_J_oac4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJCOGIV5EemzzojpIDPlJA" name="s2" parameter="_J_oadIV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJCOGYV5EemzzojpIDPlJA" parameter="_J_oadYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJCOGoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJCOHoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJCOG4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJC1IIV5EemzzojpIDPlJA _KJC1JoV5EemzzojpIDPlJA _KJC1KIV5EemzzojpIDPlJA _KJC1K4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJCOHIV5EemzzojpIDPlJA" name="If_2_cond" incoming="_KJCOHoV5EemzzojpIDPlJA" outgoing="_KJC1IIV5EemzzojpIDPlJA _KJC1JIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJCOHYV5EemzzojpIDPlJA" name="If_2_merge" incoming="_KJC1KoV5EemzzojpIDPlJA" outgoing="_KJC1K4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJC1IoV5EemzzojpIDPlJA" name="If_3_cond" incoming="_KJC1JIV5EemzzojpIDPlJA" outgoing="_KJC1JoV5EemzzojpIDPlJA _KJC1KIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJC1I4V5EemzzojpIDPlJA" name="If_3_merge" outgoing="_KJC1KoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJDcMIV5EemzzojpIDPlJA" name="getRelations" specification="_J_yLcIV5EemzzojpIDPlJA" node="_KJDcMYV5EemzzojpIDPlJA _KJDcMoV5EemzzojpIDPlJA _KJDcM4V5EemzzojpIDPlJA _KJDcNIV5EemzzojpIDPlJA _KJDcNYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJDcNoV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJDcNYV5EemzzojpIDPlJA" source="_KJDcNIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJDcMYV5EemzzojpIDPlJA" name="elem1" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_J_yLc4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJDcMoV5EemzzojpIDPlJA" name="lambda" parameter="_J_yLdIV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJDcM4V5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" parameter="_J_yLdYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJDcNIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJDcNoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJDcNYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJDcNoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJDcN4V5EemzzojpIDPlJA" name="getRelations" specification="_J_110IV5EemzzojpIDPlJA" node="_KJDcOIV5EemzzojpIDPlJA _KJDcOYV5EemzzojpIDPlJA _KJDcOoV5EemzzojpIDPlJA _KJDcO4V5EemzzojpIDPlJA _KJDcPIV5EemzzojpIDPlJA _KJDcPYV5EemzzojpIDPlJA _KJEDQYV5EemzzojpIDPlJA _KJEDRIV5EemzzojpIDPlJA _KJEDRYV5EemzzojpIDPlJA _KJEDSoV5EemzzojpIDPlJA _KJEqUoV5EemzzojpIDPlJA _KJEqU4V5EemzzojpIDPlJA _KJEqWIV5EemzzojpIDPlJA _KJEqXIV5EemzzojpIDPlJA _KJEqXYV5EemzzojpIDPlJA _KJFRZIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJDcPoV5EemzzojpIDPlJA" name="InitNode_ArrayList&lt;Element> ret=new ArrayList&lt;>();" target="_KJDcPYV5EemzzojpIDPlJA" source="_KJDcO4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJEDQoV5EemzzojpIDPlJA" name="ArrayList&lt;Element> ret=new Arr_boolean self=false;" target="_KJEDQYV5EemzzojpIDPlJA" source="_KJDcPYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJEDRoV5EemzzojpIDPlJA" name="boolean self=false;_If_4_cond" target="_KJEDRIV5EemzzojpIDPlJA" source="_KJEDQYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJEDR4V5EemzzojpIDPlJA" name="If_4_else" target="_KJEDRYV5EemzzojpIDPlJA" source="_KJEDRIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJEDSYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJEqUIV5EemzzojpIDPlJA" name="If_4_cond_self=true;" target="_KJEDSoV5EemzzojpIDPlJA" source="_KJEDRIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJEDSIV5EemzzojpIDPlJA" value="m.getKey() == s1"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJEqUYV5EemzzojpIDPlJA" name="self=true;_If_4_merge" target="_KJEDRYV5EemzzojpIDPlJA" source="_KJEDSoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJEqVIV5EemzzojpIDPlJA" name="If_4_merge_If_5_cond" target="_KJEqUoV5EemzzojpIDPlJA" source="_KJEDRYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJEqVYV5EemzzojpIDPlJA" name="If_5_else" target="_KJEqU4V5EemzzojpIDPlJA" source="_KJEqUoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJEqV4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJEqWoV5EemzzojpIDPlJA" name="If_5_cond_ret.add(new Function(m.getKey()));" target="_KJEqWIV5EemzzojpIDPlJA" source="_KJEqUoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJEqVoV5EemzzojpIDPlJA" value="m.getValue() >= lambda"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJEqW4V5EemzzojpIDPlJA" name="ret.add(new Function(m.getKey(_If_5_merge" target="_KJEqU4V5EemzzojpIDPlJA" source="_KJEqWIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJFRYIV5EemzzojpIDPlJA" name="If_5_merge_If_6_cond" target="_KJEqXIV5EemzzojpIDPlJA" source="_KJEqU4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJFRYYV5EemzzojpIDPlJA" name="If_6_else" target="_KJEqXYV5EemzzojpIDPlJA" source="_KJEqXIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJFRY4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJFRZoV5EemzzojpIDPlJA" name="If_6_cond_ret.add(new Function(s1));" target="_KJFRZIV5EemzzojpIDPlJA" source="_KJEqXIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJFRYoV5EemzzojpIDPlJA" value="!self"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJFRZ4V5EemzzojpIDPlJA" name="ret.add(new Function(s1));_If_6_merge" target="_KJEqXYV5EemzzojpIDPlJA" source="_KJFRZIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJFRaIV5EemzzojpIDPlJA" name="If_6_merge_FinalNode" target="_KJDcPIV5EemzzojpIDPlJA" source="_KJEqXYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJEDQIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJEDQ4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJDcOIV5EemzzojpIDPlJA" name="s1" parameter="_J_1104V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJDcOYV5EemzzojpIDPlJA" name="lambda" parameter="_J_111IV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJDcOoV5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" parameter="_J_111YV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJDcO4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KJDcPoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJDcPIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJFRaIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJDcPYV5EemzzojpIDPlJA" name="ArrayList&lt;Element> ret=new ArrayList&lt;>();" incoming="_KJDcPoV5EemzzojpIDPlJA" outgoing="_KJEDQoV5EemzzojpIDPlJA" variable="_KJEDQIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJEDQYV5EemzzojpIDPlJA" name="boolean self=false;" incoming="_KJEDQoV5EemzzojpIDPlJA" outgoing="_KJEDRoV5EemzzojpIDPlJA" variable="_KJEDQ4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJEDRIV5EemzzojpIDPlJA" name="If_4_cond" incoming="_KJEDRoV5EemzzojpIDPlJA" outgoing="_KJEDR4V5EemzzojpIDPlJA _KJEqUIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJEDRYV5EemzzojpIDPlJA" name="If_4_merge" incoming="_KJEDR4V5EemzzojpIDPlJA _KJEqUYV5EemzzojpIDPlJA" outgoing="_KJEqVIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJEDSoV5EemzzojpIDPlJA" name="self=true;" incoming="_KJEqUIV5EemzzojpIDPlJA" outgoing="_KJEqUYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>self=true;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJEqUoV5EemzzojpIDPlJA" name="If_5_cond" incoming="_KJEqVIV5EemzzojpIDPlJA" outgoing="_KJEqVYV5EemzzojpIDPlJA _KJEqWoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJEqU4V5EemzzojpIDPlJA" name="If_5_merge" incoming="_KJEqVYV5EemzzojpIDPlJA _KJEqW4V5EemzzojpIDPlJA" outgoing="_KJFRYIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJEqWIV5EemzzojpIDPlJA" name="ret.add(new Function(m.getKey()));" incoming="_KJEqWoV5EemzzojpIDPlJA" outgoing="_KJEqW4V5EemzzojpIDPlJA">
          <argument xmi:id="_KJEqWYV5EemzzojpIDPlJA" name="new Function(m.getKey())"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJEqXIV5EemzzojpIDPlJA" name="If_6_cond" incoming="_KJFRYIV5EemzzojpIDPlJA" outgoing="_KJFRYYV5EemzzojpIDPlJA _KJFRZoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJEqXYV5EemzzojpIDPlJA" name="If_6_merge" incoming="_KJFRYYV5EemzzojpIDPlJA _KJFRZ4V5EemzzojpIDPlJA" outgoing="_KJFRaIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJFRZIV5EemzzojpIDPlJA" name="ret.add(new Function(s1));" incoming="_KJFRZoV5EemzzojpIDPlJA" outgoing="_KJFRZ4V5EemzzojpIDPlJA">
          <argument xmi:id="_KJFRZYV5EemzzojpIDPlJA" name="new Function(s1)"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJF4cIV5EemzzojpIDPlJA" name="toString" specification="_J_6uUIV5EemzzojpIDPlJA" node="_KJF4cYV5EemzzojpIDPlJA _KJF4coV5EemzzojpIDPlJA _KJF4c4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJF4dIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJF4c4V5EemzzojpIDPlJA" source="_KJF4coV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJF4cYV5EemzzojpIDPlJA" parameter="_J_6uUYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJF4coV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJF4dIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJF4c4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJF4dIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJF4dYV5EemzzojpIDPlJA" name="toString" specification="_KAA08IV5EemzzojpIDPlJA" node="_KJF4doV5EemzzojpIDPlJA _KJF4d4V5EemzzojpIDPlJA _KJF4eIV5EemzzojpIDPlJA _KJGfgIV5EemzzojpIDPlJA _KJGfgYV5EemzzojpIDPlJA _KJGfhIV5EemzzojpIDPlJA _KJGfh4V5EemzzojpIDPlJA _KJGfioV5EemzzojpIDPlJA _KJHGkYV5EemzzojpIDPlJA _KJHGkoV5EemzzojpIDPlJA _KJHGl4V5EemzzojpIDPlJA _KJHGm4V5EemzzojpIDPlJA _KJHGnIV5EemzzojpIDPlJA _KJHtpIV5EemzzojpIDPlJA _KJHtqIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJGfgoV5EemzzojpIDPlJA" name="InitNode_String ret=&quot;{&quot;;" target="_KJGfgYV5EemzzojpIDPlJA" source="_KJF4eIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJGfhYV5EemzzojpIDPlJA" name="String ret=&quot;{&quot;;_List&lt;String> keys=new ArrayList&lt;String>(rela" target="_KJGfhIV5EemzzojpIDPlJA" source="_KJGfgYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJGfiYV5EemzzojpIDPlJA" name="List&lt;String> keys=new ArrayLis_Collections.sort(keys);" target="_KJGfh4V5EemzzojpIDPlJA" source="_KJGfhIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJGfi4V5EemzzojpIDPlJA" name="Collections.sort(keys);_int comp;" target="_KJGfioV5EemzzojpIDPlJA" source="_KJGfh4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJHGk4V5EemzzojpIDPlJA" name="int comp;_If_7_cond" target="_KJHGkYV5EemzzojpIDPlJA" source="_KJGfioV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJHGlIV5EemzzojpIDPlJA" name="If_7_else" target="_KJHGkoV5EemzzojpIDPlJA" source="_KJHGkYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJHGloV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJHGmoV5EemzzojpIDPlJA" name="If_7_cond_comp=s1.compareTo(s2);" target="_KJHGl4V5EemzzojpIDPlJA" source="_KJHGkYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJHGlYV5EemzzojpIDPlJA" value="relations.get(s1).containsKey(s2)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJHtoIV5EemzzojpIDPlJA" name="comp=s1.compareTo(s2);_If_8_cond" target="_KJHGm4V5EemzzojpIDPlJA" source="_KJHGl4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJHtoYV5EemzzojpIDPlJA" name="If_8_else" target="_KJHGnIV5EemzzojpIDPlJA" source="_KJHGm4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJHto4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJHtpYV5EemzzojpIDPlJA" name="If_8_cond_ret+=&quot;(&quot; + s1 + &quot;,&quot;+ s2+ &quot;),&quot;;" target="_KJHtpIV5EemzzojpIDPlJA" source="_KJHGm4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJHtooV5EemzzojpIDPlJA" value="comp &lt; 0 &amp;&amp; relations.get(s1).get(s2) >= lambda"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJHtpoV5EemzzojpIDPlJA" name="ret+=&quot;(&quot; + s1 + &quot;,&quot;+ s2+ &quot;),&quot;;_If_8_merge" target="_KJHGnIV5EemzzojpIDPlJA" source="_KJHtpIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJHtp4V5EemzzojpIDPlJA" name="If_8_merge_If_7_merge" target="_KJHGkoV5EemzzojpIDPlJA" source="_KJHGnIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJHtqYV5EemzzojpIDPlJA" name="If_7_merge_ret=ret.substring(0,ret.length() - 1) + &quot;}&quot;;" target="_KJHtqIV5EemzzojpIDPlJA" source="_KJHGkoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJHtqoV5EemzzojpIDPlJA" name="ret=ret.substring(0,ret.length_FinalNode" target="_KJGfgIV5EemzzojpIDPlJA" source="_KJHtqIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJGfg4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJGfhoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJHGkIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJF4doV5EemzzojpIDPlJA" name="lambda" parameter="_KAA084V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJF4d4V5EemzzojpIDPlJA" parameter="_KAA09IV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJF4eIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJGfgoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJGfgIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJHtqoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJGfgYV5EemzzojpIDPlJA" name="String ret=&quot;{&quot;;" incoming="_KJGfgoV5EemzzojpIDPlJA" outgoing="_KJGfhYV5EemzzojpIDPlJA" variable="_KJGfg4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJGfhIV5EemzzojpIDPlJA" name="List&lt;String> keys=new ArrayList&lt;String>(relations.keySet());" incoming="_KJGfhYV5EemzzojpIDPlJA" outgoing="_KJGfiYV5EemzzojpIDPlJA" variable="_KJGfhoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJGfh4V5EemzzojpIDPlJA" name="Collections.sort(keys);" incoming="_KJGfiYV5EemzzojpIDPlJA" outgoing="_KJGfi4V5EemzzojpIDPlJA">
          <argument xmi:id="_KJGfiIV5EemzzojpIDPlJA" name="keys"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJGfioV5EemzzojpIDPlJA" name="int comp;" incoming="_KJGfi4V5EemzzojpIDPlJA" outgoing="_KJHGk4V5EemzzojpIDPlJA" variable="_KJHGkIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJHGkYV5EemzzojpIDPlJA" name="If_7_cond" incoming="_KJHGk4V5EemzzojpIDPlJA" outgoing="_KJHGlIV5EemzzojpIDPlJA _KJHGmoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJHGkoV5EemzzojpIDPlJA" name="If_7_merge" incoming="_KJHGlIV5EemzzojpIDPlJA _KJHtp4V5EemzzojpIDPlJA" outgoing="_KJHtqYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJHGl4V5EemzzojpIDPlJA" name="comp=s1.compareTo(s2);" incoming="_KJHGmoV5EemzzojpIDPlJA" outgoing="_KJHtoIV5EemzzojpIDPlJA">
          <argument xmi:id="_KJHGmIV5EemzzojpIDPlJA" name="s2"/>
          <result xmi:id="_KJHGmYV5EemzzojpIDPlJA" name="comp"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJHGm4V5EemzzojpIDPlJA" name="If_8_cond" incoming="_KJHtoIV5EemzzojpIDPlJA" outgoing="_KJHtoYV5EemzzojpIDPlJA _KJHtpYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJHGnIV5EemzzojpIDPlJA" name="If_8_merge" incoming="_KJHtoYV5EemzzojpIDPlJA _KJHtpoV5EemzzojpIDPlJA" outgoing="_KJHtp4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJHtpIV5EemzzojpIDPlJA" name="ret+=&quot;(&quot; + s1 + &quot;,&quot;+ s2+ &quot;),&quot;;" incoming="_KJHtpYV5EemzzojpIDPlJA" outgoing="_KJHtpoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret+=&quot;(&quot; + s1 + &quot;,&quot;+ s2+ &quot;),&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJHtqIV5EemzzojpIDPlJA" name="ret=ret.substring(0,ret.length() - 1) + &quot;}&quot;;" incoming="_KJHtqYV5EemzzojpIDPlJA" outgoing="_KJHtqoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret=ret.substring(0,ret.length() - 1) + &quot;}&quot;;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJIUsIV5EemzzojpIDPlJA" name="isPM" specification="_KABcAIV5EemzzojpIDPlJA" node="_KJIUsYV5EemzzojpIDPlJA _KJIUsoV5EemzzojpIDPlJA _KJIUs4V5EemzzojpIDPlJA _KJIUtIV5EemzzojpIDPlJA _KJIUt4V5EemzzojpIDPlJA _KJIUuIV5EemzzojpIDPlJA _KJI7wIV5EemzzojpIDPlJA _KJI7wYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJIUtYV5EemzzojpIDPlJA" name="InitNode_List&lt;String> keys=new ArrayList&lt;String>(relations.k" target="_KJIUtIV5EemzzojpIDPlJA" source="_KJIUsoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJIUuYV5EemzzojpIDPlJA" name="List&lt;String> keys=new ArrayLis_If_9_cond" target="_KJIUt4V5EemzzojpIDPlJA" source="_KJIUtIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJIUuoV5EemzzojpIDPlJA" name="If_9_else" target="_KJIUuIV5EemzzojpIDPlJA" source="_KJIUt4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJIUvIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJIUvYV5EemzzojpIDPlJA" name="If_9_cond_FinalNode" target="_KJIUs4V5EemzzojpIDPlJA" source="_KJIUt4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJIUu4V5EemzzojpIDPlJA" value="this.getRelation(s1,s2) != 1 &amp;&amp; s1 == s2"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJI7woV5EemzzojpIDPlJA" name="If_9_merge_If_10_cond" target="_KJI7wIV5EemzzojpIDPlJA" source="_KJIUuIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJI7w4V5EemzzojpIDPlJA" name="If_10_else" target="_KJI7wYV5EemzzojpIDPlJA" source="_KJI7wIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJI7xYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJI7xoV5EemzzojpIDPlJA" name="If_10_cond_FinalNode" target="_KJIUs4V5EemzzojpIDPlJA" source="_KJI7wIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJI7xIV5EemzzojpIDPlJA" value="this.getRelation(s1,s2) > 1 || this.getRelation(s1,s2) &lt; 0"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJI7x4V5EemzzojpIDPlJA" name="If_10_merge_FinalNode" target="_KJIUs4V5EemzzojpIDPlJA" source="_KJI7wYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJIUtoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJIUsYV5EemzzojpIDPlJA" parameter="_KABcA4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJIUsoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJIUtYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJIUs4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJIUvYV5EemzzojpIDPlJA _KJI7xoV5EemzzojpIDPlJA _KJI7x4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJIUtIV5EemzzojpIDPlJA" name="List&lt;String> keys=new ArrayList&lt;String>(relations.keySet());" incoming="_KJIUtYV5EemzzojpIDPlJA" outgoing="_KJIUuYV5EemzzojpIDPlJA" variable="_KJIUtoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJIUt4V5EemzzojpIDPlJA" name="If_9_cond" incoming="_KJIUuYV5EemzzojpIDPlJA" outgoing="_KJIUuoV5EemzzojpIDPlJA _KJIUvYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJIUuIV5EemzzojpIDPlJA" name="If_9_merge" incoming="_KJIUuoV5EemzzojpIDPlJA" outgoing="_KJI7woV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJI7wIV5EemzzojpIDPlJA" name="If_10_cond" incoming="_KJI7woV5EemzzojpIDPlJA" outgoing="_KJI7w4V5EemzzojpIDPlJA _KJI7xoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJI7wYV5EemzzojpIDPlJA" name="If_10_merge" incoming="_KJI7w4V5EemzzojpIDPlJA" outgoing="_KJI7x4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJI7yIV5EemzzojpIDPlJA" name="getAllElements" specification="_KAEfUIV5EemzzojpIDPlJA" node="_KJI7yYV5EemzzojpIDPlJA _KJI7yoV5EemzzojpIDPlJA _KJI7y4V5EemzzojpIDPlJA _KJI7zIV5EemzzojpIDPlJA _KJJi0oV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJJi0IV5EemzzojpIDPlJA" name="InitNode_ArrayList&lt;Element> ret=new ArrayList&lt;Element>();" target="_KJI7zIV5EemzzojpIDPlJA" source="_KJI7yoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJJi1IV5EemzzojpIDPlJA" name="ArrayList&lt;Element> ret=new Arr_ret.add(new Function(s));" target="_KJJi0oV5EemzzojpIDPlJA" source="_KJI7zIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJJi1YV5EemzzojpIDPlJA" name="ret.add(new Function(s));_FinalNode" target="_KJI7y4V5EemzzojpIDPlJA" source="_KJJi0oV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJJi0YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJI7yYV5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" parameter="_KAEfU4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJI7yoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJJi0IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJI7y4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJJi1YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJI7zIV5EemzzojpIDPlJA" name="ArrayList&lt;Element> ret=new ArrayList&lt;Element>();" incoming="_KJJi0IV5EemzzojpIDPlJA" outgoing="_KJJi1IV5EemzzojpIDPlJA" variable="_KJJi0YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJJi0oV5EemzzojpIDPlJA" name="ret.add(new Function(s));" incoming="_KJJi1IV5EemzzojpIDPlJA" outgoing="_KJJi1YV5EemzzojpIDPlJA">
          <argument xmi:id="_KJJi04V5EemzzojpIDPlJA" name="new Function(s)"/>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_J_G2AIV5EemzzojpIDPlJA" name="Matrix" visibility="public" method="_KI-jsIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J_G2AYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J_G2AoV5EemzzojpIDPlJA" key="documentation" value=" Constructor of the class.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_J_WtoIV5EemzzojpIDPlJA" name="addRelation" visibility="public" method="_KI_Kw4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J_WtoYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J_WtooV5EemzzojpIDPlJA" key="documentation" value=" Adds a relation to the matrix given by two elements.&#xD;&#xA; @param elem1 first element.&#xD;&#xA; @param elem2 second element.&#xD;&#xA; @param f relation value to be set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J_Wto4V5EemzzojpIDPlJA" name="elem1" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J_WtpIV5EemzzojpIDPlJA" name="elem2" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J_WtpYV5EemzzojpIDPlJA" name="f">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J_a_EIV5EemzzojpIDPlJA" name="addRelation" visibility="public" method="_KI_x0YV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J_a_EYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J_a_EoV5EemzzojpIDPlJA" key="documentation" value=" Adds a relation to the matrix given by two strings.&#xD;&#xA; @param s1 first string.&#xD;&#xA; @param s2 second string.&#xD;&#xA; @param f relation value to be set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J_a_E4V5EemzzojpIDPlJA" name="s1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J_a_FIV5EemzzojpIDPlJA" name="s2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J_a_FYV5EemzzojpIDPlJA" name="f">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J_nMUIV5EemzzojpIDPlJA" name="getRelation" visibility="public" method="_KJBnC4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J_nMUYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J_nMUoV5EemzzojpIDPlJA" key="documentation" value=" To get the relation of two elements from the matrix.&#xD;&#xA; @param elem1 first element.&#xD;&#xA; @param elem2 second element.&#xD;&#xA; @return the relation value.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J_nMU4V5EemzzojpIDPlJA" name="elem1" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J_nMVIV5EemzzojpIDPlJA" name="elem2" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J_nMVYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J_oacIV5EemzzojpIDPlJA" name="getRelation" visibility="public" method="_KJCOFoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J_oacYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J_oacoV5EemzzojpIDPlJA" key="documentation" value=" To get the relation of two strings from the matrix.&#xD;&#xA; @param s1 first string.&#xD;&#xA; @param s2 second string.&#xD;&#xA; @return the relation value.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J_oac4V5EemzzojpIDPlJA" name="s1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J_oadIV5EemzzojpIDPlJA" name="s2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J_oadYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J_yLcIV5EemzzojpIDPlJA" name="getRelations" visibility="public" method="_KJDcMIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J_yLcYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J_yLcoV5EemzzojpIDPlJA" key="documentation" value=" To get all elements with relation higher or equal to lambda.&#xD;&#xA; @param elem1 element to check.&#xD;&#xA; @param lambda lambda.&#xD;&#xA; @return list of elements.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J_yLc4V5EemzzojpIDPlJA" name="elem1" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_J_yLdIV5EemzzojpIDPlJA" name="lambda">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J_yLdYV5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J_110IV5EemzzojpIDPlJA" name="getRelations" visibility="public" method="_KJDcN4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_J_110YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_J_110oV5EemzzojpIDPlJA" key="documentation" value=" To get all elements with relation higher or equal to lambda.&#xD;&#xA; @param s1 element name.&#xD;&#xA; @param lambda lambda.&#xD;&#xA; @return list of elements.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_J_1104V5EemzzojpIDPlJA" name="s1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J_111IV5EemzzojpIDPlJA" name="lambda">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <ownedParameter xmi:id="_J_111YV5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_J_6uUIV5EemzzojpIDPlJA" name="toString" visibility="public" method="_KJF4cIV5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_J_6uUYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KAA08IV5EemzzojpIDPlJA" name="toString" visibility="public" method="_KJF4dYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KAA08YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KAA08oV5EemzzojpIDPlJA" key="documentation" value=" Convert the matrix to a relation list with only relations higher or equal to lambda.&#xD;&#xA; @param lambda lambda.&#xD;&#xA; @return relation list as a string.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KAA084V5EemzzojpIDPlJA" name="lambda">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KAA09IV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KABcAIV5EemzzojpIDPlJA" name="isPM" visibility="public" method="_KJIUsIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KABcAYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KABcAoV5EemzzojpIDPlJA" key="documentation" value=" Checks if the matrix is a poximity relation matrix.&#xD;&#xA; @return True if the matrix is a poximity relation matrix and false otherwise.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KABcA4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KAEfUIV5EemzzojpIDPlJA" name="getAllElements" visibility="public" method="_KJI7yIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KAEfUYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KAEfUoV5EemzzojpIDPlJA" key="documentation" value=" To get all elements of the relation matrix.&#xD;&#xA; @return List of all relation elements.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KAEfU4V5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6jtM4V5EemzzojpIDPlJA" name="PCSSet" visibility="public">
      <eAnnotations xmi:id="_J6jtNIV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6jtNYV5EemzzojpIDPlJA" key="documentation" value=" Class for the problem/constraint/sigma sets.&#xD;&#xA; @author Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_KAHioIV5EemzzojpIDPlJA" importedElement="_J97KQYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KAHiooV5EemzzojpIDPlJA" importedElement="_KAHioYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KAHio4V5EemzzojpIDPlJA" importedElement="_J6hQ8YV5EemzzojpIDPlJA" visibility="private"/>
      <ownedAttribute xmi:id="_KAKl8IV5EemzzojpIDPlJA" name="content" visibility="private" type="_J6jGI4V5EemzzojpIDPlJA" isOrdered="true" isUnique="false" association="_KFsmNoV5EemzzojpIDPlJA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KAKl8YV5EemzzojpIDPlJA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_KALNAIV5EemzzojpIDPlJA" name="TOKEN" visibility="private" isLeaf="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_KAG7kIV5EemzzojpIDPlJA" name="tool.TupleSet" client="_J6jtM4V5EemzzojpIDPlJA" supplier="_J6kUQIV5EemzzojpIDPlJA" contract="_J6kUQIV5EemzzojpIDPlJA"/>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJMmIIV5EemzzojpIDPlJA" name="PCSSet" specification="_KALNAYV5EemzzojpIDPlJA" node="_KJNNMIV5EemzzojpIDPlJA _KJNNMYV5EemzzojpIDPlJA _KJNNMoV5EemzzojpIDPlJA _KJNNM4V5EemzzojpIDPlJA _KJNNNYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJNNNIV5EemzzojpIDPlJA" name="InitNode_content=new ArrayList&lt;Tuple&lt;Element>>();" target="_KJNNM4V5EemzzojpIDPlJA" source="_KJNNMYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJNNNoV5EemzzojpIDPlJA" name="content=new ArrayList&lt;Tuple&lt;El_TOKEN=symbol;" target="_KJNNNYV5EemzzojpIDPlJA" source="_KJNNM4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJNNN4V5EemzzojpIDPlJA" name="TOKEN=symbol;_FinalNode" target="_KJNNMoV5EemzzojpIDPlJA" source="_KJNNNYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJNNMIV5EemzzojpIDPlJA" name="symbol" parameter="_KALNBIV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJNNMYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJNNNIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJNNMoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJNNN4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJNNM4V5EemzzojpIDPlJA" name="content=new ArrayList&lt;Tuple&lt;Element>>();" incoming="_KJNNNIV5EemzzojpIDPlJA" outgoing="_KJNNNoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>content=new ArrayList&lt;Tuple&lt;Element>>();
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJNNNYV5EemzzojpIDPlJA" name="TOKEN=symbol;" incoming="_KJNNNoV5EemzzojpIDPlJA" outgoing="_KJNNN4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>TOKEN=symbol;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJNNOIV5EemzzojpIDPlJA" name="size" specification="_KAPecIV5EemzzojpIDPlJA" node="_KJNNOYV5EemzzojpIDPlJA _KJNNOoV5EemzzojpIDPlJA _KJNNO4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJNNPIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJNNO4V5EemzzojpIDPlJA" source="_KJNNOoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJNNOYV5EemzzojpIDPlJA" parameter="_KAPec4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJNNOoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJNNPIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJNNO4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJNNPIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJN0QIV5EemzzojpIDPlJA" name="get" specification="_KA5lwIV5EemzzojpIDPlJA" node="_KJN0QYV5EemzzojpIDPlJA _KJN0QoV5EemzzojpIDPlJA _KJN0Q4V5EemzzojpIDPlJA _KJN0RIV5EemzzojpIDPlJA _KJN0RYV5EemzzojpIDPlJA _KJN0RoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJN0R4V5EemzzojpIDPlJA" name="InitNode_If_0_cond" target="_KJN0RYV5EemzzojpIDPlJA" source="_KJN0Q4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJN0SIV5EemzzojpIDPlJA" name="If_0_else" target="_KJN0RoV5EemzzojpIDPlJA" source="_KJN0RYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJN0SoV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJN0S4V5EemzzojpIDPlJA" name="If_0_cond_FinalNode" target="_KJN0RIV5EemzzojpIDPlJA" source="_KJN0RYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJN0SYV5EemzzojpIDPlJA" value="index &lt; 0 || index >= size()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJObUIV5EemzzojpIDPlJA" name="If_0_merge_FinalNode" target="_KJN0RIV5EemzzojpIDPlJA" source="_KJN0RoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJN0QYV5EemzzojpIDPlJA" name="index" parameter="_KA5lw4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJN0QoV5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" parameter="_KA5lxIV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJN0Q4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KJN0R4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJN0RIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJN0S4V5EemzzojpIDPlJA _KJObUIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJN0RYV5EemzzojpIDPlJA" name="If_0_cond" incoming="_KJN0R4V5EemzzojpIDPlJA" outgoing="_KJN0SIV5EemzzojpIDPlJA _KJN0S4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJN0RoV5EemzzojpIDPlJA" name="If_0_merge" incoming="_KJN0SIV5EemzzojpIDPlJA" outgoing="_KJObUIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJObUYV5EemzzojpIDPlJA" name="remove" specification="_KBEk4IV5EemzzojpIDPlJA" node="_KJObUoV5EemzzojpIDPlJA _KJObU4V5EemzzojpIDPlJA _KJObVIV5EemzzojpIDPlJA _KJObVYV5EemzzojpIDPlJA _KJObVoV5EemzzojpIDPlJA _KJObV4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJObWIV5EemzzojpIDPlJA" name="InitNode_If_1_cond" target="_KJObVoV5EemzzojpIDPlJA" source="_KJObVIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJPCYIV5EemzzojpIDPlJA" name="If_1_else" target="_KJObV4V5EemzzojpIDPlJA" source="_KJObVoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJPCYoV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJPCY4V5EemzzojpIDPlJA" name="If_1_cond_FinalNode" target="_KJObVYV5EemzzojpIDPlJA" source="_KJObVoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJPCYYV5EemzzojpIDPlJA" value="index &lt; 0 || index >= size()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJPCZIV5EemzzojpIDPlJA" name="If_1_merge_FinalNode" target="_KJObVYV5EemzzojpIDPlJA" source="_KJObV4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJObUoV5EemzzojpIDPlJA" name="index" parameter="_KBEk44V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJObU4V5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" parameter="_KBEk5IV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJObVIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJObWIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJObVYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJPCY4V5EemzzojpIDPlJA _KJPCZIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJObVoV5EemzzojpIDPlJA" name="If_1_cond" incoming="_KJObWIV5EemzzojpIDPlJA" outgoing="_KJPCYIV5EemzzojpIDPlJA _KJPCY4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJObV4V5EemzzojpIDPlJA" name="If_1_merge" incoming="_KJPCYIV5EemzzojpIDPlJA" outgoing="_KJPCZIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJPCZYV5EemzzojpIDPlJA" name="toString" specification="_KBMgsIV5EemzzojpIDPlJA" node="_KJPCZoV5EemzzojpIDPlJA _KJPCZ4V5EemzzojpIDPlJA _KJPCaIV5EemzzojpIDPlJA _KJPCaYV5EemzzojpIDPlJA _KJPpcIV5EemzzojpIDPlJA _KJPpcYV5EemzzojpIDPlJA _KJPpc4V5EemzzojpIDPlJA _KJPpdoV5EemzzojpIDPlJA _KJPpeYV5EemzzojpIDPlJA _KJQQgIV5EemzzojpIDPlJA _KJQQg4V5EemzzojpIDPlJA _KJQQhoV5EemzzojpIDPlJA _KJQQiIV5EemzzojpIDPlJA _KJQ3kIV5EemzzojpIDPlJA _KJQ3koV5EemzzojpIDPlJA _KJQ3k4V5EemzzojpIDPlJA _KJQ3mIV5EemzzojpIDPlJA _KJReoIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJPCaoV5EemzzojpIDPlJA" name="InitNode_String s=&quot;{&quot;;" target="_KJPCaYV5EemzzojpIDPlJA" source="_KJPCZ4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJPpdIV5EemzzojpIDPlJA" name="int i=0_merge" target="_KJPpcIV5EemzzojpIDPlJA" source="_KJPpc4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJPpdYV5EemzzojpIDPlJA" name="For_0_merge_cond" target="_KJPpcYV5EemzzojpIDPlJA" source="_KJPpcIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJPpd4V5EemzzojpIDPlJA" name="For_0_cond_merge" target="_KJPpcIV5EemzzojpIDPlJA" source="_KJPpdoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJPpeIV5EemzzojpIDPlJA" name="String s=&quot;{&quot;;_int i=0" target="_KJPpc4V5EemzzojpIDPlJA" source="_KJPCaYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJPpeoV5EemzzojpIDPlJA" name="For_0_cond_s+=&quot;&quot;;" target="_KJPpeYV5EemzzojpIDPlJA" source="_KJPpcYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJPpe4V5EemzzojpIDPlJA" value="i &lt; size()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJQQgYV5EemzzojpIDPlJA" name="s+=&quot;&quot;;_Tuple&lt;Element> t=content.get(i);" target="_KJQQgIV5EemzzojpIDPlJA" source="_KJPpeYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJQQhYV5EemzzojpIDPlJA" name="Tuple&lt;Element> t=content.get(i_s+=t.getFirst();" target="_KJQQg4V5EemzzojpIDPlJA" source="_KJQQgIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJQQh4V5EemzzojpIDPlJA" name="s+=t.getFirst();_s+=TOKEN;" target="_KJQQhoV5EemzzojpIDPlJA" source="_KJQQg4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJQQioV5EemzzojpIDPlJA" name="s+=TOKEN;_s+=t.getSecond();" target="_KJQQiIV5EemzzojpIDPlJA" source="_KJQQhoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJQ3kYV5EemzzojpIDPlJA" name="s+=t.getSecond();_s+=&quot;&quot;;" target="_KJQ3kIV5EemzzojpIDPlJA" source="_KJQQiIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJQ3lIV5EemzzojpIDPlJA" name="s+=&quot;&quot;;_If_2_cond" target="_KJQ3koV5EemzzojpIDPlJA" source="_KJQ3kIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJQ3lYV5EemzzojpIDPlJA" name="If_2_else" target="_KJQ3k4V5EemzzojpIDPlJA" source="_KJQ3koV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJQ3l4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJQ3mYV5EemzzojpIDPlJA" name="If_2_cond_s+=&quot;, &quot;;" target="_KJQ3mIV5EemzzojpIDPlJA" source="_KJQ3koV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJQ3loV5EemzzojpIDPlJA" value="i &lt; size() - 1"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJQ3moV5EemzzojpIDPlJA" name="s+=&quot;, &quot;;_If_2_merge" target="_KJQ3k4V5EemzzojpIDPlJA" source="_KJQ3mIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJQ3m4V5EemzzojpIDPlJA" name="If_2_merge_i++" target="_KJPpdoV5EemzzojpIDPlJA" source="_KJQ3k4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJReoYV5EemzzojpIDPlJA" name="For_0_cond_s+=&quot;}&quot;;" target="_KJReoIV5EemzzojpIDPlJA" source="_KJPpcYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJReooV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJReo4V5EemzzojpIDPlJA" name="s+=&quot;}&quot;;_FinalNode" target="_KJPCaIV5EemzzojpIDPlJA" source="_KJReoIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJPCa4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJPpcoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJQQgoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJPCZoV5EemzzojpIDPlJA" parameter="_KBMgsYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJPCZ4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KJPCaoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJPCaIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJReo4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJPCaYV5EemzzojpIDPlJA" name="String s=&quot;{&quot;;" incoming="_KJPCaoV5EemzzojpIDPlJA" outgoing="_KJPpeIV5EemzzojpIDPlJA" variable="_KJPCa4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJPpcIV5EemzzojpIDPlJA" name="For_0_merge" incoming="_KJPpdIV5EemzzojpIDPlJA _KJPpd4V5EemzzojpIDPlJA" outgoing="_KJPpdYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJPpcYV5EemzzojpIDPlJA" name="For_0_cond" incoming="_KJPpdYV5EemzzojpIDPlJA" outgoing="_KJPpeoV5EemzzojpIDPlJA _KJReoYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJPpc4V5EemzzojpIDPlJA" name="int i=0" incoming="_KJPpeIV5EemzzojpIDPlJA" outgoing="_KJPpdIV5EemzzojpIDPlJA" variable="_KJPpcoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJPpdoV5EemzzojpIDPlJA" name="i++" incoming="_KJQ3m4V5EemzzojpIDPlJA" outgoing="_KJPpd4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJPpeYV5EemzzojpIDPlJA" name="s+=&quot;&quot;;" incoming="_KJPpeoV5EemzzojpIDPlJA" outgoing="_KJQQgYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>s+=&quot;&quot;;
</body>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJQQgIV5EemzzojpIDPlJA" name="Tuple&lt;Element> t=content.get(i);" incoming="_KJQQgYV5EemzzojpIDPlJA" outgoing="_KJQQhYV5EemzzojpIDPlJA" variable="_KJQQgoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJQQg4V5EemzzojpIDPlJA" name="s+=t.getFirst();" incoming="_KJQQhYV5EemzzojpIDPlJA" outgoing="_KJQQh4V5EemzzojpIDPlJA">
          <result xmi:id="_KJQQhIV5EemzzojpIDPlJA" name="s"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJQQhoV5EemzzojpIDPlJA" name="s+=TOKEN;" incoming="_KJQQh4V5EemzzojpIDPlJA" outgoing="_KJQQioV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>s+=TOKEN;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJQQiIV5EemzzojpIDPlJA" name="s+=t.getSecond();" incoming="_KJQQioV5EemzzojpIDPlJA" outgoing="_KJQ3kYV5EemzzojpIDPlJA">
          <result xmi:id="_KJQQiYV5EemzzojpIDPlJA" name="s"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJQ3kIV5EemzzojpIDPlJA" name="s+=&quot;&quot;;" incoming="_KJQ3kYV5EemzzojpIDPlJA" outgoing="_KJQ3lIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>s+=&quot;&quot;;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJQ3koV5EemzzojpIDPlJA" name="If_2_cond" incoming="_KJQ3lIV5EemzzojpIDPlJA" outgoing="_KJQ3lYV5EemzzojpIDPlJA _KJQ3mYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJQ3k4V5EemzzojpIDPlJA" name="If_2_merge" incoming="_KJQ3lYV5EemzzojpIDPlJA _KJQ3moV5EemzzojpIDPlJA" outgoing="_KJQ3m4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJQ3mIV5EemzzojpIDPlJA" name="s+=&quot;, &quot;;" incoming="_KJQ3mYV5EemzzojpIDPlJA" outgoing="_KJQ3moV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>s+=&quot;, &quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJReoIV5EemzzojpIDPlJA" name="s+=&quot;}&quot;;" incoming="_KJReoYV5EemzzojpIDPlJA" outgoing="_KJReo4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>s+=&quot;}&quot;;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJRepIV5EemzzojpIDPlJA" name="isEmpty" specification="_KBc_YIV5EemzzojpIDPlJA" node="_KJRepYV5EemzzojpIDPlJA _KJRepoV5EemzzojpIDPlJA _KJRep4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJReqIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJRep4V5EemzzojpIDPlJA" source="_KJRepoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJRepYV5EemzzojpIDPlJA" parameter="_KBc_Y4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJRepoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJReqIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJRep4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJReqIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJReqYV5EemzzojpIDPlJA" name="trim" specification="_KBk7MIV5EemzzojpIDPlJA" node="_KJVJAIV5EemzzojpIDPlJA _KJVJAYV5EemzzojpIDPlJA _KJVJAoV5EemzzojpIDPlJA _KJVJBYV5EemzzojpIDPlJA _KJVJBoV5EemzzojpIDPlJA _KJVJCIV5EemzzojpIDPlJA _KJVwEoV5EemzzojpIDPlJA _KJVwFYV5EemzzojpIDPlJA _KJWXIIV5EemzzojpIDPlJA _KJWXI4V5EemzzojpIDPlJA _KJWXJIV5EemzzojpIDPlJA _KJWXJoV5EemzzojpIDPlJA _KJWXKYV5EemzzojpIDPlJA _KJWXLIV5EemzzojpIDPlJA _KJW-MIV5EemzzojpIDPlJA _KJW-MYV5EemzzojpIDPlJA _KJW-NoV5EemzzojpIDPlJA _KJW-OYV5EemzzojpIDPlJA _KJW-OoV5EemzzojpIDPlJA _KJXlQYV5EemzzojpIDPlJA _KJXlRYV5EemzzojpIDPlJA _KJXlRoV5EemzzojpIDPlJA _KJXlTIV5EemzzojpIDPlJA _KJYMUoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJVJA4V5EemzzojpIDPlJA" name="InitNode_ArrayList&lt;Tuple&lt;Element>> contentNew=new ArrayList&lt;" target="_KJVJAoV5EemzzojpIDPlJA" source="_KJVJAIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJVwEIV5EemzzojpIDPlJA" name="int i=0_merge" target="_KJVJBYV5EemzzojpIDPlJA" source="_KJVJCIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJVwEYV5EemzzojpIDPlJA" name="For_1_merge_cond" target="_KJVJBoV5EemzzojpIDPlJA" source="_KJVJBYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJVwE4V5EemzzojpIDPlJA" name="For_1_cond_merge" target="_KJVJBYV5EemzzojpIDPlJA" source="_KJVwEoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJVwFIV5EemzzojpIDPlJA" name="ArrayList&lt;Tuple&lt;Element>> cont_int i=0" target="_KJVJCIV5EemzzojpIDPlJA" source="_KJVJAoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJVwFoV5EemzzojpIDPlJA" name="For_1_cond_boolean alreadyIn=false;" target="_KJVwFYV5EemzzojpIDPlJA" source="_KJVJBoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJVwF4V5EemzzojpIDPlJA" value="i &lt; content.size()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJWXIYV5EemzzojpIDPlJA" name="boolean alreadyIn=false;_Tuple&lt;Element> t1=content.get(i);" target="_KJWXIIV5EemzzojpIDPlJA" source="_KJVwFYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJWXJ4V5EemzzojpIDPlJA" name="int j=0_merge" target="_KJWXI4V5EemzzojpIDPlJA" source="_KJWXJoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJWXKIV5EemzzojpIDPlJA" name="For_2_merge_cond" target="_KJWXJIV5EemzzojpIDPlJA" source="_KJWXI4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJWXKoV5EemzzojpIDPlJA" name="For_2_cond_merge" target="_KJWXI4V5EemzzojpIDPlJA" source="_KJWXKYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJWXK4V5EemzzojpIDPlJA" name="Tuple&lt;Element> t1=content.get(_int j=0" target="_KJWXJoV5EemzzojpIDPlJA" source="_KJWXIIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJWXLYV5EemzzojpIDPlJA" name="For_2_cond_Tuple&lt;Element> t2=contentNew.get(j);" target="_KJWXLIV5EemzzojpIDPlJA" source="_KJWXJIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJWXLoV5EemzzojpIDPlJA" value="j &lt; contentNew.size()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJW-MoV5EemzzojpIDPlJA" name="Tuple&lt;Element> t2=contentNew.g_If_3_cond" target="_KJW-MIV5EemzzojpIDPlJA" source="_KJWXLIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJW-M4V5EemzzojpIDPlJA" name="If_3_else" target="_KJW-MYV5EemzzojpIDPlJA" source="_KJW-MIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJW-NYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJW-N4V5EemzzojpIDPlJA" name="If_3_cond_alreadyIn=true;" target="_KJW-NoV5EemzzojpIDPlJA" source="_KJW-MIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJW-NIV5EemzzojpIDPlJA" value="(t1.getFirst().equals(t2.getFirst())) &amp;&amp; (t1.getSecond().equals(t2.getSecond()))"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJW-OIV5EemzzojpIDPlJA" name="alreadyIn=true;_If_3_merge" target="_KJW-MYV5EemzzojpIDPlJA" source="_KJW-NoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJW-O4V5EemzzojpIDPlJA" name="If_3_merge_If_4_cond" target="_KJW-OYV5EemzzojpIDPlJA" source="_KJW-MYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJW-PIV5EemzzojpIDPlJA" name="If_4_else" target="_KJW-OoV5EemzzojpIDPlJA" source="_KJW-OYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJXlQIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJXlQoV5EemzzojpIDPlJA" name="If_4_cond_alreadyIn=true;" target="_KJXlQYV5EemzzojpIDPlJA" source="_KJW-OYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJW-PYV5EemzzojpIDPlJA" value="(t1.getSecond().equals(t2.getFirst())) &amp;&amp; (t1.getFirst().equals(t2.getSecond()))"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJXlQ4V5EemzzojpIDPlJA" name="alreadyIn=true;_If_4_merge" target="_KJW-OoV5EemzzojpIDPlJA" source="_KJXlQYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJXlRIV5EemzzojpIDPlJA" name="If_4_merge_j++" target="_KJWXKYV5EemzzojpIDPlJA" source="_KJW-OoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJXlR4V5EemzzojpIDPlJA" name="For_2_cond_If_5_cond" target="_KJXlRYV5EemzzojpIDPlJA" source="_KJWXJIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJXlSIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJXlSYV5EemzzojpIDPlJA" name="If_5_else" target="_KJXlRoV5EemzzojpIDPlJA" source="_KJXlRYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJXlS4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJXlToV5EemzzojpIDPlJA" name="If_5_cond_contentNew.add(t1);" target="_KJXlTIV5EemzzojpIDPlJA" source="_KJXlRYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJXlSoV5EemzzojpIDPlJA" value="!alreadyIn"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJYMUIV5EemzzojpIDPlJA" name="contentNew.add(t1);_If_5_merge" target="_KJXlRoV5EemzzojpIDPlJA" source="_KJXlTIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJYMUYV5EemzzojpIDPlJA" name="If_5_merge_i++" target="_KJVwEoV5EemzzojpIDPlJA" source="_KJXlRoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJYMU4V5EemzzojpIDPlJA" name="For_1_cond_content=contentNew;" target="_KJYMUoV5EemzzojpIDPlJA" source="_KJVJBoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJYMVIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJYMVYV5EemzzojpIDPlJA" name="content=contentNew;_FinalNode" target="_KJVJAYV5EemzzojpIDPlJA" source="_KJYMUoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJVJBIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJVJB4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJVwGIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJWXIoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJWXJYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJWXL4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJVJAIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJVJA4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJVJAYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJYMVYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJVJAoV5EemzzojpIDPlJA" name="ArrayList&lt;Tuple&lt;Element>> contentNew=new ArrayList&lt;Tuple&lt;Element>>();" incoming="_KJVJA4V5EemzzojpIDPlJA" outgoing="_KJVwFIV5EemzzojpIDPlJA" variable="_KJVJBIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJVJBYV5EemzzojpIDPlJA" name="For_1_merge" incoming="_KJVwEIV5EemzzojpIDPlJA _KJVwE4V5EemzzojpIDPlJA" outgoing="_KJVwEYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJVJBoV5EemzzojpIDPlJA" name="For_1_cond" incoming="_KJVwEYV5EemzzojpIDPlJA" outgoing="_KJVwFoV5EemzzojpIDPlJA _KJYMU4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJVJCIV5EemzzojpIDPlJA" name="int i=0" incoming="_KJVwFIV5EemzzojpIDPlJA" outgoing="_KJVwEIV5EemzzojpIDPlJA" variable="_KJVJB4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJVwEoV5EemzzojpIDPlJA" name="i++" incoming="_KJYMUYV5EemzzojpIDPlJA" outgoing="_KJVwE4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJVwFYV5EemzzojpIDPlJA" name="boolean alreadyIn=false;" incoming="_KJVwFoV5EemzzojpIDPlJA" outgoing="_KJWXIYV5EemzzojpIDPlJA" variable="_KJVwGIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJWXIIV5EemzzojpIDPlJA" name="Tuple&lt;Element> t1=content.get(i);" incoming="_KJWXIYV5EemzzojpIDPlJA" outgoing="_KJWXK4V5EemzzojpIDPlJA" variable="_KJWXIoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJWXI4V5EemzzojpIDPlJA" name="For_2_merge" incoming="_KJWXJ4V5EemzzojpIDPlJA _KJWXKoV5EemzzojpIDPlJA" outgoing="_KJWXKIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJWXJIV5EemzzojpIDPlJA" name="For_2_cond" incoming="_KJWXKIV5EemzzojpIDPlJA" outgoing="_KJWXLYV5EemzzojpIDPlJA _KJXlR4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJWXJoV5EemzzojpIDPlJA" name="int j=0" incoming="_KJWXK4V5EemzzojpIDPlJA" outgoing="_KJWXJ4V5EemzzojpIDPlJA" variable="_KJWXJYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJWXKYV5EemzzojpIDPlJA" name="j++" incoming="_KJXlRIV5EemzzojpIDPlJA" outgoing="_KJWXKoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJWXLIV5EemzzojpIDPlJA" name="Tuple&lt;Element> t2=contentNew.get(j);" incoming="_KJWXLYV5EemzzojpIDPlJA" outgoing="_KJW-MoV5EemzzojpIDPlJA" variable="_KJWXL4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJW-MIV5EemzzojpIDPlJA" name="If_3_cond" incoming="_KJW-MoV5EemzzojpIDPlJA" outgoing="_KJW-M4V5EemzzojpIDPlJA _KJW-N4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJW-MYV5EemzzojpIDPlJA" name="If_3_merge" incoming="_KJW-M4V5EemzzojpIDPlJA _KJW-OIV5EemzzojpIDPlJA" outgoing="_KJW-O4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJW-NoV5EemzzojpIDPlJA" name="alreadyIn=true;" incoming="_KJW-N4V5EemzzojpIDPlJA" outgoing="_KJW-OIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>alreadyIn=true;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJW-OYV5EemzzojpIDPlJA" name="If_4_cond" incoming="_KJW-O4V5EemzzojpIDPlJA" outgoing="_KJW-PIV5EemzzojpIDPlJA _KJXlQoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJW-OoV5EemzzojpIDPlJA" name="If_4_merge" incoming="_KJW-PIV5EemzzojpIDPlJA _KJXlQ4V5EemzzojpIDPlJA" outgoing="_KJXlRIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJXlQYV5EemzzojpIDPlJA" name="alreadyIn=true;" incoming="_KJXlQoV5EemzzojpIDPlJA" outgoing="_KJXlQ4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>alreadyIn=true;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJXlRYV5EemzzojpIDPlJA" name="If_5_cond" incoming="_KJXlR4V5EemzzojpIDPlJA" outgoing="_KJXlSYV5EemzzojpIDPlJA _KJXlToV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJXlRoV5EemzzojpIDPlJA" name="If_5_merge" incoming="_KJXlSYV5EemzzojpIDPlJA _KJYMUIV5EemzzojpIDPlJA" outgoing="_KJYMUYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJXlTIV5EemzzojpIDPlJA" name="contentNew.add(t1);" incoming="_KJXlToV5EemzzojpIDPlJA" outgoing="_KJYMUIV5EemzzojpIDPlJA">
          <argument xmi:id="_KJXlTYV5EemzzojpIDPlJA" name="t1"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJYMUoV5EemzzojpIDPlJA" name="content=contentNew;" incoming="_KJYMU4V5EemzzojpIDPlJA" outgoing="_KJYMVYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>content=contentNew;
</body>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_KALNAYV5EemzzojpIDPlJA" name="PCSSet" visibility="public" method="_KJMmIIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KALNAoV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KALNA4V5EemzzojpIDPlJA" key="documentation" value=" A set of Tuple &amp;lt;Element &amp;gt;s&#xD;&#xA; @param symbol The symbol to use between the first and second element.&#xD;&#xA;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KALNBIV5EemzzojpIDPlJA" name="symbol">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KAPecIV5EemzzojpIDPlJA" name="size" visibility="public" method="_KJNNOIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KAPecYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KAPecoV5EemzzojpIDPlJA" key="documentation" value=" The size of the set.&#xD;&#xA; @return the size.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KAPec4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KAYoYIV5EemzzojpIDPlJA" name="add" visibility="public">
        <eAnnotations xmi:id="_KAZPcIV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KAZPcYV5EemzzojpIDPlJA" key="documentation" value=" Add an element at the end of the set.&#xD;&#xA; @param element the element to add.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KAZPcoV5EemzzojpIDPlJA" name="e" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KAZPc4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KAk1oIV5EemzzojpIDPlJA" name="add" visibility="public">
        <eAnnotations xmi:id="_KAk1oYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KAk1ooV5EemzzojpIDPlJA" key="documentation" value=" Inserts the specified element at the specified position in this set.&#xD;&#xA; @param index index at which the specified element is to be inserted.&#xD;&#xA; @param element element to be inserted.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KAk1o4V5EemzzojpIDPlJA" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KAk1pIV5EemzzojpIDPlJA" name="element" type="_J6jGI4V5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KAvNsIV5EemzzojpIDPlJA" name="addAll" visibility="public">
        <eAnnotations xmi:id="_KAvNsYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KAvNsoV5EemzzojpIDPlJA" key="documentation" value=" Inserts all of the elements in the specified collection into this set,&#xD;&#xA; starting at the specified position.&#xD;&#xA; @param index index at which to insert the first element from the specified&#xD;&#xA; collection. &#xD;&#xA; @param c collection containing elements to be added to this set.&#xD;&#xA; @return {@code true} if this set changed as a result of the call.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KAvNs4V5EemzzojpIDPlJA" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KAvNtIV5EemzzojpIDPlJA" name="c" type="_KAHioYV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KAvNtYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KA5lwIV5EemzzojpIDPlJA" name="get" visibility="public" method="_KJN0QIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KA5lwYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KA5lwoV5EemzzojpIDPlJA" key="documentation" value=" Returns the element at the specified position in this set.&#xD;&#xA; @param index index of the element to return.&#xD;&#xA; @return the element at the specified position in this set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KA5lw4V5EemzzojpIDPlJA" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KA5lxIV5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KBEk4IV5EemzzojpIDPlJA" name="remove" visibility="public" method="_KJObUYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KBEk4YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBEk4oV5EemzzojpIDPlJA" key="documentation" value=" Removes the element at the specified index from the set.&#xD;&#xA; @param index the index of the element to be removed.&#xD;&#xA; @return the element that was removed from the set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBEk44V5EemzzojpIDPlJA" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KBEk5IV5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KBMgsIV5EemzzojpIDPlJA" name="toString" visibility="public" method="_KJPCZYV5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_KBMgsYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KBWRsIV5EemzzojpIDPlJA" name="addAll" visibility="public">
        <eAnnotations xmi:id="_KBWRsYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBWRsoV5EemzzojpIDPlJA" key="documentation" value=" Add collection of elements to this set.&#xD;&#xA; @param c collection containing elements to be added to this set.&#xD;&#xA; @return {@code true} if this set changed as a result of the call&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBWRs4V5EemzzojpIDPlJA" name="c" type="_KAHioYV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KBWRtIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KBc_YIV5EemzzojpIDPlJA" name="isEmpty" visibility="public" method="_KJRepIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KBc_YYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBc_YoV5EemzzojpIDPlJA" key="documentation" value=" Returns {@code true} if this set contains no elements.&#xD;&#xA; @return {@code true} if this set contains no elements.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBc_Y4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KBk7MIV5EemzzojpIDPlJA" name="trim" visibility="public" method="_KJReqYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KBk7MYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBk7MoV5EemzzojpIDPlJA" key="documentation" value=" Trims the set, that means duplicate elements get removed.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Interface" xmi:id="_J6kUQIV5EemzzojpIDPlJA" name="TupleSet" visibility="public">
      <eAnnotations xmi:id="_J6kUQYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6kUQoV5EemzzojpIDPlJA" key="documentation" value=" Interface for sets, that consist of Tuples of Elements and behave like ArrayLists.&#xD;&#xA; @author Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA;"/>
      </eAnnotations>
      <ownedTemplateSignature xmi:type="uml:RedefinableTemplateSignature" xmi:id="_J6kUQ4V5EemzzojpIDPlJA" parameter="_J6kURIV5EemzzojpIDPlJA">
        <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="_J6kURIV5EemzzojpIDPlJA" parameteredElement="_J6kURYV5EemzzojpIDPlJA">
          <ownedParameteredElement xmi:type="uml:Class" xmi:id="_J6kURYV5EemzzojpIDPlJA" name="E" templateParameter="_J6kURIV5EemzzojpIDPlJA"/>
        </ownedParameter>
      </ownedTemplateSignature>
      <ownedOperation xmi:id="_KBpMoIV5EemzzojpIDPlJA" name="size" visibility="public">
        <eAnnotations xmi:id="_KBpMoYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBpMooV5EemzzojpIDPlJA" key="documentation" value=" The size of the set.&#xD;&#xA; @return the size.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBpMo4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KBrB0IV5EemzzojpIDPlJA" name="add" visibility="public">
        <eAnnotations xmi:id="_KBrB0YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBrB0oV5EemzzojpIDPlJA" key="documentation" value=" Add an element at the end of the set.&#xD;&#xA; @param element the element to add.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBrB04V5EemzzojpIDPlJA" name="e" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KBrB1IV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KBuFIIV5EemzzojpIDPlJA" name="add" visibility="public">
        <eAnnotations xmi:id="_KBuFIYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBuFIoV5EemzzojpIDPlJA" key="documentation" value=" Inserts the specified element at the specified position in this set.&#xD;&#xA; @param index index at which the specified element is to be inserted.&#xD;&#xA; @param element element to be inserted.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBuFI4V5EemzzojpIDPlJA" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KBuFJIV5EemzzojpIDPlJA" name="element" type="_J6jGI4V5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KBvTQIV5EemzzojpIDPlJA" name="addAll" visibility="public">
        <eAnnotations xmi:id="_KBvTQYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBvTQoV5EemzzojpIDPlJA" key="documentation" value=" Add collection of elements to this set.&#xD;&#xA; @param c collection containing elements to be added to this set.&#xD;&#xA; @return {@code true} if this set changed as a result of the call&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBvTQ4V5EemzzojpIDPlJA" name="c" type="_KAHioYV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KBvTRIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KBxIcIV5EemzzojpIDPlJA" name="addAll" visibility="public">
        <eAnnotations xmi:id="_KBxIcYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBxIcoV5EemzzojpIDPlJA" key="documentation" value=" Inserts all of the elements in the specified collection into this set,&#xD;&#xA; starting at the specified position.&#xD;&#xA; @param index index at which to insert the first element from the specified&#xD;&#xA; collection. &#xD;&#xA; @param c collection containing elements to be added to this set.&#xD;&#xA; @return {@code true} if this set changed as a result of the call.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBxIc4V5EemzzojpIDPlJA" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KBxIdIV5EemzzojpIDPlJA" name="c" type="_KAHioYV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KBxIdYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KBxvgIV5EemzzojpIDPlJA" name="get" visibility="public">
        <eAnnotations xmi:id="_KBxvgYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBxvgoV5EemzzojpIDPlJA" key="documentation" value=" Returns the element at the specified position in this set.&#xD;&#xA; @param index index of the element to return.&#xD;&#xA; @return the element at the specified position in this set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBxvg4V5EemzzojpIDPlJA" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KBxvhIV5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KBy9oIV5EemzzojpIDPlJA" name="remove" visibility="public">
        <eAnnotations xmi:id="_KBy9oYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBy9ooV5EemzzojpIDPlJA" key="documentation" value=" Removes the element at the specified index from the set.&#xD;&#xA; @param index the index of the element to be removed.&#xD;&#xA; @return the element that was removed from the set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBy9o4V5EemzzojpIDPlJA" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KBy9pIV5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KBy9pYV5EemzzojpIDPlJA" name="isEmpty" visibility="public">
        <eAnnotations xmi:id="_KBy9poV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBy9p4V5EemzzojpIDPlJA" key="documentation" value=" Returns {@code true} if this set contains no elements.&#xD;&#xA; @return {@code true} if this set contains no elements.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KBy9qIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KBzksIV5EemzzojpIDPlJA" name="trim" visibility="public">
        <eAnnotations xmi:id="_KBzksYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KBzksoV5EemzzojpIDPlJA" key="documentation" value=" Trims the set, that means duplicate elements get removed.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFsmMIV5EemzzojpIDPlJA" name="tool_Assertions" client="_J6ifE4V5EemzzojpIDPlJA" supplier="_J6rB9IV5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFsmMYV5EemzzojpIDPlJA" name="tool_api" client="_J6ifE4V5EemzzojpIDPlJA" supplier="_J6rB84V5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFsmMoV5EemzzojpIDPlJA" name="tool_util" client="_J6ifE4V5EemzzojpIDPlJA" supplier="_J97KQIV5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFsmM4V5EemzzojpIDPlJA" name="tool_elements" client="_J6ifE4V5EemzzojpIDPlJA" supplier="_J6hQ8IV5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFsmNIV5EemzzojpIDPlJA" name="m_target" memberEnd="_J-qKEIV5EemzzojpIDPlJA _KFsmNYV5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFsmNYV5EemzzojpIDPlJA" name="target" type="_J6jGIIV5EemzzojpIDPlJA" association="_KFsmNIV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFsmNoV5EemzzojpIDPlJA" name="content_target" memberEnd="_KAKl8IV5EemzzojpIDPlJA _KFsmN4V5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFsmN4V5EemzzojpIDPlJA" name="target" type="_J6jtM4V5EemzzojpIDPlJA" association="_KFsmNoV5EemzzojpIDPlJA"/>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_J6kURoV5EemzzojpIDPlJA" name="unificationProblem">
    <packagedElement xmi:type="uml:Class" xmi:id="_J6k7UIV5EemzzojpIDPlJA" name="UnificationProblem" visibility="public">
      <eAnnotations xmi:id="_J6k7UYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6k7UoV5EemzzojpIDPlJA" key="documentation" value="&#xD;&#xA; The class Unifier handles the left and right part of the unification problem. &#xD;&#xA; This means that the unification problem will be splitted in a left and right hand side.&#xD;&#xA; For example: p(x,y,x) =? q(f(a),g(b),y) has the left= p(x,y,x) , right= q(f(a),g(b),y)&#xD;&#xA; @author  Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.1&#xD;&#xA; &#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_KB2A8IV5EemzzojpIDPlJA" importedElement="_J97KQYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KB2A8YV5EemzzojpIDPlJA" importedElement="_J_DLo4V5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KB2A8oV5EemzzojpIDPlJA" importedElement="_J6hQ8YV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KB2A84V5EemzzojpIDPlJA" importedElement="_J6ifEIV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KB2A9IV5EemzzojpIDPlJA" importedElement="_J6jtMIV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KB2A9YV5EemzzojpIDPlJA" importedElement="_J6jtM4V5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KB2A9oV5EemzzojpIDPlJA" importedElement="_J6jGI4V5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KB2A94V5EemzzojpIDPlJA" importedElement="_J6mJcIV5EemzzojpIDPlJA" visibility="private"/>
      <ownedAttribute xmi:id="_KB32IIV5EemzzojpIDPlJA" name="right" visibility="private" type="_J6hQ8YV5EemzzojpIDPlJA" association="_KFtNRoV5EemzzojpIDPlJA"/>
      <ownedAttribute xmi:id="_KB5EQIV5EemzzojpIDPlJA" name="left" visibility="private" type="_J6hQ8YV5EemzzojpIDPlJA" association="_KFtNSIV5EemzzojpIDPlJA"/>
      <ownedAttribute xmi:id="_KB8HkIV5EemzzojpIDPlJA" name="sortedListOfFunctions" visibility="private" type="_J6ifEIV5EemzzojpIDPlJA" isOrdered="true" isUnique="false" association="_KFtNSoV5EemzzojpIDPlJA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KB8HkYV5EemzzojpIDPlJA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_KB98wIV5EemzzojpIDPlJA" name="proximityRelations" visibility="private" type="_J6jtMIV5EemzzojpIDPlJA" association="_KFtNTIV5EemzzojpIDPlJA"/>
      <ownedAttribute xmi:id="_KCBAEIV5EemzzojpIDPlJA" name="openCases" visibility="private" type="_J6jGI4V5EemzzojpIDPlJA" isOrdered="true" isUnique="false" association="_KFtNToV5EemzzojpIDPlJA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KCBnIIV5EemzzojpIDPlJA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_KCC1QIV5EemzzojpIDPlJA" name="prob" visibility="public" type="_J6liYIV5EemzzojpIDPlJA" association="_KFtNUIV5EemzzojpIDPlJA"/>
      <ownedAttribute xmi:id="_KCDcUIV5EemzzojpIDPlJA" name="lambda" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_KCDcUYV5EemzzojpIDPlJA" name="" value="1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_KCDcUoV5EemzzojpIDPlJA" name="status" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_KCDcU4V5EemzzojpIDPlJA" name="" value="0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </defaultValue>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJfhEIV5EemzzojpIDPlJA" name="UnificationProblem" specification="_KCI74IV5EemzzojpIDPlJA" node="_KJfhEYV5EemzzojpIDPlJA _KJfhEoV5EemzzojpIDPlJA _KJfhE4V5EemzzojpIDPlJA _KJfhFIV5EemzzojpIDPlJA _KJfhFYV5EemzzojpIDPlJA _KJfhGIV5EemzzojpIDPlJA _KJfhG4V5EemzzojpIDPlJA _KJgIIYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJfhF4V5EemzzojpIDPlJA" name="InitNode_this.setLeft(left);" target="_KJfhFYV5EemzzojpIDPlJA" source="_KJfhE4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJfhGoV5EemzzojpIDPlJA" name="this.setLeft(left);_this.setRight(right);" target="_KJfhGIV5EemzzojpIDPlJA" source="_KJfhFYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJgIIIV5EemzzojpIDPlJA" name="this.setRight(right);_openCases=new ArrayList&lt;Tuple&lt;Function" target="_KJfhG4V5EemzzojpIDPlJA" source="_KJfhGIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJgIIoV5EemzzojpIDPlJA" name="openCases=new ArrayList&lt;Tuple&lt;_prob=new Problem(new Tuple&lt;El" target="_KJgIIYV5EemzzojpIDPlJA" source="_KJfhG4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJgII4V5EemzzojpIDPlJA" name="prob=new Problem(new Tuple&lt;Ele_FinalNode" target="_KJfhFIV5EemzzojpIDPlJA" source="_KJgIIYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJfhEYV5EemzzojpIDPlJA" name="left" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KCI744V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJfhEoV5EemzzojpIDPlJA" name="right" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KCI75IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJfhE4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KJfhF4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJfhFIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJgII4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJfhFYV5EemzzojpIDPlJA" name="this.setLeft(left);" incoming="_KJfhF4V5EemzzojpIDPlJA" outgoing="_KJfhGoV5EemzzojpIDPlJA">
          <argument xmi:id="_KJfhFoV5EemzzojpIDPlJA" name="left"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJfhGIV5EemzzojpIDPlJA" name="this.setRight(right);" incoming="_KJfhGoV5EemzzojpIDPlJA" outgoing="_KJgIIIV5EemzzojpIDPlJA">
          <argument xmi:id="_KJfhGYV5EemzzojpIDPlJA" name="right"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJfhG4V5EemzzojpIDPlJA" name="openCases=new ArrayList&lt;Tuple&lt;Function>>();" incoming="_KJgIIIV5EemzzojpIDPlJA" outgoing="_KJgIIoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>openCases=new ArrayList&lt;Tuple&lt;Function>>();
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJgIIYV5EemzzojpIDPlJA" name="prob=new Problem(new Tuple&lt;Element>(left,right));" incoming="_KJgIIoV5EemzzojpIDPlJA" outgoing="_KJgII4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>prob=new Problem(new Tuple&lt;Element>(left,right));
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJgIJIV5EemzzojpIDPlJA" name="getNextOpenCase" specification="_KCObcIV5EemzzojpIDPlJA" node="_KJgIJYV5EemzzojpIDPlJA _KJgIJoV5EemzzojpIDPlJA _KJgIJ4V5EemzzojpIDPlJA _KJgIKIV5EemzzojpIDPlJA _KJgIKYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJgIKoV5EemzzojpIDPlJA" name="InitNode_If_0_cond" target="_KJgIKIV5EemzzojpIDPlJA" source="_KJgIJoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJgIK4V5EemzzojpIDPlJA" name="If_0_else" target="_KJgIKYV5EemzzojpIDPlJA" source="_KJgIKIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJgILYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJgILoV5EemzzojpIDPlJA" name="If_0_cond_FinalNode" target="_KJgIJ4V5EemzzojpIDPlJA" source="_KJgIKIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJgILIV5EemzzojpIDPlJA" value="openCases.size() > 0"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJgvMIV5EemzzojpIDPlJA" name="If_0_merge_FinalNode" target="_KJgIJ4V5EemzzojpIDPlJA" source="_KJgIKYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJgIJYV5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" parameter="_KCObc4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJgIJoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJgIKoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJgIJ4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJgILoV5EemzzojpIDPlJA _KJgvMIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJgIKIV5EemzzojpIDPlJA" name="If_0_cond" incoming="_KJgIKoV5EemzzojpIDPlJA" outgoing="_KJgIK4V5EemzzojpIDPlJA _KJgILoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJgIKYV5EemzzojpIDPlJA" name="If_0_merge" incoming="_KJgIK4V5EemzzojpIDPlJA" outgoing="_KJgvMIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJgvMYV5EemzzojpIDPlJA" name="getNumberOfOpenCases" specification="_KCObdIV5EemzzojpIDPlJA" node="_KJgvMoV5EemzzojpIDPlJA _KJgvM4V5EemzzojpIDPlJA _KJgvNIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJgvNYV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJgvNIV5EemzzojpIDPlJA" source="_KJgvM4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJgvMoV5EemzzojpIDPlJA" parameter="_KCObd4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJgvM4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KJgvNYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJgvNIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJgvNYV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJgvNoV5EemzzojpIDPlJA" name="getRight" specification="_KCT7AIV5EemzzojpIDPlJA" node="_KJgvN4V5EemzzojpIDPlJA _KJgvOIV5EemzzojpIDPlJA _KJgvOYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJgvOoV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJgvOYV5EemzzojpIDPlJA" source="_KJgvOIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJgvN4V5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KCT7A4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJgvOIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJgvOoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJgvOYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJgvOoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJgvO4V5EemzzojpIDPlJA" name="setRight" specification="_KCYMcIV5EemzzojpIDPlJA" node="_KJgvPIV5EemzzojpIDPlJA _KJgvPYV5EemzzojpIDPlJA _KJgvPoV5EemzzojpIDPlJA _KJhWQIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJhWQYV5EemzzojpIDPlJA" name="InitNode_this.right=right;" target="_KJhWQIV5EemzzojpIDPlJA" source="_KJgvPYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJhWQoV5EemzzojpIDPlJA" name="this.right=right;_FinalNode" target="_KJgvPoV5EemzzojpIDPlJA" source="_KJhWQIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJgvPIV5EemzzojpIDPlJA" name="right" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KCYMc4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJgvPYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJhWQYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJgvPoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJhWQoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJhWQIV5EemzzojpIDPlJA" name="this.right=right;" incoming="_KJhWQYV5EemzzojpIDPlJA" outgoing="_KJhWQoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.right=right;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJhWQ4V5EemzzojpIDPlJA" name="getLeft" specification="_KCaBoIV5EemzzojpIDPlJA" node="_KJhWRIV5EemzzojpIDPlJA _KJhWRYV5EemzzojpIDPlJA _KJhWRoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJhWR4V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJhWRoV5EemzzojpIDPlJA" source="_KJhWRYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJhWRIV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KCaBo4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJhWRYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJhWR4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJhWRoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJhWR4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJhWSIV5EemzzojpIDPlJA" name="setLeft" specification="_KCdsAIV5EemzzojpIDPlJA" node="_KJhWSYV5EemzzojpIDPlJA _KJhWSoV5EemzzojpIDPlJA _KJhWS4V5EemzzojpIDPlJA _KJhWTIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJhWTYV5EemzzojpIDPlJA" name="InitNode_this.left=left;" target="_KJhWTIV5EemzzojpIDPlJA" source="_KJhWSoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJh9UIV5EemzzojpIDPlJA" name="this.left=left;_FinalNode" target="_KJhWS4V5EemzzojpIDPlJA" source="_KJhWTIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJhWSYV5EemzzojpIDPlJA" name="left" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KCdsA4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJhWSoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJhWTYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJhWS4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJh9UIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJhWTIV5EemzzojpIDPlJA" name="this.left=left;" incoming="_KJhWTYV5EemzzojpIDPlJA" outgoing="_KJh9UIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.left=left;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJh9UYV5EemzzojpIDPlJA" name="getNumberOfFunctions" specification="_KCeTEIV5EemzzojpIDPlJA" node="_KJh9UoV5EemzzojpIDPlJA _KJh9U4V5EemzzojpIDPlJA _KJh9VIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJh9VYV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJh9VIV5EemzzojpIDPlJA" source="_KJh9U4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJh9UoV5EemzzojpIDPlJA" parameter="_KCeTE4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJh9U4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KJh9VYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJh9VIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJh9VYV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJh9VoV5EemzzojpIDPlJA" name="getSortedListOfFunctions" specification="_KCgIQIV5EemzzojpIDPlJA" node="_KJh9V4V5EemzzojpIDPlJA _KJh9WIV5EemzzojpIDPlJA _KJh9WYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJh9WoV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJh9WYV5EemzzojpIDPlJA" source="_KJh9WIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJh9V4V5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" parameter="_KCgIQ4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJh9WIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJh9WoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJh9WYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJh9WoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJikYIV5EemzzojpIDPlJA" name="getProximityRelations" specification="_KClAwIV5EemzzojpIDPlJA" node="_KJikYYV5EemzzojpIDPlJA _KJikYoV5EemzzojpIDPlJA _KJikY4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJikZIV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJikY4V5EemzzojpIDPlJA" source="_KJikYoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJikYYV5EemzzojpIDPlJA" type="_J6jtMIV5EemzzojpIDPlJA" parameter="_KClAw4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJikYoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJikZIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJikY4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJikZIV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJikZYV5EemzzojpIDPlJA" name="setProximityRelations" specification="_KCpSMIV5EemzzojpIDPlJA" node="_KJikZoV5EemzzojpIDPlJA _KJikZ4V5EemzzojpIDPlJA _KJikaIV5EemzzojpIDPlJA _KJikaYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJikaoV5EemzzojpIDPlJA" name="InitNode_this.proximityRelations=proximityRelations;" target="_KJikaYV5EemzzojpIDPlJA" source="_KJikZ4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJika4V5EemzzojpIDPlJA" name="this.proximityRelations=proxim_FinalNode" target="_KJikaIV5EemzzojpIDPlJA" source="_KJikaYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJikZoV5EemzzojpIDPlJA" name="proximityRelations" type="_J6jtMIV5EemzzojpIDPlJA" parameter="_KCpSM4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJikZ4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KJikaoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJikaIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJika4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJikaYV5EemzzojpIDPlJA" name="this.proximityRelations=proximityRelations;" incoming="_KJikaoV5EemzzojpIDPlJA" outgoing="_KJika4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.proximityRelations=proximityRelations;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJikbIV5EemzzojpIDPlJA" name="toString" specification="_KCrHYIV5EemzzojpIDPlJA" node="_KJikbYV5EemzzojpIDPlJA _KJikboV5EemzzojpIDPlJA _KJikb4V5EemzzojpIDPlJA _KJikcIV5EemzzojpIDPlJA _KJjLcYV5EemzzojpIDPlJA _KJjLc4V5EemzzojpIDPlJA _KJjLdoV5EemzzojpIDPlJA _KJjLeIV5EemzzojpIDPlJA _KJjLeoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJikcYV5EemzzojpIDPlJA" name="InitNode_String s=&quot;&quot;;" target="_KJikcIV5EemzzojpIDPlJA" source="_KJikboV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjLcoV5EemzzojpIDPlJA" name="String s=&quot;&quot;;_s+=left.toFullString() + &quot; =?&quot; + right.toFullSt" target="_KJjLcYV5EemzzojpIDPlJA" source="_KJikcIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjLdYV5EemzzojpIDPlJA" name="s+=left.toFullString() + &quot; =?&quot;_s+=System.lineSeparator();" target="_KJjLc4V5EemzzojpIDPlJA" source="_KJjLcYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjLd4V5EemzzojpIDPlJA" name="s+=System.lineSeparator();_s+=&quot;Lambda = &quot; + lambda;" target="_KJjLdoV5EemzzojpIDPlJA" source="_KJjLc4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjLeYV5EemzzojpIDPlJA" name="s+=&quot;Lambda = &quot; + lambda;_s+=&quot; and proximity relations : &quot;;" target="_KJjLeIV5EemzzojpIDPlJA" source="_KJjLdoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjLfYV5EemzzojpIDPlJA" name="s+=&quot; and proximity relations :_s+=proximityRelations.toStrin" target="_KJjLeoV5EemzzojpIDPlJA" source="_KJjLeIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjLfoV5EemzzojpIDPlJA" name="s+=proximityRelations.toString_FinalNode" target="_KJikb4V5EemzzojpIDPlJA" source="_KJjLeoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJjLcIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJikbYV5EemzzojpIDPlJA" parameter="_KCrHYYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJikboV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJikcYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJikb4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJjLfoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJikcIV5EemzzojpIDPlJA" name="String s=&quot;&quot;;" incoming="_KJikcYV5EemzzojpIDPlJA" outgoing="_KJjLcoV5EemzzojpIDPlJA" variable="_KJjLcIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJjLcYV5EemzzojpIDPlJA" name="s+=left.toFullString() + &quot; =?&quot; + right.toFullString();" incoming="_KJjLcoV5EemzzojpIDPlJA" outgoing="_KJjLdYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>s+=left.toFullString() + &quot; =?&quot; + right.toFullString();
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJjLc4V5EemzzojpIDPlJA" name="s+=System.lineSeparator();" incoming="_KJjLdYV5EemzzojpIDPlJA" outgoing="_KJjLd4V5EemzzojpIDPlJA">
          <result xmi:id="_KJjLdIV5EemzzojpIDPlJA" name="s"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJjLdoV5EemzzojpIDPlJA" name="s+=&quot;Lambda = &quot; + lambda;" incoming="_KJjLd4V5EemzzojpIDPlJA" outgoing="_KJjLeYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>s+=&quot;Lambda = &quot; + lambda;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJjLeIV5EemzzojpIDPlJA" name="s+=&quot; and proximity relations : &quot;;" incoming="_KJjLeYV5EemzzojpIDPlJA" outgoing="_KJjLfYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>s+=&quot; and proximity relations : &quot;;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJjLeoV5EemzzojpIDPlJA" name="s+=proximityRelations.toString(lambda);" incoming="_KJjLfYV5EemzzojpIDPlJA" outgoing="_KJjLfoV5EemzzojpIDPlJA">
          <argument xmi:id="_KJjLe4V5EemzzojpIDPlJA" name="lambda"/>
          <result xmi:id="_KJjLfIV5EemzzojpIDPlJA" name="s"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJjLf4V5EemzzojpIDPlJA" name="solveNext" specification="_KCs8kIV5EemzzojpIDPlJA" node="_KJjygIV5EemzzojpIDPlJA _KJjygYV5EemzzojpIDPlJA _KJjygoV5EemzzojpIDPlJA _KJjyg4V5EemzzojpIDPlJA _KJjyhIV5EemzzojpIDPlJA _KJjyiYV5EemzzojpIDPlJA _KJjyioV5EemzzojpIDPlJA _KJjyjIV5EemzzojpIDPlJA _KJjyj4V5EemzzojpIDPlJA _KJkZkoV5EemzzojpIDPlJA _KJkZk4V5EemzzojpIDPlJA _KJkZmIV5EemzzojpIDPlJA _KJkZmYV5EemzzojpIDPlJA _KJkZm4V5EemzzojpIDPlJA _KJkZn4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjyhYV5EemzzojpIDPlJA" name="InitNode_If_1_cond" target="_KJjyg4V5EemzzojpIDPlJA" source="_KJjygYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjyhoV5EemzzojpIDPlJA" name="If_1_else" target="_KJjyhIV5EemzzojpIDPlJA" source="_KJjyg4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJjyiIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjyi4V5EemzzojpIDPlJA" name="If_1_cond_If_2_cond" target="_KJjyiYV5EemzzojpIDPlJA" source="_KJjyg4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJjyh4V5EemzzojpIDPlJA" value="status == 0"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjyjYV5EemzzojpIDPlJA" name="If_2_cond_status=1;" target="_KJjyjIV5EemzzojpIDPlJA" source="_KJjyiYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJjyjoV5EemzzojpIDPlJA" value="Algorithms.preUnification(this)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjykIV5EemzzojpIDPlJA" name="If_2_cond_status=-1;" target="_KJjyj4V5EemzzojpIDPlJA" source="_KJjyiYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJjykYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJjykoV5EemzzojpIDPlJA" name="status=-1;_FinalNode" target="_KJjygoV5EemzzojpIDPlJA" source="_KJjyj4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJkZkIV5EemzzojpIDPlJA" name="thenPathTo_If_2_merge" target="_KJjyioV5EemzzojpIDPlJA" source="_KJjyjIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJkZkYV5EemzzojpIDPlJA" name="If_2_merge_If_1_merge" target="_KJjyhIV5EemzzojpIDPlJA" source="_KJjyioV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJkZlIV5EemzzojpIDPlJA" name="If_1_merge_If_3_cond" target="_KJkZkoV5EemzzojpIDPlJA" source="_KJjyhIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJkZlYV5EemzzojpIDPlJA" name="If_3_else" target="_KJkZk4V5EemzzojpIDPlJA" source="_KJkZkoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJkZl4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJkZmoV5EemzzojpIDPlJA" name="If_3_cond_If_4_cond" target="_KJkZmIV5EemzzojpIDPlJA" source="_KJkZkoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJkZloV5EemzzojpIDPlJA" value="status == 1"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJkZnIV5EemzzojpIDPlJA" name="If_4_cond_status=2;" target="_KJkZm4V5EemzzojpIDPlJA" source="_KJkZmIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJkZnYV5EemzzojpIDPlJA" value="Algorithms.constraintSimplification(prob,proximityRelations,lambda)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJkZnoV5EemzzojpIDPlJA" name="status=2;_FinalNode" target="_KJjygoV5EemzzojpIDPlJA" source="_KJkZm4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJkZoIV5EemzzojpIDPlJA" name="If_4_cond_status=-2;" target="_KJkZn4V5EemzzojpIDPlJA" source="_KJkZmIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJkZoYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlAoIV5EemzzojpIDPlJA" name="status=-2;_FinalNode" target="_KJjygoV5EemzzojpIDPlJA" source="_KJkZn4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlAoYV5EemzzojpIDPlJA" name="If_4_merge_If_3_merge" target="_KJkZk4V5EemzzojpIDPlJA" source="_KJkZmYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlAooV5EemzzojpIDPlJA" name="If_3_merge_FinalNode" target="_KJjygoV5EemzzojpIDPlJA" source="_KJkZk4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJjygIV5EemzzojpIDPlJA" parameter="_KCs8k4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJjygYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJjyhYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJjygoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJjykoV5EemzzojpIDPlJA _KJkZnoV5EemzzojpIDPlJA _KJlAoIV5EemzzojpIDPlJA _KJlAooV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJjyg4V5EemzzojpIDPlJA" name="If_1_cond" incoming="_KJjyhYV5EemzzojpIDPlJA" outgoing="_KJjyhoV5EemzzojpIDPlJA _KJjyi4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJjyhIV5EemzzojpIDPlJA" name="If_1_merge" incoming="_KJjyhoV5EemzzojpIDPlJA _KJkZkYV5EemzzojpIDPlJA" outgoing="_KJkZlIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJjyiYV5EemzzojpIDPlJA" name="If_2_cond" incoming="_KJjyi4V5EemzzojpIDPlJA" outgoing="_KJjyjYV5EemzzojpIDPlJA _KJjykIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJjyioV5EemzzojpIDPlJA" name="If_2_merge" incoming="_KJkZkIV5EemzzojpIDPlJA" outgoing="_KJkZkYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJjyjIV5EemzzojpIDPlJA" name="status=1;" incoming="_KJjyjYV5EemzzojpIDPlJA" outgoing="_KJkZkIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>status=1;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJjyj4V5EemzzojpIDPlJA" name="status=-1;" incoming="_KJjykIV5EemzzojpIDPlJA" outgoing="_KJjykoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>status=-1;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJkZkoV5EemzzojpIDPlJA" name="If_3_cond" incoming="_KJkZlIV5EemzzojpIDPlJA" outgoing="_KJkZlYV5EemzzojpIDPlJA _KJkZmoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJkZk4V5EemzzojpIDPlJA" name="If_3_merge" incoming="_KJkZlYV5EemzzojpIDPlJA _KJlAoYV5EemzzojpIDPlJA" outgoing="_KJlAooV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJkZmIV5EemzzojpIDPlJA" name="If_4_cond" incoming="_KJkZmoV5EemzzojpIDPlJA" outgoing="_KJkZnIV5EemzzojpIDPlJA _KJkZoIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJkZmYV5EemzzojpIDPlJA" name="If_4_merge" outgoing="_KJlAoYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJkZm4V5EemzzojpIDPlJA" name="status=2;" incoming="_KJkZnIV5EemzzojpIDPlJA" outgoing="_KJkZnoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>status=2;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJkZn4V5EemzzojpIDPlJA" name="status=-2;" incoming="_KJkZoIV5EemzzojpIDPlJA" outgoing="_KJlAoIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>status=-2;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJlAo4V5EemzzojpIDPlJA" name="resultString" specification="_KCtjoIV5EemzzojpIDPlJA" node="_KJlApIV5EemzzojpIDPlJA _KJlApYV5EemzzojpIDPlJA _KJlApoV5EemzzojpIDPlJA _KJlAp4V5EemzzojpIDPlJA _KJlAqoV5EemzzojpIDPlJA _KJlArIV5EemzzojpIDPlJA _KJlAroV5EemzzojpIDPlJA _KJlnsYV5EemzzojpIDPlJA _KJlntIV5EemzzojpIDPlJA _KJlnt4V5EemzzojpIDPlJA _KJlnuYV5EemzzojpIDPlJA _KJlnvIV5EemzzojpIDPlJA _KJmOwIV5EemzzojpIDPlJA _KJmOw4V5EemzzojpIDPlJA _KJmOxYV5EemzzojpIDPlJA _KJmOx4V5EemzzojpIDPlJA _KJm10IV5EemzzojpIDPlJA _KJm10oV5EemzzojpIDPlJA _KJm11IV5EemzzojpIDPlJA _KJm114V5EemzzojpIDPlJA _KJm12YV5EemzzojpIDPlJA _KJm124V5EemzzojpIDPlJA _KJnc4YV5EemzzojpIDPlJA _KJnc5IV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlAqIV5EemzzojpIDPlJA" name="InitNode_String ret=&quot;&quot;;" target="_KJlAp4V5EemzzojpIDPlJA" source="_KJlApYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlAq4V5EemzzojpIDPlJA" name="String ret=&quot;&quot;;_ret=&quot;Problem not solveable! Constraint Simpli" target="_KJlAqoV5EemzzojpIDPlJA" source="_KJlAp4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlArYV5EemzzojpIDPlJA" name="ret=&quot;Problem not solveable! Co_ret=&quot;Problem not solveable! p" target="_KJlArIV5EemzzojpIDPlJA" source="_KJlAqoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlnsIV5EemzzojpIDPlJA" name="ret=&quot;Problem not solveable! pr_ret=this.toString();" target="_KJlAroV5EemzzojpIDPlJA" source="_KJlArIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlns4V5EemzzojpIDPlJA" name="ret=this.toString();_ret=this.toString();" target="_KJlnsYV5EemzzojpIDPlJA" source="_KJlAroV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlntoV5EemzzojpIDPlJA" name="ret=this.toString();_ret+=System.lineSeparator();" target="_KJlntIV5EemzzojpIDPlJA" source="_KJlnsYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlnuIV5EemzzojpIDPlJA" name="ret+=System.lineSeparator();_ret+=&quot;sigma = &quot;;" target="_KJlnt4V5EemzzojpIDPlJA" source="_KJlntIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlnu4V5EemzzojpIDPlJA" name="ret+=&quot;sigma = &quot;;_ret+=prob.getSigma().toString();" target="_KJlnuYV5EemzzojpIDPlJA" source="_KJlnt4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJlnvYV5EemzzojpIDPlJA" name="ret+=prob.getSigma().toString(_Problem p=this.prob;" target="_KJlnvIV5EemzzojpIDPlJA" source="_KJlnuYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJmOwYV5EemzzojpIDPlJA" name="Problem p=this.prob;_int i=1;" target="_KJmOwIV5EemzzojpIDPlJA" source="_KJlnvIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJmOxIV5EemzzojpIDPlJA" name="int i=1;_ret+=&quot;psi&quot; + i + &quot; = [&quot;;" target="_KJmOw4V5EemzzojpIDPlJA" source="_KJmOwIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJmOxoV5EemzzojpIDPlJA" name="ret+=&quot;psi&quot; + i + &quot; = [&quot;;_ret+=m.getKey() + &quot; -> {&quot;;" target="_KJmOxYV5EemzzojpIDPlJA" source="_KJmOw4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJmOyIV5EemzzojpIDPlJA" name="ret+=m.getKey() + &quot; -> {&quot;;_ret+=e.getName() + &quot;,&quot;;" target="_KJmOx4V5EemzzojpIDPlJA" source="_KJmOxYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJm10YV5EemzzojpIDPlJA" name="ret+=e.getName() + &quot;,&quot;;_ret=ret.substring(0,ret.length() - 1" target="_KJm10IV5EemzzojpIDPlJA" source="_KJmOx4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJm104V5EemzzojpIDPlJA" name="ret=ret.substring(0,ret.length_ret=ret.substring(0,ret.lengt" target="_KJm10oV5EemzzojpIDPlJA" source="_KJm10IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJm11oV5EemzzojpIDPlJA" name="ret=ret.substring(0,ret.length_ret+=System.lineSeparator();" target="_KJm11IV5EemzzojpIDPlJA" source="_KJm10oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJm12IV5EemzzojpIDPlJA" name="ret+=System.lineSeparator();_p=p.branch;" target="_KJm114V5EemzzojpIDPlJA" source="_KJm11IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJm12oV5EemzzojpIDPlJA" name="p=p.branch;_i++;" target="_KJm12YV5EemzzojpIDPlJA" source="_KJm114V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJnc4IV5EemzzojpIDPlJA" name="i++;_ret+=&quot;sigma = &quot;;" target="_KJm124V5EemzzojpIDPlJA" source="_KJm12YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJnc44V5EemzzojpIDPlJA" name="ret+=&quot;sigma = &quot;;_ret+=p.getSigma().toString();" target="_KJnc4YV5EemzzojpIDPlJA" source="_KJm124V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJnc5YV5EemzzojpIDPlJA" name="ret+=p.getSigma().toString();_ret=&quot;Unknown Error!&quot;;" target="_KJnc5IV5EemzzojpIDPlJA" source="_KJnc4YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJnc5oV5EemzzojpIDPlJA" name="ret=&quot;Unknown Error!&quot;;_FinalNode" target="_KJlApoV5EemzzojpIDPlJA" source="_KJnc5IV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJlAqYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJlnvoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJmOwoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJlApIV5EemzzojpIDPlJA" parameter="_KCtjo4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJlApYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJlAqIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJlApoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJnc5oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJlAp4V5EemzzojpIDPlJA" name="String ret=&quot;&quot;;" incoming="_KJlAqIV5EemzzojpIDPlJA" outgoing="_KJlAq4V5EemzzojpIDPlJA" variable="_KJlAqYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJlAqoV5EemzzojpIDPlJA" name="ret=&quot;Problem not solveable! Constraint Simplification failed!&quot;;" incoming="_KJlAq4V5EemzzojpIDPlJA" outgoing="_KJlArYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret=&quot;Problem not solveable! Constraint Simplification failed!&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJlArIV5EemzzojpIDPlJA" name="ret=&quot;Problem not solveable! pre-Unification failed!&quot;;" incoming="_KJlArYV5EemzzojpIDPlJA" outgoing="_KJlnsIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret=&quot;Problem not solveable! pre-Unification failed!&quot;;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJlAroV5EemzzojpIDPlJA" name="ret=this.toString();" incoming="_KJlnsIV5EemzzojpIDPlJA" outgoing="_KJlns4V5EemzzojpIDPlJA">
          <result xmi:id="_KJlAr4V5EemzzojpIDPlJA" name="ret"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJlnsYV5EemzzojpIDPlJA" name="ret=this.toString();" incoming="_KJlns4V5EemzzojpIDPlJA" outgoing="_KJlntoV5EemzzojpIDPlJA">
          <result xmi:id="_KJlnsoV5EemzzojpIDPlJA" name="ret"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJlntIV5EemzzojpIDPlJA" name="ret+=System.lineSeparator();" incoming="_KJlntoV5EemzzojpIDPlJA" outgoing="_KJlnuIV5EemzzojpIDPlJA">
          <result xmi:id="_KJlntYV5EemzzojpIDPlJA" name="ret"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJlnt4V5EemzzojpIDPlJA" name="ret+=&quot;sigma = &quot;;" incoming="_KJlnuIV5EemzzojpIDPlJA" outgoing="_KJlnu4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret+=&quot;sigma = &quot;;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJlnuYV5EemzzojpIDPlJA" name="ret+=prob.getSigma().toString();" incoming="_KJlnu4V5EemzzojpIDPlJA" outgoing="_KJlnvYV5EemzzojpIDPlJA">
          <result xmi:id="_KJlnuoV5EemzzojpIDPlJA" name="ret"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJlnvIV5EemzzojpIDPlJA" name="Problem p=this.prob;" incoming="_KJlnvYV5EemzzojpIDPlJA" outgoing="_KJmOwYV5EemzzojpIDPlJA" variable="_KJlnvoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJmOwIV5EemzzojpIDPlJA" name="int i=1;" incoming="_KJmOwYV5EemzzojpIDPlJA" outgoing="_KJmOxIV5EemzzojpIDPlJA" variable="_KJmOwoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJmOw4V5EemzzojpIDPlJA" name="ret+=&quot;psi&quot; + i + &quot; = [&quot;;" incoming="_KJmOxIV5EemzzojpIDPlJA" outgoing="_KJmOxoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret+=&quot;psi&quot; + i + &quot; = [&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJmOxYV5EemzzojpIDPlJA" name="ret+=m.getKey() + &quot; -> {&quot;;" incoming="_KJmOxoV5EemzzojpIDPlJA" outgoing="_KJmOyIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret+=m.getKey() + &quot; -> {&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJmOx4V5EemzzojpIDPlJA" name="ret+=e.getName() + &quot;,&quot;;" incoming="_KJmOyIV5EemzzojpIDPlJA" outgoing="_KJm10YV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret+=e.getName() + &quot;,&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJm10IV5EemzzojpIDPlJA" name="ret=ret.substring(0,ret.length() - 1) + &quot;},&quot;;" incoming="_KJm10YV5EemzzojpIDPlJA" outgoing="_KJm104V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret=ret.substring(0,ret.length() - 1) + &quot;},&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJm10oV5EemzzojpIDPlJA" name="ret=ret.substring(0,ret.length() - 1) + &quot;],&quot;;" incoming="_KJm104V5EemzzojpIDPlJA" outgoing="_KJm11oV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret=ret.substring(0,ret.length() - 1) + &quot;],&quot;;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJm11IV5EemzzojpIDPlJA" name="ret+=System.lineSeparator();" incoming="_KJm11oV5EemzzojpIDPlJA" outgoing="_KJm12IV5EemzzojpIDPlJA">
          <result xmi:id="_KJm11YV5EemzzojpIDPlJA" name="ret"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJm114V5EemzzojpIDPlJA" name="p=p.branch;" incoming="_KJm12IV5EemzzojpIDPlJA" outgoing="_KJm12oV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>p=p.branch;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJm12YV5EemzzojpIDPlJA" name="i++;" incoming="_KJm12oV5EemzzojpIDPlJA" outgoing="_KJnc4IV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>i++;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJm124V5EemzzojpIDPlJA" name="ret+=&quot;sigma = &quot;;" incoming="_KJnc4IV5EemzzojpIDPlJA" outgoing="_KJnc44V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret+=&quot;sigma = &quot;;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJnc4YV5EemzzojpIDPlJA" name="ret+=p.getSigma().toString();" incoming="_KJnc44V5EemzzojpIDPlJA" outgoing="_KJnc5YV5EemzzojpIDPlJA">
          <result xmi:id="_KJnc4oV5EemzzojpIDPlJA" name="ret"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJnc5IV5EemzzojpIDPlJA" name="ret=&quot;Unknown Error!&quot;;" incoming="_KJnc5YV5EemzzojpIDPlJA" outgoing="_KJnc5oV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>ret=&quot;Unknown Error!&quot;;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJnc54V5EemzzojpIDPlJA" name="getP" specification="_KCuxwIV5EemzzojpIDPlJA" node="_KJnc6IV5EemzzojpIDPlJA _KJnc6YV5EemzzojpIDPlJA _KJnc6oV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJnc64V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJnc6oV5EemzzojpIDPlJA" source="_KJnc6YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJnc6IV5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KCuxw4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJnc6YV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJnc64V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJnc6oV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJnc64V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJnc7IV5EemzzojpIDPlJA" name="setP" specification="_KCzDMIV5EemzzojpIDPlJA" node="_KJnc7YV5EemzzojpIDPlJA _KJoD8IV5EemzzojpIDPlJA _KJoD8YV5EemzzojpIDPlJA _KJoD8oV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJoD9IV5EemzzojpIDPlJA" name="InitNode_prob.setP(p);" target="_KJoD8oV5EemzzojpIDPlJA" source="_KJoD8IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJoD9YV5EemzzojpIDPlJA" name="prob.setP(p);_FinalNode" target="_KJoD8YV5EemzzojpIDPlJA" source="_KJoD8oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJnc7YV5EemzzojpIDPlJA" name="p" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KCzDM4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJoD8IV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJoD9IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJoD8YV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJoD9YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJoD8oV5EemzzojpIDPlJA" name="prob.setP(p);" incoming="_KJoD9IV5EemzzojpIDPlJA" outgoing="_KJoD9YV5EemzzojpIDPlJA">
          <argument xmi:id="_KJoD84V5EemzzojpIDPlJA" name="p"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJoD9oV5EemzzojpIDPlJA" name="getC" specification="_KC04YIV5EemzzojpIDPlJA" node="_KJoD94V5EemzzojpIDPlJA _KJoD-IV5EemzzojpIDPlJA _KJoD-YV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJoD-oV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJoD-YV5EemzzojpIDPlJA" source="_KJoD-IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJoD94V5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KC04Y4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJoD-IV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJoD-oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJoD-YV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJoD-oV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJoD-4V5EemzzojpIDPlJA" name="setC" specification="_KC6X8IV5EemzzojpIDPlJA" node="_KJoD_IV5EemzzojpIDPlJA _KJoD_YV5EemzzojpIDPlJA _KJoD_oV5EemzzojpIDPlJA _KJoD_4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJorAIV5EemzzojpIDPlJA" name="InitNode_prob.setC(c);" target="_KJoD_4V5EemzzojpIDPlJA" source="_KJoD_YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJorAYV5EemzzojpIDPlJA" name="prob.setC(c);_FinalNode" target="_KJoD_oV5EemzzojpIDPlJA" source="_KJoD_4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJoD_IV5EemzzojpIDPlJA" name="c" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KC6X84V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJoD_YV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJorAIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJoD_oV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJorAYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJoD_4V5EemzzojpIDPlJA" name="prob.setC(c);" incoming="_KJorAIV5EemzzojpIDPlJA" outgoing="_KJorAYV5EemzzojpIDPlJA">
          <argument xmi:id="_KJoEAIV5EemzzojpIDPlJA" name="c"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJorAoV5EemzzojpIDPlJA" name="getSigma" specification="_KC8NIIV5EemzzojpIDPlJA" node="_KJorA4V5EemzzojpIDPlJA _KJorBIV5EemzzojpIDPlJA _KJorBYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJorBoV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJorBYV5EemzzojpIDPlJA" source="_KJorBIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJorA4V5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KC8NI4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJorBIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJorBoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJorBYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJorBoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJorB4V5EemzzojpIDPlJA" name="setSigma" specification="_KDBssIV5EemzzojpIDPlJA" node="_KJorCIV5EemzzojpIDPlJA _KJorCYV5EemzzojpIDPlJA _KJorCoV5EemzzojpIDPlJA _KJorC4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJorDYV5EemzzojpIDPlJA" name="InitNode_prob.setSigma(s);" target="_KJorC4V5EemzzojpIDPlJA" source="_KJorCYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJorDoV5EemzzojpIDPlJA" name="prob.setSigma(s);_FinalNode" target="_KJorCoV5EemzzojpIDPlJA" source="_KJorC4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJorCIV5EemzzojpIDPlJA" name="s" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KDBss4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJorCYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJorDYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJorCoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJorDoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJorC4V5EemzzojpIDPlJA" name="prob.setSigma(s);" incoming="_KJorDYV5EemzzojpIDPlJA" outgoing="_KJorDoV5EemzzojpIDPlJA">
          <argument xmi:id="_KJorDIV5EemzzojpIDPlJA" name="s"/>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_KCI74IV5EemzzojpIDPlJA" name="UnificationProblem" visibility="public" method="_KJfhEIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCI74YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCI74oV5EemzzojpIDPlJA" key="documentation" value=" Constructor for a UnificationProblem.&#xD;&#xA; @param left lhs of the equation.&#xD;&#xA; @param right rhs of the equation.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCI744V5EemzzojpIDPlJA" name="left" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KCI75IV5EemzzojpIDPlJA" name="right" type="_J6hQ8YV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KCMmQIV5EemzzojpIDPlJA" name="addOpenCase" visibility="public">
        <eAnnotations xmi:id="_KCMmQYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCMmQoV5EemzzojpIDPlJA" key="documentation" value=" Adds a case where the proximity needs to be determined.&#xD;&#xA; @param t The tuple of functions to add.&#xD;&#xA; @return boolean indicating if the case was added.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCMmQ4V5EemzzojpIDPlJA" name="t" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KCMmRIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KCObcIV5EemzzojpIDPlJA" name="getNextOpenCase" visibility="public" method="_KJgIJIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCObcYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCObcoV5EemzzojpIDPlJA" key="documentation" value=" @return a Tuple of Function whos proximity is to be determined, {@code null}&#xD;&#xA; if there are no more such.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCObc4V5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KCObdIV5EemzzojpIDPlJA" name="getNumberOfOpenCases" visibility="public" method="_KJgvMYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCObdYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCObdoV5EemzzojpIDPlJA" key="documentation" value=" Get the number of open cases.&#xD;&#xA; @return the number of open Cases.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCObd4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KCSF0IV5EemzzojpIDPlJA" name="CloseCase" visibility="public">
        <eAnnotations xmi:id="_KCSF0YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCSF0oV5EemzzojpIDPlJA" key="documentation" value=" Close an open Case.&#xD;&#xA; @param t the tuple to remove from the list. Note: (a,b) will also be removed, if the&#xD;&#xA; method is called with (b,a).&#xD;&#xA; @param p the value to set. Must be in [0,1].&#xD;&#xA; @return boolean indicating if the case could have been closed.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCSF04V5EemzzojpIDPlJA" name="t" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KCSF1IV5EemzzojpIDPlJA" name="p">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KCSF1YV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KCT7AIV5EemzzojpIDPlJA" name="getRight" visibility="public" method="_KJgvNoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCT7AYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCT7AoV5EemzzojpIDPlJA" key="documentation" value=" @return the right Element.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCT7A4V5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KCYMcIV5EemzzojpIDPlJA" name="setRight" visibility="public" method="_KJgvO4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCYMcYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCYMcoV5EemzzojpIDPlJA" key="documentation" value=" @param right Element to set to the rhs.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCYMc4V5EemzzojpIDPlJA" name="right" type="_J6hQ8YV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KCaBoIV5EemzzojpIDPlJA" name="getLeft" visibility="public" method="_KJhWQ4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCaBoYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCaBooV5EemzzojpIDPlJA" key="documentation" value=" @return the left Element.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCaBo4V5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KCdsAIV5EemzzojpIDPlJA" name="setLeft" visibility="public" method="_KJhWSIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCdsAYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCdsAoV5EemzzojpIDPlJA" key="documentation" value=" @param left Element to set to the lhs.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCdsA4V5EemzzojpIDPlJA" name="left" type="_J6hQ8YV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KCeTEIV5EemzzojpIDPlJA" name="getNumberOfFunctions" visibility="public" method="_KJh9UYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCeTEYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCeTEoV5EemzzojpIDPlJA" key="documentation" value=" @return the number of functions symbols (and constants).&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCeTE4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KCgIQIV5EemzzojpIDPlJA" name="getSortedListOfFunctions" visibility="public" method="_KJh9VoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCgIQYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCgIQoV5EemzzojpIDPlJA" key="documentation" value=" @return a list of functions appearing in the unification problem. Note: Constants&#xD;&#xA; are treated as 0-ary functions.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCgIQ4V5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KCjyoIV5EemzzojpIDPlJA" name="setSortedListOfFunctions" visibility="public">
        <eAnnotations xmi:id="_KCjyoYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCjyooV5EemzzojpIDPlJA" key="documentation" value=" Sets the list of functions.&#xD;&#xA; @param sortedListOfFunctions the list of functions of this unification problem&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCjyo4V5EemzzojpIDPlJA" name="sortedListOfFunctions" type="_J97KQYV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KClAwIV5EemzzojpIDPlJA" name="getProximityRelations" visibility="public" method="_KJikYIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KClAwYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KClAwoV5EemzzojpIDPlJA" key="documentation" value=" @return the proximity relations, represented as a matrix.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KClAw4V5EemzzojpIDPlJA" type="_J6jtMIV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KCpSMIV5EemzzojpIDPlJA" name="setProximityRelations" visibility="public" method="_KJikZYV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCpSMYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCpSMoV5EemzzojpIDPlJA" key="documentation" value=" @param proximityRelations the proximity relations to set, represented as a matrix.&#xD;&#xA; Note: If the matrix is not a proximity relations Matrix (i.e. all values are in&#xD;&#xA; [0,1], and all values on the main diagonal are 1) the matrix will be set to the&#xD;&#xA; corresponding unity matrix. Also, function symbols with different arity have to be&#xD;&#xA; set to have proximity 0.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCpSM4V5EemzzojpIDPlJA" name="proximityRelations" type="_J6jtMIV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KCrHYIV5EemzzojpIDPlJA" name="toString" visibility="public" method="_KJikbIV5EemzzojpIDPlJA">
        <ownedParameter xmi:id="_KCrHYYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KCs8kIV5EemzzojpIDPlJA" name="solveNext" visibility="public" method="_KJjLf4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCs8kYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCs8koV5EemzzojpIDPlJA" key="documentation" value=" Solves the next algorithm. &#xD;&#xA; @return True, if it was successful and False otherwise.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCs8k4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KCtjoIV5EemzzojpIDPlJA" name="resultString" visibility="public" method="_KJlAo4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCtjoYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCtjooV5EemzzojpIDPlJA" key="documentation" value=" Generates the output depending on the status. &#xD;&#xA; @return Returns the output string.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCtjo4V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KCuxwIV5EemzzojpIDPlJA" name="getP" visibility="public" method="_KJnc54V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCuxwYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCuxwoV5EemzzojpIDPlJA" key="documentation" value=" Return the set P.&#xD;&#xA; @return the set P.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCuxw4V5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KCzDMIV5EemzzojpIDPlJA" name="setP" visibility="public" method="_KJnc7IV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KCzDMYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KCzDMoV5EemzzojpIDPlJA" key="documentation" value=" Set the set P.&#xD;&#xA; @param p the set P to set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KCzDM4V5EemzzojpIDPlJA" name="p" type="_J6jtM4V5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KC04YIV5EemzzojpIDPlJA" name="getC" visibility="public" method="_KJoD9oV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KC04YYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KC04YoV5EemzzojpIDPlJA" key="documentation" value=" Return the set C.&#xD;&#xA; @return the set C.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KC04Y4V5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KC6X8IV5EemzzojpIDPlJA" name="setC" visibility="public" method="_KJoD-4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KC6X8YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KC6X8oV5EemzzojpIDPlJA" key="documentation" value=" Set the set C.&#xD;&#xA; @param c the set C to set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KC6X84V5EemzzojpIDPlJA" name="c" type="_J6jtM4V5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KC8NIIV5EemzzojpIDPlJA" name="getSigma" visibility="public" method="_KJorAoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KC8NIYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KC8NIoV5EemzzojpIDPlJA" key="documentation" value=" Return the set Sigma.&#xD;&#xA; @return the set Sigma.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KC8NI4V5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KDBssIV5EemzzojpIDPlJA" name="setSigma" visibility="public" method="_KJorB4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KDBssYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDBssoV5EemzzojpIDPlJA" key="documentation" value=" Set the set Sigma.&#xD;&#xA; @param s the set Sigma to set.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KDBss4V5EemzzojpIDPlJA" name="s" type="_J6jtM4V5EemzzojpIDPlJA"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6liYIV5EemzzojpIDPlJA" name="Problem" visibility="public">
      <eAnnotations xmi:id="_J6liYYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6liYoV5EemzzojpIDPlJA" key="documentation" value="&#xD;&#xA; The class Problem handles the unification problem sets.&#xD;&#xA; p - contains unification problem to be solved&#xD;&#xA; c - set of neighborhood constraint&#xD;&#xA; sigma - set of pre unifiers&#xD;&#xA; psi - set of name-class mapping&#xD;&#xA; branch - contains branch of the problem when psi splits&#xD;&#xA; @author  Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA; &#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_KDDh4IV5EemzzojpIDPlJA" importedElement="_J97KQYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDDh4YV5EemzzojpIDPlJA" importedElement="_J_DysIV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDDh4oV5EemzzojpIDPlJA" importedElement="_J_DLo4V5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDDh44V5EemzzojpIDPlJA" importedElement="_J6hQ8YV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDDh5IV5EemzzojpIDPlJA" importedElement="_J6jtM4V5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDDh5YV5EemzzojpIDPlJA" importedElement="_J6jGI4V5EemzzojpIDPlJA" visibility="private"/>
      <ownedAttribute xmi:id="_KDFXEIV5EemzzojpIDPlJA" name="p" visibility="private" type="_J6jtM4V5EemzzojpIDPlJA" association="_KFtNUoV5EemzzojpIDPlJA"/>
      <ownedAttribute xmi:id="_KDHMQIV5EemzzojpIDPlJA" name="c" visibility="private" type="_J6jtM4V5EemzzojpIDPlJA" association="_KFtNVIV5EemzzojpIDPlJA"/>
      <ownedAttribute xmi:id="_KDJBcIV5EemzzojpIDPlJA" name="sigma" visibility="private" type="_J6jtM4V5EemzzojpIDPlJA" association="_KFtNVoV5EemzzojpIDPlJA"/>
      <ownedAttribute xmi:id="_KDK2oIV5EemzzojpIDPlJA" name="psi" visibility="public" type="_J_DLo4V5EemzzojpIDPlJA"/>
      <ownedAttribute xmi:id="_KDMEwIV5EemzzojpIDPlJA" name="branch" visibility="public" type="_J6liYIV5EemzzojpIDPlJA" association="_KFt0UIV5EemzzojpIDPlJA">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_KDMr0IV5EemzzojpIDPlJA" name="" type="_J6liYIV5EemzzojpIDPlJA" value="null"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJqgMIV5EemzzojpIDPlJA" name="Problem" specification="_KDMr0YV5EemzzojpIDPlJA" node="_KJrHQIV5EemzzojpIDPlJA _KJrHQYV5EemzzojpIDPlJA _KJrHQoV5EemzzojpIDPlJA _KJrHRIV5EemzzojpIDPlJA _KJrHRoV5EemzzojpIDPlJA _KJrHSIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJrHQ4V5EemzzojpIDPlJA" name="InitNode_p=new PCSSet(&quot;~?&quot;);" target="_KJrHQoV5EemzzojpIDPlJA" source="_KJrHQIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJrHRYV5EemzzojpIDPlJA" name="p=new PCSSet(&quot;~?&quot;);_c=new PCSSet(&quot;=?&quot;);" target="_KJrHRIV5EemzzojpIDPlJA" source="_KJrHQoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJrHR4V5EemzzojpIDPlJA" name="c=new PCSSet(&quot;=?&quot;);_sigma=new PCSSet(&quot;->&quot;);" target="_KJrHRoV5EemzzojpIDPlJA" source="_KJrHRIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJruUIV5EemzzojpIDPlJA" name="sigma=new PCSSet(&quot;->&quot;);_psi=new HashMap&lt;String,ArrayList&lt;Ele" target="_KJrHSIV5EemzzojpIDPlJA" source="_KJrHRoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJruUYV5EemzzojpIDPlJA" name="psi=new HashMap&lt;String,ArrayLi_FinalNode" target="_KJrHQYV5EemzzojpIDPlJA" source="_KJrHSIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJrHQIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJrHQ4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJrHQYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJruUYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJrHQoV5EemzzojpIDPlJA" name="p=new PCSSet(&quot;~?&quot;);" incoming="_KJrHQ4V5EemzzojpIDPlJA" outgoing="_KJrHRYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>p=new PCSSet(&quot;~?&quot;);
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJrHRIV5EemzzojpIDPlJA" name="c=new PCSSet(&quot;=?&quot;);" incoming="_KJrHRYV5EemzzojpIDPlJA" outgoing="_KJrHR4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>c=new PCSSet(&quot;=?&quot;);
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJrHRoV5EemzzojpIDPlJA" name="sigma=new PCSSet(&quot;->&quot;);" incoming="_KJrHR4V5EemzzojpIDPlJA" outgoing="_KJruUIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>sigma=new PCSSet(&quot;->&quot;);
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJrHSIV5EemzzojpIDPlJA" name="psi=new HashMap&lt;String,ArrayList&lt;Element>>();" incoming="_KJruUIV5EemzzojpIDPlJA" outgoing="_KJruUYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>psi=new HashMap&lt;String,ArrayList&lt;Element>>();
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJruUoV5EemzzojpIDPlJA" name="getP" specification="_KDRkUIV5EemzzojpIDPlJA" node="_KJruU4V5EemzzojpIDPlJA _KJruVIV5EemzzojpIDPlJA _KJruVYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJruVoV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJruVYV5EemzzojpIDPlJA" source="_KJruVIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJruU4V5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KDRkU4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJruVIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJruVoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJruVYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJruVoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJruV4V5EemzzojpIDPlJA" name="setP" specification="_KDWc0IV5EemzzojpIDPlJA" node="_KJruWIV5EemzzojpIDPlJA _KJruWYV5EemzzojpIDPlJA _KJruWoV5EemzzojpIDPlJA _KJruW4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJruXIV5EemzzojpIDPlJA" name="InitNode_this.p=p;" target="_KJruW4V5EemzzojpIDPlJA" source="_KJruWYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJruXYV5EemzzojpIDPlJA" name="this.p=p;_FinalNode" target="_KJruWoV5EemzzojpIDPlJA" source="_KJruW4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJruWIV5EemzzojpIDPlJA" name="p" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KDWc04V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJruWYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJruXIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJruWoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJruXYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJruW4V5EemzzojpIDPlJA" name="this.p=p;" incoming="_KJruXIV5EemzzojpIDPlJA" outgoing="_KJruXYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.p=p;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJruXoV5EemzzojpIDPlJA" name="getC" specification="_KDYSAIV5EemzzojpIDPlJA" node="_KJsVYIV5EemzzojpIDPlJA _KJsVYYV5EemzzojpIDPlJA _KJsVYoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJsVY4V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJsVYoV5EemzzojpIDPlJA" source="_KJsVYYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJsVYIV5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KDYSA4V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJsVYYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJsVY4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJsVYoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJsVY4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJsVZIV5EemzzojpIDPlJA" name="setC" specification="_KDcjcIV5EemzzojpIDPlJA" node="_KJsVZYV5EemzzojpIDPlJA _KJsVZoV5EemzzojpIDPlJA _KJsVZ4V5EemzzojpIDPlJA _KJsVaIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJsVaYV5EemzzojpIDPlJA" name="InitNode_this.c=c;" target="_KJsVaIV5EemzzojpIDPlJA" source="_KJsVZoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJsVaoV5EemzzojpIDPlJA" name="this.c=c;_FinalNode" target="_KJsVZ4V5EemzzojpIDPlJA" source="_KJsVaIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJsVZYV5EemzzojpIDPlJA" name="c" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KDcjc4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJsVZoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJsVaYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJsVZ4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KJsVaoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJsVaIV5EemzzojpIDPlJA" name="this.c=c;" incoming="_KJsVaYV5EemzzojpIDPlJA" outgoing="_KJsVaoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.c=c;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJsVa4V5EemzzojpIDPlJA" name="getSigma" specification="_KDeYoIV5EemzzojpIDPlJA" node="_KJsVbIV5EemzzojpIDPlJA _KJsVbYV5EemzzojpIDPlJA _KJsVboV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJsVb4V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KJsVboV5EemzzojpIDPlJA" source="_KJsVbYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJsVbIV5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KDe_soV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJsVbYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJsVb4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJsVboV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJsVb4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJsVcIV5EemzzojpIDPlJA" name="setSigma" specification="_KDkfQIV5EemzzojpIDPlJA" node="_KJsVcYV5EemzzojpIDPlJA _KJs8cIV5EemzzojpIDPlJA _KJs8cYV5EemzzojpIDPlJA _KJs8coV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJs8c4V5EemzzojpIDPlJA" name="InitNode_this.sigma=sigma;" target="_KJs8coV5EemzzojpIDPlJA" source="_KJs8cIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJs8dIV5EemzzojpIDPlJA" name="this.sigma=sigma;_FinalNode" target="_KJs8cYV5EemzzojpIDPlJA" source="_KJs8coV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJsVcYV5EemzzojpIDPlJA" name="sigma" type="_J6jtM4V5EemzzojpIDPlJA" parameter="_KDkfQ4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KJs8cIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJs8c4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJs8cYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJs8dIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJs8coV5EemzzojpIDPlJA" name="this.sigma=sigma;" incoming="_KJs8c4V5EemzzojpIDPlJA" outgoing="_KJs8dIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>this.sigma=sigma;
</body>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_KDMr0YV5EemzzojpIDPlJA" name="Problem" visibility="public" method="_KJqgMIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KDMr0oV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDMr04V5EemzzojpIDPlJA" key="documentation" value=" Default Constructor.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KDPvIIV5EemzzojpIDPlJA" name="Problem" visibility="public">
        <eAnnotations xmi:id="_KDPvIYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDPvIoV5EemzzojpIDPlJA" key="documentation" value=" Constructor with Input.&#xD;&#xA; @param first The first Tuple to add to P.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KDPvI4V5EemzzojpIDPlJA" name="first" type="_J6jGI4V5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KDRkUIV5EemzzojpIDPlJA" name="getP" visibility="public" method="_KJruUoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KDRkUYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDRkUoV5EemzzojpIDPlJA" key="documentation" value=" @return the p&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KDRkU4V5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KDWc0IV5EemzzojpIDPlJA" name="setP" visibility="public" method="_KJruV4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KDWc0YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDWc0oV5EemzzojpIDPlJA" key="documentation" value=" @param p the p to set&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KDWc04V5EemzzojpIDPlJA" name="p" type="_J6jtM4V5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KDYSAIV5EemzzojpIDPlJA" name="getC" visibility="public" method="_KJruXoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KDYSAYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDYSAoV5EemzzojpIDPlJA" key="documentation" value=" @return the c&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KDYSA4V5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KDcjcIV5EemzzojpIDPlJA" name="setC" visibility="public" method="_KJsVZIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KDcjcYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDcjcoV5EemzzojpIDPlJA" key="documentation" value=" @param c the c to set&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KDcjc4V5EemzzojpIDPlJA" name="c" type="_J6jtM4V5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KDeYoIV5EemzzojpIDPlJA" name="getSigma" visibility="public" method="_KJsVa4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KDe_sIV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDe_sYV5EemzzojpIDPlJA" key="documentation" value=" @return the sigma&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KDe_soV5EemzzojpIDPlJA" type="_J6jtM4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KDkfQIV5EemzzojpIDPlJA" name="setSigma" visibility="public" method="_KJsVcIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KDkfQYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDkfQoV5EemzzojpIDPlJA" key="documentation" value=" @param sigma the sigma to set&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KDkfQ4V5EemzzojpIDPlJA" name="sigma" type="_J6jtM4V5EemzzojpIDPlJA"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6mJcIV5EemzzojpIDPlJA" name="Algorithms" visibility="public">
      <eAnnotations xmi:id="_J6mJcYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6mJcoV5EemzzojpIDPlJA" key="documentation" value=" This class is stores the needed Algorithms as static functions.&#xD;&#xA; @author Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_KDmUcIV5EemzzojpIDPlJA" importedElement="_J97KQYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDm7gIV5EemzzojpIDPlJA" importedElement="_J_DLo4V5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDm7gYV5EemzzojpIDPlJA" importedElement="_J6hQ8YV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDm7goV5EemzzojpIDPlJA" importedElement="_J6ifEIV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDm7g4V5EemzzojpIDPlJA" importedElement="_J6h4A4V5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDm7hIV5EemzzojpIDPlJA" importedElement="_J6jtMIV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDm7hYV5EemzzojpIDPlJA" importedElement="_J6jtM4V5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KDm7hoV5EemzzojpIDPlJA" importedElement="_J6jGI4V5EemzzojpIDPlJA" visibility="private"/>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJ04QIV5EemzzojpIDPlJA" name="preUnification" specification="_KDrM8IV5EemzzojpIDPlJA" node="_KJ04QYV5EemzzojpIDPlJA _KJ04QoV5EemzzojpIDPlJA _KJ04Q4V5EemzzojpIDPlJA _KJ04RIV5EemzzojpIDPlJA _KJ04RYV5EemzzojpIDPlJA _KJ04SIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ04RoV5EemzzojpIDPlJA" name="InitNode_StringBuffer dummy=new StringBuffer();" target="_KJ04RYV5EemzzojpIDPlJA" source="_KJ04Q4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ04SYV5EemzzojpIDPlJA" name="StringBuffer dummy=new StringB_;" target="_KJ04SIV5EemzzojpIDPlJA" source="_KJ04RYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ04SoV5EemzzojpIDPlJA" name=";_FinalNode" target="_KJ04RIV5EemzzojpIDPlJA" source="_KJ04SIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ04R4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ04QYV5EemzzojpIDPlJA" name="unif" type="_J6k7UIV5EemzzojpIDPlJA" parameter="_KDrM84V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ04QoV5EemzzojpIDPlJA" parameter="_KDrM9IV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJ04Q4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KJ04RoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJ04RIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJ04SoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ04RYV5EemzzojpIDPlJA" name="StringBuffer dummy=new StringBuffer();" incoming="_KJ04RoV5EemzzojpIDPlJA" outgoing="_KJ04SYV5EemzzojpIDPlJA" variable="_KJ04R4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJ04SIV5EemzzojpIDPlJA" name=";" incoming="_KJ04SYV5EemzzojpIDPlJA" outgoing="_KJ04SoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJ1fUIV5EemzzojpIDPlJA" name="preUnification" specification="_KDyhsIV5EemzzojpIDPlJA" node="_KJ1fUYV5EemzzojpIDPlJA _KJ1fUoV5EemzzojpIDPlJA _KJ1fU4V5EemzzojpIDPlJA _KJ1fVIV5EemzzojpIDPlJA _KJ1fVYV5EemzzojpIDPlJA _KJ1fVoV5EemzzojpIDPlJA _KJ1fWYV5EemzzojpIDPlJA _KJ1fWoV5EemzzojpIDPlJA _KJ1fXYV5EemzzojpIDPlJA _KJ2GY4V5EemzzojpIDPlJA _KJ2GZIV5EemzzojpIDPlJA _KJ2GaYV5EemzzojpIDPlJA _KJ2tcoV5EemzzojpIDPlJA _KJ2tdYV5EemzzojpIDPlJA _KJ2teIV5EemzzojpIDPlJA _KJ2teYV5EemzzojpIDPlJA _KJ3UgIV5EemzzojpIDPlJA _KJ3Ug4V5EemzzojpIDPlJA _KJ3UhoV5EemzzojpIDPlJA _KJ3UiYV5EemzzojpIDPlJA _KJ37kYV5EemzzojpIDPlJA _KJ37lIV5EemzzojpIDPlJA _KJ37lYV5EemzzojpIDPlJA _KJ37mIV5EemzzojpIDPlJA _KJ37nIV5EemzzojpIDPlJA _KJ37noV5EemzzojpIDPlJA _KJ4iooV5EemzzojpIDPlJA _KJ4io4V5EemzzojpIDPlJA _KJ4iqYV5EemzzojpIDPlJA _KJ4irIV5EemzzojpIDPlJA _KJ4ir4V5EemzzojpIDPlJA _KJ5JsYV5EemzzojpIDPlJA _KJ5JtYV5EemzzojpIDPlJA _KJ5JuIV5EemzzojpIDPlJA _KJ5Ju4V5EemzzojpIDPlJA _KJ5JvoV5EemzzojpIDPlJA _KJ5wwoV5EemzzojpIDPlJA _KJ5ww4V5EemzzojpIDPlJA _KJ5wyIV5EemzzojpIDPlJA _KJ5wy4V5EemzzojpIDPlJA _KJ5wzoV5EemzzojpIDPlJA _KJ6X0oV5EemzzojpIDPlJA _KJ6X04V5EemzzojpIDPlJA _KJ6X2IV5EemzzojpIDPlJA _KJ6X3IV5EemzzojpIDPlJA _KJ6-4IV5EemzzojpIDPlJA _KJ6-44V5EemzzojpIDPlJA _KJ6-5oV5EemzzojpIDPlJA _KJ6-6oV5EemzzojpIDPlJA _KJ6-7YV5EemzzojpIDPlJA _KJ7l8oV5EemzzojpIDPlJA _KJ7l84V5EemzzojpIDPlJA _KJ7l-IV5EemzzojpIDPlJA _KJ7l-4V5EemzzojpIDPlJA _KJ7l_oV5EemzzojpIDPlJA _KJ8NAoV5EemzzojpIDPlJA _KJ8NBoV5EemzzojpIDPlJA _KJ8NCYV5EemzzojpIDPlJA _KJ8NCoV5EemzzojpIDPlJA _KJ8ND4V5EemzzojpIDPlJA _KJ8NEIV5EemzzojpIDPlJA _KJ80FIV5EemzzojpIDPlJA _KJ80GIV5EemzzojpIDPlJA _KJ9bIIV5EemzzojpIDPlJA _KJ9bI4V5EemzzojpIDPlJA _KJ9bJoV5EemzzojpIDPlJA _KJ9bKoV5EemzzojpIDPlJA _KJ9bLYV5EemzzojpIDPlJA _KJ-CM4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ1fV4V5EemzzojpIDPlJA" name="InitNode_PCSSet problem=unif.getP();" target="_KJ1fVoV5EemzzojpIDPlJA" source="_KJ1fVIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ1fW4V5EemzzojpIDPlJA" name="While_0_merge_cond" target="_KJ1fWoV5EemzzojpIDPlJA" source="_KJ1fWYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ1fXIV5EemzzojpIDPlJA" name="PCSSet problem=unif.getP();_While_0_merge" target="_KJ1fWYV5EemzzojpIDPlJA" source="_KJ1fVoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ2GYIV5EemzzojpIDPlJA" name="While_0_cond_Tuple&lt;Element> t=problem.get(0);" target="_KJ1fXYV5EemzzojpIDPlJA" source="_KJ1fWoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ2GYYV5EemzzojpIDPlJA" value="(problem.size()) != 0"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ2GZYV5EemzzojpIDPlJA" name="Tuple&lt;Element> t=problem.get(0_If_0_cond" target="_KJ2GY4V5EemzzojpIDPlJA" source="_KJ1fXYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ2GZoV5EemzzojpIDPlJA" name="If_0_else" target="_KJ2GZIV5EemzzojpIDPlJA" source="_KJ2GY4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ2GaIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ2tcIV5EemzzojpIDPlJA" name="If_0_cond_Variable f=(Variable)t.getFirst();" target="_KJ2GaYV5EemzzojpIDPlJA" source="_KJ2GY4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ2GZ4V5EemzzojpIDPlJA" value="t.getFirst() instanceof Variable &amp;&amp; t.getSecond() instanceof Variable"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ2tc4V5EemzzojpIDPlJA" name="Variable f=(Variable)t.getFirs_Variable s=(Variable)t.getSec" target="_KJ2tcoV5EemzzojpIDPlJA" source="_KJ2GaYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ2tdoV5EemzzojpIDPlJA" name="Variable s=(Variable)t.getSeco_Tuple&lt;Variable> var=new Tuple" target="_KJ2tdYV5EemzzojpIDPlJA" source="_KJ2tcoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ2teoV5EemzzojpIDPlJA" name="Tuple&lt;Variable> var=new Tuple&lt;_If_1_cond" target="_KJ2teIV5EemzzojpIDPlJA" source="_KJ2tdYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ2te4V5EemzzojpIDPlJA" name="If_1_else" target="_KJ2teYV5EemzzojpIDPlJA" source="_KJ2teIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ2tfYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ3UgoV5EemzzojpIDPlJA" name="If_1_cond_steps.append(&quot;(Tri), &quot;);" target="_KJ3UgIV5EemzzojpIDPlJA" source="_KJ2teIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ2tfIV5EemzzojpIDPlJA" value="trivial(var)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ3UhYV5EemzzojpIDPlJA" name="steps.append(&quot;(Tri), &quot;);_problem.remove(0);" target="_KJ3Ug4V5EemzzojpIDPlJA" source="_KJ3UgIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ3Uh4V5EemzzojpIDPlJA" name="problem.remove(0);_continue;" target="_KJ3UhoV5EemzzojpIDPlJA" source="_KJ3Ug4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ3UiIV5EemzzojpIDPlJA" name="continue;_If_1_merge" target="_KJ2teYV5EemzzojpIDPlJA" source="_KJ3UhoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ3UioV5EemzzojpIDPlJA" name="If_1_merge_boolean onlyVars=true;" target="_KJ3UiYV5EemzzojpIDPlJA" source="_KJ2teYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ37koV5EemzzojpIDPlJA" name="boolean onlyVars=true;_int i=1;" target="_KJ37kYV5EemzzojpIDPlJA" source="_KJ3UiYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ37loV5EemzzojpIDPlJA" name="While_1_merge_cond" target="_KJ37lYV5EemzzojpIDPlJA" source="_KJ37lIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ37l4V5EemzzojpIDPlJA" name="int i=1;_While_1_merge" target="_KJ37lIV5EemzzojpIDPlJA" source="_KJ37kYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ37mYV5EemzzojpIDPlJA" name="While_1_cond_Tuple&lt;Element> current=problem.get(i);" target="_KJ37mIV5EemzzojpIDPlJA" source="_KJ37lYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ37moV5EemzzojpIDPlJA" value="i &lt; problem.size() &amp;&amp; onlyVars"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ37nYV5EemzzojpIDPlJA" name="Tuple&lt;Element> current=problem_onlyVars=(current.getFirst() " target="_KJ37nIV5EemzzojpIDPlJA" source="_KJ37mIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ4ioIV5EemzzojpIDPlJA" name="onlyVars=(current.getFirst() i_i++;" target="_KJ37noV5EemzzojpIDPlJA" source="_KJ37nIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ4ioYV5EemzzojpIDPlJA" name="i++;_While_1_merge" target="_KJ37lIV5EemzzojpIDPlJA" source="_KJ37noV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ4ipIV5EemzzojpIDPlJA" name="While_1_cond_If_2_cond" target="_KJ4iooV5EemzzojpIDPlJA" source="_KJ37lYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ4ipYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ4ipoV5EemzzojpIDPlJA" name="If_2_else" target="_KJ4io4V5EemzzojpIDPlJA" source="_KJ4iooV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ4iqIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ4iq4V5EemzzojpIDPlJA" name="If_2_cond_unif.prob.getSigma().add(problem.get(0));" target="_KJ4iqYV5EemzzojpIDPlJA" source="_KJ4iooV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ4ip4V5EemzzojpIDPlJA" value="onlyVars"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ4iroV5EemzzojpIDPlJA" name="unif.prob.getSigma().add(probl_problem.remove(0);" target="_KJ4irIV5EemzzojpIDPlJA" source="_KJ4iqYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5JsIV5EemzzojpIDPlJA" name="problem.remove(0);_steps.append(&quot;(VO), &quot;);" target="_KJ4ir4V5EemzzojpIDPlJA" source="_KJ4irIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5JtIV5EemzzojpIDPlJA" name="steps.append(&quot;(VO), &quot;);_varsOnly(var,problem);" target="_KJ5JsYV5EemzzojpIDPlJA" source="_KJ4ir4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5JtoV5EemzzojpIDPlJA" name="varsOnly(var,problem);_continue;" target="_KJ5JtYV5EemzzojpIDPlJA" source="_KJ5JsYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5Jt4V5EemzzojpIDPlJA" name="continue;_If_2_merge" target="_KJ4io4V5EemzzojpIDPlJA" source="_KJ5JtYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5JuoV5EemzzojpIDPlJA" name="If_2_merge_problem.remove(0);" target="_KJ5JuIV5EemzzojpIDPlJA" source="_KJ4io4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5JvYV5EemzzojpIDPlJA" name="problem.remove(0);_problem.add(t);" target="_KJ5Ju4V5EemzzojpIDPlJA" source="_KJ5JuIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5wwIV5EemzzojpIDPlJA" name="problem.add(t);_continue;" target="_KJ5JvoV5EemzzojpIDPlJA" source="_KJ5Ju4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5wwYV5EemzzojpIDPlJA" name="continue;_If_0_merge" target="_KJ2GZIV5EemzzojpIDPlJA" source="_KJ5JvoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5wxIV5EemzzojpIDPlJA" name="If_0_merge_If_3_cond" target="_KJ5wwoV5EemzzojpIDPlJA" source="_KJ2GZIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5wxYV5EemzzojpIDPlJA" name="If_3_else" target="_KJ5ww4V5EemzzojpIDPlJA" source="_KJ5wwoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ5wx4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5wyYV5EemzzojpIDPlJA" name="If_3_cond_Function f=(Function)t.getFirst();" target="_KJ5wyIV5EemzzojpIDPlJA" source="_KJ5wwoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ5wxoV5EemzzojpIDPlJA" value="t.getFirst() instanceof Function &amp;&amp; t.getSecond() instanceof Function"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ5wzIV5EemzzojpIDPlJA" name="Function f=(Function)t.getFirs_Function s=(Function)t.getSec" target="_KJ5wy4V5EemzzojpIDPlJA" source="_KJ5wyIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ6X0IV5EemzzojpIDPlJA" name="Function s=(Function)t.getSeco_Tuple&lt;Function> fun=new Tuple" target="_KJ5wzoV5EemzzojpIDPlJA" source="_KJ5wy4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ6X1IV5EemzzojpIDPlJA" name="Tuple&lt;Function> fun=new Tuple&lt;_If_4_cond" target="_KJ6X0oV5EemzzojpIDPlJA" source="_KJ5wzoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ6X1YV5EemzzojpIDPlJA" name="If_4_else" target="_KJ6X04V5EemzzojpIDPlJA" source="_KJ6X0oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ6X14V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ6X2oV5EemzzojpIDPlJA" name="If_4_cond_steps.append(&quot;(Cla), &quot;);" target="_KJ6X2IV5EemzzojpIDPlJA" source="_KJ6X0oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ6X1oV5EemzzojpIDPlJA" value="clash(fun)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ6X24V5EemzzojpIDPlJA" name="steps.append(&quot;(Cla), &quot;);_FinalNode" target="_KJ1fVYV5EemzzojpIDPlJA" source="_KJ6X2IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ6X3oV5EemzzojpIDPlJA" name="If_4_merge_steps.append(&quot;(Dec), &quot;);" target="_KJ6X3IV5EemzzojpIDPlJA" source="_KJ6X04V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ6-4YV5EemzzojpIDPlJA" name="steps.append(&quot;(Dec), &quot;);_Tuple&lt;ArrayList&lt;Tuple&lt;Element>>> pr" target="_KJ6-4IV5EemzzojpIDPlJA" source="_KJ6X3IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ6-5YV5EemzzojpIDPlJA" name="Tuple&lt;ArrayList&lt;Tuple&lt;Element>_problem.remove(0);" target="_KJ6-44V5EemzzojpIDPlJA" source="_KJ6-4IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ6-6YV5EemzzojpIDPlJA" name="problem.remove(0);_problem.addAll(0,probAndCons.getFirst());" target="_KJ6-5oV5EemzzojpIDPlJA" source="_KJ6-44V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ6-7IV5EemzzojpIDPlJA" name="problem.addAll(0,probAndCons.g_unif.prob.getC().addAll(probA" target="_KJ6-6oV5EemzzojpIDPlJA" source="_KJ6-5oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ7l8IV5EemzzojpIDPlJA" name="unif.prob.getC().addAll(probAn_continue;" target="_KJ6-7YV5EemzzojpIDPlJA" source="_KJ6-6oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ7l8YV5EemzzojpIDPlJA" name="continue;_If_3_merge" target="_KJ5ww4V5EemzzojpIDPlJA" source="_KJ6-7YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ7l9IV5EemzzojpIDPlJA" name="If_3_merge_If_5_cond" target="_KJ7l8oV5EemzzojpIDPlJA" source="_KJ5ww4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ7l9YV5EemzzojpIDPlJA" name="If_5_else" target="_KJ7l84V5EemzzojpIDPlJA" source="_KJ7l8oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ7l94V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ7l-oV5EemzzojpIDPlJA" name="If_5_cond_steps.append(&quot;(Ori), &quot;);" target="_KJ7l-IV5EemzzojpIDPlJA" source="_KJ7l8oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ7l9oV5EemzzojpIDPlJA" value="!(t.getFirst() instanceof Variable) &amp;&amp; t.getSecond() instanceof Variable"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ7l_IV5EemzzojpIDPlJA" name="steps.append(&quot;(Ori), &quot;);_Tuple&lt;Element> oriented=orient(t);" target="_KJ7l-4V5EemzzojpIDPlJA" source="_KJ7l-IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ8NAYV5EemzzojpIDPlJA" name="Tuple&lt;Element> oriented=orient_problem.remove(0);" target="_KJ7l_oV5EemzzojpIDPlJA" source="_KJ7l-4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ8NBYV5EemzzojpIDPlJA" name="problem.remove(0);_problem.add(0,oriented);" target="_KJ8NAoV5EemzzojpIDPlJA" source="_KJ7l_oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ8NB4V5EemzzojpIDPlJA" name="problem.add(0,oriented);_continue;" target="_KJ8NBoV5EemzzojpIDPlJA" source="_KJ8NAoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ8NCIV5EemzzojpIDPlJA" name="continue;_If_5_merge" target="_KJ7l84V5EemzzojpIDPlJA" source="_KJ8NBoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ8NC4V5EemzzojpIDPlJA" name="If_5_merge_If_6_cond" target="_KJ8NCYV5EemzzojpIDPlJA" source="_KJ7l84V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ8NDIV5EemzzojpIDPlJA" name="If_6_else" target="_KJ8NCoV5EemzzojpIDPlJA" source="_KJ8NCYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ8NDoV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ80EIV5EemzzojpIDPlJA" name="If_6_cond_If_7_cond" target="_KJ8ND4V5EemzzojpIDPlJA" source="_KJ8NCYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ8NDYV5EemzzojpIDPlJA" value="t.getFirst() instanceof Variable &amp;&amp; !(t.getSecond() instanceof Variable)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ80EYV5EemzzojpIDPlJA" name="If_7_else" target="_KJ8NEIV5EemzzojpIDPlJA" source="_KJ8ND4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ80E4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ80FoV5EemzzojpIDPlJA" name="If_7_cond_steps.append(&quot;(Occ), &quot;);" target="_KJ80FIV5EemzzojpIDPlJA" source="_KJ8ND4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ80EoV5EemzzojpIDPlJA" value="occurs(t)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ80F4V5EemzzojpIDPlJA" name="steps.append(&quot;(Occ), &quot;);_FinalNode" target="_KJ1fVYV5EemzzojpIDPlJA" source="_KJ80FIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ80GoV5EemzzojpIDPlJA" name="If_7_merge_problem.remove(0);" target="_KJ80GIV5EemzzojpIDPlJA" source="_KJ8NEIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ9bIoV5EemzzojpIDPlJA" name="problem.remove(0);_steps.append(&quot;(VE), &quot;);" target="_KJ9bIIV5EemzzojpIDPlJA" source="_KJ80GIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ9bJIV5EemzzojpIDPlJA" name="steps.append(&quot;(VE), &quot;);_Tuple&lt;Element> newTerm=varElim(t,pro" target="_KJ9bI4V5EemzzojpIDPlJA" source="_KJ9bIIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ9bKYV5EemzzojpIDPlJA" name="Tuple&lt;Element> newTerm=varElim_problem.add(0,newTerm);" target="_KJ9bJoV5EemzzojpIDPlJA" source="_KJ9bI4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ9bLIV5EemzzojpIDPlJA" name="problem.add(0,newTerm);_unif.prob.getSigma().add(new Tuple&lt;E" target="_KJ9bKoV5EemzzojpIDPlJA" source="_KJ9bJoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ-CMIV5EemzzojpIDPlJA" name="unif.prob.getSigma().add(new T_continue;" target="_KJ9bLYV5EemzzojpIDPlJA" source="_KJ9bKoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ-CMYV5EemzzojpIDPlJA" name="continue;_If_6_merge" target="_KJ8NCoV5EemzzojpIDPlJA" source="_KJ9bLYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ-CMoV5EemzzojpIDPlJA" name="If_6_merge_While_0_merge" target="_KJ1fWYV5EemzzojpIDPlJA" source="_KJ8NCoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ-CNIV5EemzzojpIDPlJA" name="While_0_cond_unif.getC().trim();" target="_KJ-CM4V5EemzzojpIDPlJA" source="_KJ1fWoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ-CNYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ-CNoV5EemzzojpIDPlJA" name="unif.getC().trim();_FinalNode" target="_KJ1fVYV5EemzzojpIDPlJA" source="_KJ-CM4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ1fWIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ2GYoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ2tcYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ2tdIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ2td4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ37kIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ37k4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ37m4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ5wyoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ5wzYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ6X0YV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ6-4oV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ7l_YV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ9bJYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ1fUYV5EemzzojpIDPlJA" name="unif" type="_J6k7UIV5EemzzojpIDPlJA" parameter="_KDyhs4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ1fUoV5EemzzojpIDPlJA" name="steps" type="_KDu3UIV5EemzzojpIDPlJA" parameter="_KDyhtIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ1fU4V5EemzzojpIDPlJA" parameter="_KDyhtYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJ1fVIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJ1fV4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJ1fVYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJ6X24V5EemzzojpIDPlJA _KJ80F4V5EemzzojpIDPlJA _KJ-CNoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ1fVoV5EemzzojpIDPlJA" name="PCSSet problem=unif.getP();" incoming="_KJ1fV4V5EemzzojpIDPlJA" outgoing="_KJ1fXIV5EemzzojpIDPlJA" variable="_KJ1fWIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ1fWYV5EemzzojpIDPlJA" name="While_0_merge" incoming="_KJ1fXIV5EemzzojpIDPlJA _KJ-CMoV5EemzzojpIDPlJA" outgoing="_KJ1fW4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ1fWoV5EemzzojpIDPlJA" name="While_0_cond" incoming="_KJ1fW4V5EemzzojpIDPlJA" outgoing="_KJ2GYIV5EemzzojpIDPlJA _KJ-CNIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ1fXYV5EemzzojpIDPlJA" name="Tuple&lt;Element> t=problem.get(0);" incoming="_KJ2GYIV5EemzzojpIDPlJA" outgoing="_KJ2GZYV5EemzzojpIDPlJA" variable="_KJ2GYoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ2GY4V5EemzzojpIDPlJA" name="If_0_cond" incoming="_KJ2GZYV5EemzzojpIDPlJA" outgoing="_KJ2GZoV5EemzzojpIDPlJA _KJ2tcIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ2GZIV5EemzzojpIDPlJA" name="If_0_merge" incoming="_KJ2GZoV5EemzzojpIDPlJA _KJ5wwYV5EemzzojpIDPlJA" outgoing="_KJ5wxIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ2GaYV5EemzzojpIDPlJA" name="Variable f=(Variable)t.getFirst();" incoming="_KJ2tcIV5EemzzojpIDPlJA" outgoing="_KJ2tc4V5EemzzojpIDPlJA" variable="_KJ2tcYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ2tcoV5EemzzojpIDPlJA" name="Variable s=(Variable)t.getSecond();" incoming="_KJ2tc4V5EemzzojpIDPlJA" outgoing="_KJ2tdoV5EemzzojpIDPlJA" variable="_KJ2tdIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ2tdYV5EemzzojpIDPlJA" name="Tuple&lt;Variable> var=new Tuple&lt;Variable>(f,s);" incoming="_KJ2tdoV5EemzzojpIDPlJA" outgoing="_KJ2teoV5EemzzojpIDPlJA" variable="_KJ2td4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ2teIV5EemzzojpIDPlJA" name="If_1_cond" incoming="_KJ2teoV5EemzzojpIDPlJA" outgoing="_KJ2te4V5EemzzojpIDPlJA _KJ3UgoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ2teYV5EemzzojpIDPlJA" name="If_1_merge" incoming="_KJ2te4V5EemzzojpIDPlJA _KJ3UiIV5EemzzojpIDPlJA" outgoing="_KJ3UioV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ3UgIV5EemzzojpIDPlJA" name="steps.append(&quot;(Tri), &quot;);" incoming="_KJ3UgoV5EemzzojpIDPlJA" outgoing="_KJ3UhYV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ3UgYV5EemzzojpIDPlJA" name="&quot;(Tri), &quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ3Ug4V5EemzzojpIDPlJA" name="problem.remove(0);" incoming="_KJ3UhYV5EemzzojpIDPlJA" outgoing="_KJ3Uh4V5EemzzojpIDPlJA">
          <argument xmi:id="_KJ3UhIV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJ3UhoV5EemzzojpIDPlJA" name="continue;" incoming="_KJ3Uh4V5EemzzojpIDPlJA" outgoing="_KJ3UiIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>continue;
</body>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ3UiYV5EemzzojpIDPlJA" name="boolean onlyVars=true;" incoming="_KJ3UioV5EemzzojpIDPlJA" outgoing="_KJ37koV5EemzzojpIDPlJA" variable="_KJ37kIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ37kYV5EemzzojpIDPlJA" name="int i=1;" incoming="_KJ37koV5EemzzojpIDPlJA" outgoing="_KJ37l4V5EemzzojpIDPlJA" variable="_KJ37k4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ37lIV5EemzzojpIDPlJA" name="While_1_merge" incoming="_KJ37l4V5EemzzojpIDPlJA _KJ4ioYV5EemzzojpIDPlJA" outgoing="_KJ37loV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ37lYV5EemzzojpIDPlJA" name="While_1_cond" incoming="_KJ37loV5EemzzojpIDPlJA" outgoing="_KJ37mYV5EemzzojpIDPlJA _KJ4ipIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ37mIV5EemzzojpIDPlJA" name="Tuple&lt;Element> current=problem.get(i);" incoming="_KJ37mYV5EemzzojpIDPlJA" outgoing="_KJ37nYV5EemzzojpIDPlJA" variable="_KJ37m4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJ37nIV5EemzzojpIDPlJA" name="onlyVars=(current.getFirst() instanceof Variable &amp;&amp; current.getSecond() instanceof Variable);" incoming="_KJ37nYV5EemzzojpIDPlJA" outgoing="_KJ4ioIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>onlyVars=(current.getFirst() instanceof Variable &amp;&amp; current.getSecond() instanceof Variable);
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJ37noV5EemzzojpIDPlJA" name="i++;" incoming="_KJ4ioIV5EemzzojpIDPlJA" outgoing="_KJ4ioYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>i++;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ4iooV5EemzzojpIDPlJA" name="If_2_cond" incoming="_KJ4ipIV5EemzzojpIDPlJA" outgoing="_KJ4ipoV5EemzzojpIDPlJA _KJ4iq4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ4io4V5EemzzojpIDPlJA" name="If_2_merge" incoming="_KJ4ipoV5EemzzojpIDPlJA _KJ5Jt4V5EemzzojpIDPlJA" outgoing="_KJ5JuoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ4iqYV5EemzzojpIDPlJA" name="unif.prob.getSigma().add(problem.get(0));" incoming="_KJ4iq4V5EemzzojpIDPlJA" outgoing="_KJ4iroV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ4iqoV5EemzzojpIDPlJA" name="problem.get(0)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ4irIV5EemzzojpIDPlJA" name="problem.remove(0);" incoming="_KJ4iroV5EemzzojpIDPlJA" outgoing="_KJ5JsIV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ4irYV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ4ir4V5EemzzojpIDPlJA" name="steps.append(&quot;(VO), &quot;);" incoming="_KJ5JsIV5EemzzojpIDPlJA" outgoing="_KJ5JtIV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ4isIV5EemzzojpIDPlJA" name="&quot;(VO), &quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ5JsYV5EemzzojpIDPlJA" name="varsOnly(var,problem);" incoming="_KJ5JtIV5EemzzojpIDPlJA" outgoing="_KJ5JtoV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ5JsoV5EemzzojpIDPlJA" name="var"/>
          <argument xmi:id="_KJ5Js4V5EemzzojpIDPlJA" name="problem"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJ5JtYV5EemzzojpIDPlJA" name="continue;" incoming="_KJ5JtoV5EemzzojpIDPlJA" outgoing="_KJ5Jt4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>continue;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ5JuIV5EemzzojpIDPlJA" name="problem.remove(0);" incoming="_KJ5JuoV5EemzzojpIDPlJA" outgoing="_KJ5JvYV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ5JuYV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ5Ju4V5EemzzojpIDPlJA" name="problem.add(t);" incoming="_KJ5JvYV5EemzzojpIDPlJA" outgoing="_KJ5wwIV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ5JvIV5EemzzojpIDPlJA" name="t"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJ5JvoV5EemzzojpIDPlJA" name="continue;" incoming="_KJ5wwIV5EemzzojpIDPlJA" outgoing="_KJ5wwYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>continue;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ5wwoV5EemzzojpIDPlJA" name="If_3_cond" incoming="_KJ5wxIV5EemzzojpIDPlJA" outgoing="_KJ5wxYV5EemzzojpIDPlJA _KJ5wyYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ5ww4V5EemzzojpIDPlJA" name="If_3_merge" incoming="_KJ5wxYV5EemzzojpIDPlJA _KJ7l8YV5EemzzojpIDPlJA" outgoing="_KJ7l9IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ5wyIV5EemzzojpIDPlJA" name="Function f=(Function)t.getFirst();" incoming="_KJ5wyYV5EemzzojpIDPlJA" outgoing="_KJ5wzIV5EemzzojpIDPlJA" variable="_KJ5wyoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ5wy4V5EemzzojpIDPlJA" name="Function s=(Function)t.getSecond();" incoming="_KJ5wzIV5EemzzojpIDPlJA" outgoing="_KJ6X0IV5EemzzojpIDPlJA" variable="_KJ5wzYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ5wzoV5EemzzojpIDPlJA" name="Tuple&lt;Function> fun=new Tuple&lt;Function>(f,s);" incoming="_KJ6X0IV5EemzzojpIDPlJA" outgoing="_KJ6X1IV5EemzzojpIDPlJA" variable="_KJ6X0YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ6X0oV5EemzzojpIDPlJA" name="If_4_cond" incoming="_KJ6X1IV5EemzzojpIDPlJA" outgoing="_KJ6X1YV5EemzzojpIDPlJA _KJ6X2oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ6X04V5EemzzojpIDPlJA" name="If_4_merge" incoming="_KJ6X1YV5EemzzojpIDPlJA" outgoing="_KJ6X3oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ6X2IV5EemzzojpIDPlJA" name="steps.append(&quot;(Cla), &quot;);" incoming="_KJ6X2oV5EemzzojpIDPlJA" outgoing="_KJ6X24V5EemzzojpIDPlJA">
          <argument xmi:id="_KJ6X2YV5EemzzojpIDPlJA" name="&quot;(Cla), &quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ6X3IV5EemzzojpIDPlJA" name="steps.append(&quot;(Dec), &quot;);" incoming="_KJ6X3oV5EemzzojpIDPlJA" outgoing="_KJ6-4YV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ6X3YV5EemzzojpIDPlJA" name="&quot;(Dec), &quot;"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ6-4IV5EemzzojpIDPlJA" name="Tuple&lt;ArrayList&lt;Tuple&lt;Element>>> probAndCons=decomposition(fun);" incoming="_KJ6-4YV5EemzzojpIDPlJA" outgoing="_KJ6-5YV5EemzzojpIDPlJA" variable="_KJ6-4oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ6-44V5EemzzojpIDPlJA" name="problem.remove(0);" incoming="_KJ6-5YV5EemzzojpIDPlJA" outgoing="_KJ6-6YV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ6-5IV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ6-5oV5EemzzojpIDPlJA" name="problem.addAll(0,probAndCons.getFirst());" incoming="_KJ6-6YV5EemzzojpIDPlJA" outgoing="_KJ6-7IV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ6-54V5EemzzojpIDPlJA" name="0"/>
          <argument xmi:id="_KJ6-6IV5EemzzojpIDPlJA" name="probAndCons.getFirst()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ6-6oV5EemzzojpIDPlJA" name="unif.prob.getC().addAll(probAndCons.getSecond());" incoming="_KJ6-7IV5EemzzojpIDPlJA" outgoing="_KJ7l8IV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ6-64V5EemzzojpIDPlJA" name="probAndCons.getSecond()"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJ6-7YV5EemzzojpIDPlJA" name="continue;" incoming="_KJ7l8IV5EemzzojpIDPlJA" outgoing="_KJ7l8YV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>continue;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ7l8oV5EemzzojpIDPlJA" name="If_5_cond" incoming="_KJ7l9IV5EemzzojpIDPlJA" outgoing="_KJ7l9YV5EemzzojpIDPlJA _KJ7l-oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ7l84V5EemzzojpIDPlJA" name="If_5_merge" incoming="_KJ7l9YV5EemzzojpIDPlJA _KJ8NCIV5EemzzojpIDPlJA" outgoing="_KJ8NC4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ7l-IV5EemzzojpIDPlJA" name="steps.append(&quot;(Ori), &quot;);" incoming="_KJ7l-oV5EemzzojpIDPlJA" outgoing="_KJ7l_IV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ7l-YV5EemzzojpIDPlJA" name="&quot;(Ori), &quot;"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ7l-4V5EemzzojpIDPlJA" name="Tuple&lt;Element> oriented=orient(t);" incoming="_KJ7l_IV5EemzzojpIDPlJA" outgoing="_KJ8NAYV5EemzzojpIDPlJA" variable="_KJ7l_YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ7l_oV5EemzzojpIDPlJA" name="problem.remove(0);" incoming="_KJ8NAYV5EemzzojpIDPlJA" outgoing="_KJ8NBYV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ8NAIV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ8NAoV5EemzzojpIDPlJA" name="problem.add(0,oriented);" incoming="_KJ8NBYV5EemzzojpIDPlJA" outgoing="_KJ8NB4V5EemzzojpIDPlJA">
          <argument xmi:id="_KJ8NA4V5EemzzojpIDPlJA" name="0"/>
          <argument xmi:id="_KJ8NBIV5EemzzojpIDPlJA" name="oriented"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJ8NBoV5EemzzojpIDPlJA" name="continue;" incoming="_KJ8NB4V5EemzzojpIDPlJA" outgoing="_KJ8NCIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>continue;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ8NCYV5EemzzojpIDPlJA" name="If_6_cond" incoming="_KJ8NC4V5EemzzojpIDPlJA" outgoing="_KJ8NDIV5EemzzojpIDPlJA _KJ80EIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ8NCoV5EemzzojpIDPlJA" name="If_6_merge" incoming="_KJ8NDIV5EemzzojpIDPlJA _KJ-CMYV5EemzzojpIDPlJA" outgoing="_KJ-CMoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ8ND4V5EemzzojpIDPlJA" name="If_7_cond" incoming="_KJ80EIV5EemzzojpIDPlJA" outgoing="_KJ80EYV5EemzzojpIDPlJA _KJ80FoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ8NEIV5EemzzojpIDPlJA" name="If_7_merge" incoming="_KJ80EYV5EemzzojpIDPlJA" outgoing="_KJ80GoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ80FIV5EemzzojpIDPlJA" name="steps.append(&quot;(Occ), &quot;);" incoming="_KJ80FoV5EemzzojpIDPlJA" outgoing="_KJ80F4V5EemzzojpIDPlJA">
          <argument xmi:id="_KJ80FYV5EemzzojpIDPlJA" name="&quot;(Occ), &quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ80GIV5EemzzojpIDPlJA" name="problem.remove(0);" incoming="_KJ80GoV5EemzzojpIDPlJA" outgoing="_KJ9bIoV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ80GYV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ9bIIV5EemzzojpIDPlJA" name="steps.append(&quot;(VE), &quot;);" incoming="_KJ9bIoV5EemzzojpIDPlJA" outgoing="_KJ9bJIV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ9bIYV5EemzzojpIDPlJA" name="&quot;(VE), &quot;"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ9bI4V5EemzzojpIDPlJA" name="Tuple&lt;Element> newTerm=varElim(t,problem);" incoming="_KJ9bJIV5EemzzojpIDPlJA" outgoing="_KJ9bKYV5EemzzojpIDPlJA" variable="_KJ9bJYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ9bJoV5EemzzojpIDPlJA" name="problem.add(0,newTerm);" incoming="_KJ9bKYV5EemzzojpIDPlJA" outgoing="_KJ9bLIV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ9bJ4V5EemzzojpIDPlJA" name="0"/>
          <argument xmi:id="_KJ9bKIV5EemzzojpIDPlJA" name="newTerm"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ9bKoV5EemzzojpIDPlJA" name="unif.prob.getSigma().add(new Tuple&lt;Element>(t.getFirst(),newTerm.getFirst()));" incoming="_KJ9bLIV5EemzzojpIDPlJA" outgoing="_KJ-CMIV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ9bK4V5EemzzojpIDPlJA" name="new Tuple&lt;Element>(t.getFirst(),newTerm.getFirst())"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KJ9bLYV5EemzzojpIDPlJA" name="continue;" incoming="_KJ-CMIV5EemzzojpIDPlJA" outgoing="_KJ-CMYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>continue;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ-CM4V5EemzzojpIDPlJA" name="unif.getC().trim();" incoming="_KJ-CNIV5EemzzojpIDPlJA" outgoing="_KJ-CNoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJ-CN4V5EemzzojpIDPlJA" name="tryReplace" specification="_KERC0IV5EemzzojpIDPlJA" node="_KJ-COIV5EemzzojpIDPlJA _KJ-COYV5EemzzojpIDPlJA _KJ-COoV5EemzzojpIDPlJA _KJ-CO4V5EemzzojpIDPlJA _KJ-CPIV5EemzzojpIDPlJA _KJ-CPYV5EemzzojpIDPlJA _KJ-pQIV5EemzzojpIDPlJA _KJ-pQYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ-pQoV5EemzzojpIDPlJA" name="InitNode_If_8_cond" target="_KJ-pQIV5EemzzojpIDPlJA" source="_KJ-CPIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ-pQ4V5EemzzojpIDPlJA" name="If_8_cond_FinalNode" target="_KJ-CPYV5EemzzojpIDPlJA" source="_KJ-pQIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ-pRIV5EemzzojpIDPlJA" value="e instanceof Variable &amp;&amp; e.equals(x)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ-pRYV5EemzzojpIDPlJA" name="If_8_cond_FinalNode" target="_KJ-CPYV5EemzzojpIDPlJA" source="_KJ-pQIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ-pRoV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ-pR4V5EemzzojpIDPlJA" name="If_8_merge_FinalNode" target="_KJ-CPYV5EemzzojpIDPlJA" source="_KJ-pQYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ-COIV5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KERC04V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ-COYV5EemzzojpIDPlJA" name="x" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KERC1IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ-COoV5EemzzojpIDPlJA" name="tprime" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KERC1YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ-CO4V5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KERC1oV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJ-CPIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KJ-pQoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJ-CPYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KJ-pQ4V5EemzzojpIDPlJA _KJ-pRYV5EemzzojpIDPlJA _KJ-pR4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ-pQIV5EemzzojpIDPlJA" name="If_8_cond" incoming="_KJ-pQoV5EemzzojpIDPlJA" outgoing="_KJ-pQ4V5EemzzojpIDPlJA _KJ-pRYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ-pQYV5EemzzojpIDPlJA" name="If_8_merge" outgoing="_KJ-pR4V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KJ-pSIV5EemzzojpIDPlJA" name="constraintSimplification" specification="_KEo2QIV5EemzzojpIDPlJA" node="_KJ-pSYV5EemzzojpIDPlJA _KJ_QUIV5EemzzojpIDPlJA _KJ_QUYV5EemzzojpIDPlJA _KJ_QUoV5EemzzojpIDPlJA _KJ_QU4V5EemzzojpIDPlJA _KJ_QVIV5EemzzojpIDPlJA _KJ_QVYV5EemzzojpIDPlJA _KJ_QWIV5EemzzojpIDPlJA _KJ_QW4V5EemzzojpIDPlJA _KJ_3YoV5EemzzojpIDPlJA _KJ_3Y4V5EemzzojpIDPlJA _KJ_3ZoV5EemzzojpIDPlJA _KJ_3a4V5EemzzojpIDPlJA _KJ_3bIV5EemzzojpIDPlJA _KKAecIV5EemzzojpIDPlJA _KKAecYV5EemzzojpIDPlJA _KKAec4V5EemzzojpIDPlJA _KKAedIV5EemzzojpIDPlJA _KKAed4V5EemzzojpIDPlJA _KKAee4V5EemzzojpIDPlJA _KKAefYV5EemzzojpIDPlJA _KKBFgYV5EemzzojpIDPlJA _KKBFgoV5EemzzojpIDPlJA _KKBFhYV5EemzzojpIDPlJA _KKBFiYV5EemzzojpIDPlJA _KKBFi4V5EemzzojpIDPlJA _KKBsk4V5EemzzojpIDPlJA _KKBslIV5EemzzojpIDPlJA _KKBsmYV5EemzzojpIDPlJA _KKBsmoV5EemzzojpIDPlJA _KKBsnIV5EemzzojpIDPlJA _KKBsoIV5EemzzojpIDPlJA _KKCToYV5EemzzojpIDPlJA _KKCTp4V5EemzzojpIDPlJA _KKCTqIV5EemzzojpIDPlJA _KKCTrYV5EemzzojpIDPlJA _KKCTroV5EemzzojpIDPlJA _KKC6sYV5EemzzojpIDPlJA _KKC6tYV5EemzzojpIDPlJA _KKC6u4V5EemzzojpIDPlJA _KKC6vIV5EemzzojpIDPlJA _KKDhxIV5EemzzojpIDPlJA _KKDhxYV5EemzzojpIDPlJA _KKDhx4V5EemzzojpIDPlJA _KKDhy4V5EemzzojpIDPlJA _KKEI0oV5EemzzojpIDPlJA _KKEI04V5EemzzojpIDPlJA _KKEI1oV5EemzzojpIDPlJA _KKEI14V5EemzzojpIDPlJA _KKEI2oV5EemzzojpIDPlJA _KKEI3oV5EemzzojpIDPlJA _KKEv4YV5EemzzojpIDPlJA _KKEv5IV5EemzzojpIDPlJA _KKEv5oV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ_QVoV5EemzzojpIDPlJA" name="InitNode_PCSSet constraintProblem=prob.getC();" target="_KJ_QVYV5EemzzojpIDPlJA" source="_KJ_QU4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ_QWYV5EemzzojpIDPlJA" name="PCSSet constraintProblem=prob._Tuple&lt;Element> t;" target="_KJ_QWIV5EemzzojpIDPlJA" source="_KJ_QVYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ_3YIV5EemzzojpIDPlJA" name="Tuple&lt;Element> t;_boolean error=false;" target="_KJ_QW4V5EemzzojpIDPlJA" source="_KJ_QWIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ_3ZIV5EemzzojpIDPlJA" name="While_2_merge_cond" target="_KJ_3Y4V5EemzzojpIDPlJA" source="_KJ_3YoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ_3ZYV5EemzzojpIDPlJA" name="boolean error=false;_While_2_merge" target="_KJ_3YoV5EemzzojpIDPlJA" source="_KJ_QW4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ_3aYV5EemzzojpIDPlJA" name="While_2_cond_t=constraintProblem.get(0);" target="_KJ_3ZoV5EemzzojpIDPlJA" source="_KJ_3Y4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ_3aoV5EemzzojpIDPlJA" value="!constraintProblem.isEmpty()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ_3bYV5EemzzojpIDPlJA" name="t=constraintProblem.get(0);_If_9_cond" target="_KJ_3a4V5EemzzojpIDPlJA" source="_KJ_3ZoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KJ_3boV5EemzzojpIDPlJA" name="If_9_else" target="_KJ_3bIV5EemzzojpIDPlJA" source="_KJ_3a4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ_3cIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKAecoV5EemzzojpIDPlJA" name="If_9_cond_If_10_cond" target="_KKAecIV5EemzzojpIDPlJA" source="_KJ_3a4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KJ_3b4V5EemzzojpIDPlJA" value="(t.getFirst().isName()) &amp;&amp; (t.getSecond().isName())"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKAedYV5EemzzojpIDPlJA" name="If_10_cond_If_11_cond" target="_KKAec4V5EemzzojpIDPlJA" source="_KKAecIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKAedoV5EemzzojpIDPlJA" value="prob.psi.containsKey(t.getFirst().getName())"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKAeeYV5EemzzojpIDPlJA" name="If_11_cond_constraintProblem.remove(0);" target="_KKAed4V5EemzzojpIDPlJA" source="_KKAec4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKAeeoV5EemzzojpIDPlJA" value="nn1(t.getFirst(),t.getSecond(),prob,proxR,lambda)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKAefIV5EemzzojpIDPlJA" name="constraintProblem.remove(0);_continue;" target="_KKAee4V5EemzzojpIDPlJA" source="_KKAed4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKAefoV5EemzzojpIDPlJA" name="If_11_cond_error=true;" target="_KKAefYV5EemzzojpIDPlJA" source="_KKAec4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKAef4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKAegIV5EemzzojpIDPlJA" name="thenPathTo_If_11_merge" target="_KKAedIV5EemzzojpIDPlJA" source="_KKAee4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBFgIV5EemzzojpIDPlJA" name="error=true;_If_11_merge" target="_KKAedIV5EemzzojpIDPlJA" source="_KKAefYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBFg4V5EemzzojpIDPlJA" name="If_10_cond_If_12_cond" target="_KKBFgYV5EemzzojpIDPlJA" source="_KKAecIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKBFhIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBFh4V5EemzzojpIDPlJA" name="If_12_cond_constraintProblem.remove(0);" target="_KKBFhYV5EemzzojpIDPlJA" source="_KKBFgYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKBFiIV5EemzzojpIDPlJA" value="nn1(t.getSecond(),t.getFirst(),prob,proxR,lambda)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBFioV5EemzzojpIDPlJA" name="constraintProblem.remove(0);_continue;" target="_KKBFiYV5EemzzojpIDPlJA" source="_KKBFhYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBFjIV5EemzzojpIDPlJA" name="If_12_cond_error=true;" target="_KKBFi4V5EemzzojpIDPlJA" source="_KKBFgYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKBFjYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBFjoV5EemzzojpIDPlJA" name="thenPathTo_If_12_merge" target="_KKBFgoV5EemzzojpIDPlJA" source="_KKBFiYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBFj4V5EemzzojpIDPlJA" name="error=true;_If_12_merge" target="_KKBFgoV5EemzzojpIDPlJA" source="_KKBFi4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBskIV5EemzzojpIDPlJA" name="thenPathTo_If_10_merge" target="_KKAecYV5EemzzojpIDPlJA" source="_KKAedIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBskYV5EemzzojpIDPlJA" name="If_12_merge_If_10_merge" target="_KKAecYV5EemzzojpIDPlJA" source="_KKBFgoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBskoV5EemzzojpIDPlJA" name="If_10_merge_If_9_merge" target="_KJ_3bIV5EemzzojpIDPlJA" source="_KKAecYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBslYV5EemzzojpIDPlJA" name="If_9_merge_If_13_cond" target="_KKBsk4V5EemzzojpIDPlJA" source="_KJ_3bIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBsloV5EemzzojpIDPlJA" name="If_13_else" target="_KKBslIV5EemzzojpIDPlJA" source="_KKBsk4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKBsmIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBsm4V5EemzzojpIDPlJA" name="If_13_cond_If_14_cond" target="_KKBsmYV5EemzzojpIDPlJA" source="_KKBsk4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKBsl4V5EemzzojpIDPlJA" value="(t.getFirst() instanceof Function) &amp;&amp; (t.getSecond() instanceof Function)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKBsnoV5EemzzojpIDPlJA" name="If_14_cond_constraintProblem.remove(0);" target="_KKBsnIV5EemzzojpIDPlJA" source="_KKBsmYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKBsn4V5EemzzojpIDPlJA" value="ffs((Function)t.getFirst(),(Function)t.getSecond(),proxR,lambda)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKCToIV5EemzzojpIDPlJA" name="constraintProblem.remove(0);_continue;" target="_KKBsoIV5EemzzojpIDPlJA" source="_KKBsnIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKCTooV5EemzzojpIDPlJA" name="If_14_cond_error=true;" target="_KKCToYV5EemzzojpIDPlJA" source="_KKBsmYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKCTo4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKCTpIV5EemzzojpIDPlJA" name="thenPathTo_If_14_merge" target="_KKBsmoV5EemzzojpIDPlJA" source="_KKBsoIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKCTpYV5EemzzojpIDPlJA" name="error=true;_If_14_merge" target="_KKBsmoV5EemzzojpIDPlJA" source="_KKCToYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKCTpoV5EemzzojpIDPlJA" name="If_14_merge_If_13_merge" target="_KKBslIV5EemzzojpIDPlJA" source="_KKBsmoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKCTqYV5EemzzojpIDPlJA" name="If_13_merge_If_15_cond" target="_KKCTp4V5EemzzojpIDPlJA" source="_KKBslIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKCTqoV5EemzzojpIDPlJA" name="If_15_else" target="_KKCTqIV5EemzzojpIDPlJA" source="_KKCTp4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKCTrIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKC6sIV5EemzzojpIDPlJA" name="If_15_cond_If_16_cond" target="_KKCTrYV5EemzzojpIDPlJA" source="_KKCTp4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKCTq4V5EemzzojpIDPlJA" value="t.getFirst().isName() &amp;&amp; (t.getSecond() instanceof Function)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKC6s4V5EemzzojpIDPlJA" name="If_16_cond_constraintProblem.remove(0);" target="_KKC6sYV5EemzzojpIDPlJA" source="_KKCTrYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKC6tIV5EemzzojpIDPlJA" value="nfs(t.getFirst(),(Function)t.getSecond(),prob.psi,proxR,lambda)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKC6toV5EemzzojpIDPlJA" name="If_16_cond_error=true;" target="_KKC6tYV5EemzzojpIDPlJA" source="_KKCTrYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKC6t4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKC6uIV5EemzzojpIDPlJA" name="thenPathTo_If_16_merge" target="_KKCTroV5EemzzojpIDPlJA" source="_KKC6sYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKC6uYV5EemzzojpIDPlJA" name="error=true;_If_16_merge" target="_KKCTroV5EemzzojpIDPlJA" source="_KKC6tYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKC6uoV5EemzzojpIDPlJA" name="If_16_merge_If_15_merge" target="_KKCTqIV5EemzzojpIDPlJA" source="_KKCTroV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKDhwIV5EemzzojpIDPlJA" name="If_15_merge_If_17_cond" target="_KKC6u4V5EemzzojpIDPlJA" source="_KKCTqIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKDhwYV5EemzzojpIDPlJA" name="If_17_else" target="_KKC6vIV5EemzzojpIDPlJA" source="_KKC6u4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKDhw4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKDhxoV5EemzzojpIDPlJA" name="If_17_cond_If_18_cond" target="_KKDhxIV5EemzzojpIDPlJA" source="_KKC6u4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKDhwoV5EemzzojpIDPlJA" value="(t.getFirst() instanceof Function) &amp;&amp; t.getSecond().isName()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKDhyYV5EemzzojpIDPlJA" name="If_18_cond_constraintProblem.remove(0);" target="_KKDhx4V5EemzzojpIDPlJA" source="_KKDhxIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKDhyoV5EemzzojpIDPlJA" value="nfs(t.getSecond(),(Function)t.getFirst(),prob.psi,proxR,lambda)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKDhzIV5EemzzojpIDPlJA" name="If_18_cond_error=true;" target="_KKDhy4V5EemzzojpIDPlJA" source="_KKDhxIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKDhzYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKDhzoV5EemzzojpIDPlJA" name="thenPathTo_If_18_merge" target="_KKDhxYV5EemzzojpIDPlJA" source="_KKDhx4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKDhz4V5EemzzojpIDPlJA" name="error=true;_If_18_merge" target="_KKDhxYV5EemzzojpIDPlJA" source="_KKDhy4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEI0IV5EemzzojpIDPlJA" name="If_18_merge_If_17_merge" target="_KKC6vIV5EemzzojpIDPlJA" source="_KKDhxYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEI0YV5EemzzojpIDPlJA" name="If_17_merge_While_2_merge" target="_KJ_3YoV5EemzzojpIDPlJA" source="_KKC6vIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEI1IV5EemzzojpIDPlJA" name="While_2_cond_If_19_cond" target="_KKEI0oV5EemzzojpIDPlJA" source="_KJ_3Y4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKEI1YV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEI2IV5EemzzojpIDPlJA" name="If_19_cond_If_20_cond" target="_KKEI1oV5EemzzojpIDPlJA" source="_KKEI0oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKEI2YV5EemzzojpIDPlJA" value="error"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEI3IV5EemzzojpIDPlJA" name="If_20_cond_prob.setP(prob.branch.getP());" target="_KKEI2oV5EemzzojpIDPlJA" source="_KKEI1oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKEI3YV5EemzzojpIDPlJA" value="prob.branch != null"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEv4IV5EemzzojpIDPlJA" name="prob.setP(prob.branch.getP());_prob.setC(prob.branch.getC())" target="_KKEI3oV5EemzzojpIDPlJA" source="_KKEI2oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEv44V5EemzzojpIDPlJA" name="prob.setC(prob.branch.getC());_prob.setSigma(prob.branch.get" target="_KKEv4YV5EemzzojpIDPlJA" source="_KKEI3oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEv5YV5EemzzojpIDPlJA" name="prob.setSigma(prob.branch.getS_prob.psi=prob.branch.psi;" target="_KKEv5IV5EemzzojpIDPlJA" source="_KKEv4YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEv54V5EemzzojpIDPlJA" name="prob.psi=prob.branch.psi;_prob.branch=prob.branch.branch;" target="_KKEv5oV5EemzzojpIDPlJA" source="_KKEv5IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEv6IV5EemzzojpIDPlJA" name="prob.branch=prob.branch.branch_FinalNode" target="_KJ_QVIV5EemzzojpIDPlJA" source="_KKEv5oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEv6YV5EemzzojpIDPlJA" name="If_20_cond_FinalNode" target="_KJ_QVIV5EemzzojpIDPlJA" source="_KKEI1oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKEv6oV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKEv64V5EemzzojpIDPlJA" name="If_19_cond_FinalNode" target="_KJ_QVIV5EemzzojpIDPlJA" source="_KKEI0oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKEv7IV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKFW8IV5EemzzojpIDPlJA" name="thenPathTo_If_19_merge" target="_KKEI04V5EemzzojpIDPlJA" source="_KKEI14V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKFW8YV5EemzzojpIDPlJA" name="If_19_merge_FinalNode" target="_KJ_QVIV5EemzzojpIDPlJA" source="_KKEI04V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ_QV4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ_QWoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KJ_3YYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ-pSYV5EemzzojpIDPlJA" name="prob" type="_J6liYIV5EemzzojpIDPlJA" parameter="_KEo2Q4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ_QUIV5EemzzojpIDPlJA" name="proxR" type="_J6jtMIV5EemzzojpIDPlJA" parameter="_KEo2RIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ_QUYV5EemzzojpIDPlJA" name="lambda" parameter="_KEo2RYV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KJ_QUoV5EemzzojpIDPlJA" parameter="_KEo2RoV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KJ_QU4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KJ_QVoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KJ_QVIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKEv6IV5EemzzojpIDPlJA _KKEv6YV5EemzzojpIDPlJA _KKEv64V5EemzzojpIDPlJA _KKFW8YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ_QVYV5EemzzojpIDPlJA" name="PCSSet constraintProblem=prob.getC();" incoming="_KJ_QVoV5EemzzojpIDPlJA" outgoing="_KJ_QWYV5EemzzojpIDPlJA" variable="_KJ_QV4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ_QWIV5EemzzojpIDPlJA" name="Tuple&lt;Element> t;" incoming="_KJ_QWYV5EemzzojpIDPlJA" outgoing="_KJ_3YIV5EemzzojpIDPlJA" variable="_KJ_QWoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KJ_QW4V5EemzzojpIDPlJA" name="boolean error=false;" incoming="_KJ_3YIV5EemzzojpIDPlJA" outgoing="_KJ_3ZYV5EemzzojpIDPlJA" variable="_KJ_3YYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ_3YoV5EemzzojpIDPlJA" name="While_2_merge" incoming="_KJ_3ZYV5EemzzojpIDPlJA _KKEI0YV5EemzzojpIDPlJA" outgoing="_KJ_3ZIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ_3Y4V5EemzzojpIDPlJA" name="While_2_cond" incoming="_KJ_3ZIV5EemzzojpIDPlJA" outgoing="_KJ_3aYV5EemzzojpIDPlJA _KKEI1IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KJ_3ZoV5EemzzojpIDPlJA" name="t=constraintProblem.get(0);" incoming="_KJ_3aYV5EemzzojpIDPlJA" outgoing="_KJ_3bYV5EemzzojpIDPlJA">
          <argument xmi:id="_KJ_3Z4V5EemzzojpIDPlJA" name="0"/>
          <result xmi:id="_KJ_3aIV5EemzzojpIDPlJA" name="t"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KJ_3a4V5EemzzojpIDPlJA" name="If_9_cond" incoming="_KJ_3bYV5EemzzojpIDPlJA" outgoing="_KJ_3boV5EemzzojpIDPlJA _KKAecoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KJ_3bIV5EemzzojpIDPlJA" name="If_9_merge" incoming="_KJ_3boV5EemzzojpIDPlJA _KKBskoV5EemzzojpIDPlJA" outgoing="_KKBslYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKAecIV5EemzzojpIDPlJA" name="If_10_cond" incoming="_KKAecoV5EemzzojpIDPlJA" outgoing="_KKAedYV5EemzzojpIDPlJA _KKBFg4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKAecYV5EemzzojpIDPlJA" name="If_10_merge" incoming="_KKBskIV5EemzzojpIDPlJA _KKBskYV5EemzzojpIDPlJA" outgoing="_KKBskoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKAec4V5EemzzojpIDPlJA" name="If_11_cond" incoming="_KKAedYV5EemzzojpIDPlJA" outgoing="_KKAeeYV5EemzzojpIDPlJA _KKAefoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKAedIV5EemzzojpIDPlJA" name="If_11_merge" incoming="_KKAegIV5EemzzojpIDPlJA _KKBFgIV5EemzzojpIDPlJA" outgoing="_KKBskIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKAed4V5EemzzojpIDPlJA" name="constraintProblem.remove(0);" incoming="_KKAeeYV5EemzzojpIDPlJA" outgoing="_KKAefIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKAeeIV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKAee4V5EemzzojpIDPlJA" name="continue;" incoming="_KKAefIV5EemzzojpIDPlJA" outgoing="_KKAegIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>continue;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKAefYV5EemzzojpIDPlJA" name="error=true;" incoming="_KKAefoV5EemzzojpIDPlJA" outgoing="_KKBFgIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>error=true;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKBFgYV5EemzzojpIDPlJA" name="If_12_cond" incoming="_KKBFg4V5EemzzojpIDPlJA" outgoing="_KKBFh4V5EemzzojpIDPlJA _KKBFjIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKBFgoV5EemzzojpIDPlJA" name="If_12_merge" incoming="_KKBFjoV5EemzzojpIDPlJA _KKBFj4V5EemzzojpIDPlJA" outgoing="_KKBskYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKBFhYV5EemzzojpIDPlJA" name="constraintProblem.remove(0);" incoming="_KKBFh4V5EemzzojpIDPlJA" outgoing="_KKBFioV5EemzzojpIDPlJA">
          <argument xmi:id="_KKBFhoV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKBFiYV5EemzzojpIDPlJA" name="continue;" incoming="_KKBFioV5EemzzojpIDPlJA" outgoing="_KKBFjoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>continue;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKBFi4V5EemzzojpIDPlJA" name="error=true;" incoming="_KKBFjIV5EemzzojpIDPlJA" outgoing="_KKBFj4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>error=true;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKBsk4V5EemzzojpIDPlJA" name="If_13_cond" incoming="_KKBslYV5EemzzojpIDPlJA" outgoing="_KKBsloV5EemzzojpIDPlJA _KKBsm4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKBslIV5EemzzojpIDPlJA" name="If_13_merge" incoming="_KKBsloV5EemzzojpIDPlJA _KKCTpoV5EemzzojpIDPlJA" outgoing="_KKCTqYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKBsmYV5EemzzojpIDPlJA" name="If_14_cond" incoming="_KKBsm4V5EemzzojpIDPlJA" outgoing="_KKBsnoV5EemzzojpIDPlJA _KKCTooV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKBsmoV5EemzzojpIDPlJA" name="If_14_merge" incoming="_KKCTpIV5EemzzojpIDPlJA _KKCTpYV5EemzzojpIDPlJA" outgoing="_KKCTpoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKBsnIV5EemzzojpIDPlJA" name="constraintProblem.remove(0);" incoming="_KKBsnoV5EemzzojpIDPlJA" outgoing="_KKCToIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKBsnYV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKBsoIV5EemzzojpIDPlJA" name="continue;" incoming="_KKCToIV5EemzzojpIDPlJA" outgoing="_KKCTpIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>continue;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKCToYV5EemzzojpIDPlJA" name="error=true;" incoming="_KKCTooV5EemzzojpIDPlJA" outgoing="_KKCTpYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>error=true;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKCTp4V5EemzzojpIDPlJA" name="If_15_cond" incoming="_KKCTqYV5EemzzojpIDPlJA" outgoing="_KKCTqoV5EemzzojpIDPlJA _KKC6sIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKCTqIV5EemzzojpIDPlJA" name="If_15_merge" incoming="_KKCTqoV5EemzzojpIDPlJA _KKC6uoV5EemzzojpIDPlJA" outgoing="_KKDhwIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKCTrYV5EemzzojpIDPlJA" name="If_16_cond" incoming="_KKC6sIV5EemzzojpIDPlJA" outgoing="_KKC6s4V5EemzzojpIDPlJA _KKC6toV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKCTroV5EemzzojpIDPlJA" name="If_16_merge" incoming="_KKC6uIV5EemzzojpIDPlJA _KKC6uYV5EemzzojpIDPlJA" outgoing="_KKC6uoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKC6sYV5EemzzojpIDPlJA" name="constraintProblem.remove(0);" incoming="_KKC6s4V5EemzzojpIDPlJA" outgoing="_KKC6uIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKC6soV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKC6tYV5EemzzojpIDPlJA" name="error=true;" incoming="_KKC6toV5EemzzojpIDPlJA" outgoing="_KKC6uYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>error=true;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKC6u4V5EemzzojpIDPlJA" name="If_17_cond" incoming="_KKDhwIV5EemzzojpIDPlJA" outgoing="_KKDhwYV5EemzzojpIDPlJA _KKDhxoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKC6vIV5EemzzojpIDPlJA" name="If_17_merge" incoming="_KKDhwYV5EemzzojpIDPlJA _KKEI0IV5EemzzojpIDPlJA" outgoing="_KKEI0YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKDhxIV5EemzzojpIDPlJA" name="If_18_cond" incoming="_KKDhxoV5EemzzojpIDPlJA" outgoing="_KKDhyYV5EemzzojpIDPlJA _KKDhzIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKDhxYV5EemzzojpIDPlJA" name="If_18_merge" incoming="_KKDhzoV5EemzzojpIDPlJA _KKDhz4V5EemzzojpIDPlJA" outgoing="_KKEI0IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKDhx4V5EemzzojpIDPlJA" name="constraintProblem.remove(0);" incoming="_KKDhyYV5EemzzojpIDPlJA" outgoing="_KKDhzoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKDhyIV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKDhy4V5EemzzojpIDPlJA" name="error=true;" incoming="_KKDhzIV5EemzzojpIDPlJA" outgoing="_KKDhz4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>error=true;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKEI0oV5EemzzojpIDPlJA" name="If_19_cond" incoming="_KKEI1IV5EemzzojpIDPlJA" outgoing="_KKEI2IV5EemzzojpIDPlJA _KKEv64V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKEI04V5EemzzojpIDPlJA" name="If_19_merge" incoming="_KKFW8IV5EemzzojpIDPlJA" outgoing="_KKFW8YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKEI1oV5EemzzojpIDPlJA" name="If_20_cond" incoming="_KKEI2IV5EemzzojpIDPlJA" outgoing="_KKEI3IV5EemzzojpIDPlJA _KKEv6YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKEI14V5EemzzojpIDPlJA" name="If_20_merge" outgoing="_KKFW8IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKEI2oV5EemzzojpIDPlJA" name="prob.setP(prob.branch.getP());" incoming="_KKEI3IV5EemzzojpIDPlJA" outgoing="_KKEv4IV5EemzzojpIDPlJA">
          <argument xmi:id="_KKEI24V5EemzzojpIDPlJA" name="prob.branch.getP()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKEI3oV5EemzzojpIDPlJA" name="prob.setC(prob.branch.getC());" incoming="_KKEv4IV5EemzzojpIDPlJA" outgoing="_KKEv44V5EemzzojpIDPlJA">
          <argument xmi:id="_KKEI34V5EemzzojpIDPlJA" name="prob.branch.getC()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKEv4YV5EemzzojpIDPlJA" name="prob.setSigma(prob.branch.getSigma());" incoming="_KKEv44V5EemzzojpIDPlJA" outgoing="_KKEv5YV5EemzzojpIDPlJA">
          <argument xmi:id="_KKEv4oV5EemzzojpIDPlJA" name="prob.branch.getSigma()"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKEv5IV5EemzzojpIDPlJA" name="prob.psi=prob.branch.psi;" incoming="_KKEv5YV5EemzzojpIDPlJA" outgoing="_KKEv54V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>prob.psi=prob.branch.psi;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKEv5oV5EemzzojpIDPlJA" name="prob.branch=prob.branch.branch;" incoming="_KKEv54V5EemzzojpIDPlJA" outgoing="_KKEv6IV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>prob.branch=prob.branch.branch;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKFW8oV5EemzzojpIDPlJA" name="ffs" specification="_KEvj8IV5EemzzojpIDPlJA" node="_KKFW84V5EemzzojpIDPlJA _KKFW9IV5EemzzojpIDPlJA _KKFW9YV5EemzzojpIDPlJA _KKFW9oV5EemzzojpIDPlJA _KKFW94V5EemzzojpIDPlJA _KKFW-IV5EemzzojpIDPlJA _KKFW-YV5EemzzojpIDPlJA _KKFW-oV5EemzzojpIDPlJA _KKFW_YV5EemzzojpIDPlJA _KKFW_oV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKFW-4V5EemzzojpIDPlJA" name="InitNode_float relation=r.getRelation(f1,f2);" target="_KKFW-oV5EemzzojpIDPlJA" source="_KKFW-IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKF-AIV5EemzzojpIDPlJA" name="float relation=r.getRelation(f_If_21_cond" target="_KKFW_YV5EemzzojpIDPlJA" source="_KKFW-oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKF-AYV5EemzzojpIDPlJA" name="If_21_cond_FinalNode" target="_KKFW-YV5EemzzojpIDPlJA" source="_KKFW_YV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKF-AoV5EemzzojpIDPlJA" value="relation >= lambda"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKF-A4V5EemzzojpIDPlJA" name="If_21_cond_FinalNode" target="_KKFW-YV5EemzzojpIDPlJA" source="_KKFW_YV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKF-BIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKF-BYV5EemzzojpIDPlJA" name="If_21_merge_FinalNode" target="_KKFW-YV5EemzzojpIDPlJA" source="_KKFW_oV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKFW_IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKFW84V5EemzzojpIDPlJA" name="f1" type="_J6ifEIV5EemzzojpIDPlJA" parameter="_KEvj84V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKFW9IV5EemzzojpIDPlJA" name="f2" type="_J6ifEIV5EemzzojpIDPlJA" parameter="_KEvj9IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKFW9YV5EemzzojpIDPlJA" name="r" type="_J6jtMIV5EemzzojpIDPlJA" parameter="_KEvj9YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKFW9oV5EemzzojpIDPlJA" name="lambda" parameter="_KEvj9oV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKFW94V5EemzzojpIDPlJA" parameter="_KEvj94V5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KKFW-IV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKFW-4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKFW-YV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKF-AYV5EemzzojpIDPlJA _KKF-A4V5EemzzojpIDPlJA _KKF-BYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKFW-oV5EemzzojpIDPlJA" name="float relation=r.getRelation(f1,f2);" incoming="_KKFW-4V5EemzzojpIDPlJA" outgoing="_KKF-AIV5EemzzojpIDPlJA" variable="_KKFW_IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKFW_YV5EemzzojpIDPlJA" name="If_21_cond" incoming="_KKF-AIV5EemzzojpIDPlJA" outgoing="_KKF-AYV5EemzzojpIDPlJA _KKF-A4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKFW_oV5EemzzojpIDPlJA" name="If_21_merge" outgoing="_KKF-BYV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKF-BoV5EemzzojpIDPlJA" name="nn1" specification="_KFIlgIV5EemzzojpIDPlJA" node="_KKF-B4V5EemzzojpIDPlJA _KKF-CIV5EemzzojpIDPlJA _KKF-CYV5EemzzojpIDPlJA _KKF-CoV5EemzzojpIDPlJA _KKF-C4V5EemzzojpIDPlJA _KKF-DIV5EemzzojpIDPlJA _KKF-DYV5EemzzojpIDPlJA _KKF-DoV5EemzzojpIDPlJA _KKF-D4V5EemzzojpIDPlJA _KKF-EIV5EemzzojpIDPlJA _KKGlEYV5EemzzojpIDPlJA _KKGlEoV5EemzzojpIDPlJA _KKGlGIV5EemzzojpIDPlJA _KKGlG4V5EemzzojpIDPlJA _KKHMIYV5EemzzojpIDPlJA _KKHMI4V5EemzzojpIDPlJA _KKHMJoV5EemzzojpIDPlJA _KKHMKYV5EemzzojpIDPlJA _KKHMLIV5EemzzojpIDPlJA _KKHzMIV5EemzzojpIDPlJA _KKHzNIV5EemzzojpIDPlJA _KKHzN4V5EemzzojpIDPlJA _KKHzOoV5EemzzojpIDPlJA _KKHzO4V5EemzzojpIDPlJA _KKIaRIV5EemzzojpIDPlJA _KKIaSIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKGlEIV5EemzzojpIDPlJA" name="InitNode_If_22_cond" target="_KKF-D4V5EemzzojpIDPlJA" source="_KKF-DYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKGlE4V5EemzzojpIDPlJA" name="If_22_cond_If_23_cond" target="_KKGlEYV5EemzzojpIDPlJA" source="_KKF-D4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKGlFIV5EemzzojpIDPlJA" value="cur.psi.containsKey(n1.getName())"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKGlFYV5EemzzojpIDPlJA" name="If_23_else" target="_KKGlEoV5EemzzojpIDPlJA" source="_KKGlEYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKGlF4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKGlGYV5EemzzojpIDPlJA" name="If_23_cond_Problem nextBranch=cur.branch;" target="_KKGlGIV5EemzzojpIDPlJA" source="_KKGlEYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKGlFoV5EemzzojpIDPlJA" value="cur.psi.get(n1.getName()).size() > 1"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKHMIIV5EemzzojpIDPlJA" name="Problem nextBranch=cur.branch;_cur.branch=new Problem();" target="_KKGlG4V5EemzzojpIDPlJA" source="_KKGlGIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKHMIoV5EemzzojpIDPlJA" name="cur.branch=new Problem();_cur.branch.branch=nextBranch;" target="_KKHMIYV5EemzzojpIDPlJA" source="_KKGlG4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKHMJYV5EemzzojpIDPlJA" name="cur.branch.branch=nextBranch;_cur.branch.setC(cur.getC());" target="_KKHMI4V5EemzzojpIDPlJA" source="_KKHMIYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKHMKIV5EemzzojpIDPlJA" name="cur.branch.setC(cur.getC());_cur.branch.setP(cur.getP());" target="_KKHMJoV5EemzzojpIDPlJA" source="_KKHMI4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKHMK4V5EemzzojpIDPlJA" name="cur.branch.setP(cur.getP());_cur.branch.setSigma(cur.getSigm" target="_KKHMKYV5EemzzojpIDPlJA" source="_KKHMJoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKHMLYV5EemzzojpIDPlJA" name="cur.branch.setSigma(cur.getSig_cur.branch.psi=cur.psi;" target="_KKHMLIV5EemzzojpIDPlJA" source="_KKHMKYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKHzM4V5EemzzojpIDPlJA" name="cur.branch.psi=cur.psi;_cur.psi.put(n1.getName(),new ArrayLi" target="_KKHzMIV5EemzzojpIDPlJA" source="_KKHMLIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKHzNoV5EemzzojpIDPlJA" name="cur.psi.put(n1.getName(),new A_cur.psi.get(n1.getName()).add" target="_KKHzNIV5EemzzojpIDPlJA" source="_KKHzMIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKHzOYV5EemzzojpIDPlJA" name="cur.psi.get(n1.getName()).add(_cur.branch.psi.get(n1.getName" target="_KKHzN4V5EemzzojpIDPlJA" source="_KKHzNIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKIaQIV5EemzzojpIDPlJA" name="cur.branch.psi.get(n1.getName(_If_24_cond" target="_KKHzOoV5EemzzojpIDPlJA" source="_KKHzN4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKIaQYV5EemzzojpIDPlJA" name="If_24_else" target="_KKHzO4V5EemzzojpIDPlJA" source="_KKHzOoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKIaQ4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKIaRYV5EemzzojpIDPlJA" name="If_24_cond_cur.branch=null;" target="_KKIaRIV5EemzzojpIDPlJA" source="_KKHzOoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKIaQoV5EemzzojpIDPlJA" value="!constraintSimplification(cur.branch,r,lambda)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKIaRoV5EemzzojpIDPlJA" name="cur.branch=null;_If_24_merge" target="_KKHzO4V5EemzzojpIDPlJA" source="_KKIaRIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKIaR4V5EemzzojpIDPlJA" name="If_24_merge_If_23_merge" target="_KKGlEoV5EemzzojpIDPlJA" source="_KKHzO4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKIaToV5EemzzojpIDPlJA" name="If_23_merge_nfs(n2,new Function(n1.getName()),cur.psi,r,lamb" target="_KKIaSIV5EemzzojpIDPlJA" source="_KKGlEoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKIaT4V5EemzzojpIDPlJA" name="nfs(n2,new Function(n1.getName_FinalNode" target="_KKF-DoV5EemzzojpIDPlJA" source="_KKIaSIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKIaUIV5EemzzojpIDPlJA" name="If_22_cond_FinalNode" target="_KKF-DoV5EemzzojpIDPlJA" source="_KKF-D4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKIaUYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKIaUoV5EemzzojpIDPlJA" name="If_22_merge_FinalNode" target="_KKF-DoV5EemzzojpIDPlJA" source="_KKF-EIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKGlGoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKF-B4V5EemzzojpIDPlJA" name="n1" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KFIlg4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKF-CIV5EemzzojpIDPlJA" name="n2" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KFIlhIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKF-CYV5EemzzojpIDPlJA" name="cur" type="_J6liYIV5EemzzojpIDPlJA" parameter="_KFIlhYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKF-CoV5EemzzojpIDPlJA" name="r" type="_J6jtMIV5EemzzojpIDPlJA" parameter="_KFIlhoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKF-C4V5EemzzojpIDPlJA" name="lambda" parameter="_KFIlh4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKF-DIV5EemzzojpIDPlJA" parameter="_KFIliIV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KKF-DYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKGlEIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKF-DoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKIaT4V5EemzzojpIDPlJA _KKIaUIV5EemzzojpIDPlJA _KKIaUoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKF-D4V5EemzzojpIDPlJA" name="If_22_cond" incoming="_KKGlEIV5EemzzojpIDPlJA" outgoing="_KKGlE4V5EemzzojpIDPlJA _KKIaUIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKF-EIV5EemzzojpIDPlJA" name="If_22_merge" outgoing="_KKIaUoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKGlEYV5EemzzojpIDPlJA" name="If_23_cond" incoming="_KKGlE4V5EemzzojpIDPlJA" outgoing="_KKGlFYV5EemzzojpIDPlJA _KKGlGYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKGlEoV5EemzzojpIDPlJA" name="If_23_merge" incoming="_KKGlFYV5EemzzojpIDPlJA _KKIaR4V5EemzzojpIDPlJA" outgoing="_KKIaToV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKGlGIV5EemzzojpIDPlJA" name="Problem nextBranch=cur.branch;" incoming="_KKGlGYV5EemzzojpIDPlJA" outgoing="_KKHMIIV5EemzzojpIDPlJA" variable="_KKGlGoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKGlG4V5EemzzojpIDPlJA" name="cur.branch=new Problem();" incoming="_KKHMIIV5EemzzojpIDPlJA" outgoing="_KKHMIoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>cur.branch=new Problem();
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKHMIYV5EemzzojpIDPlJA" name="cur.branch.branch=nextBranch;" incoming="_KKHMIoV5EemzzojpIDPlJA" outgoing="_KKHMJYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>cur.branch.branch=nextBranch;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKHMI4V5EemzzojpIDPlJA" name="cur.branch.setC(cur.getC());" incoming="_KKHMJYV5EemzzojpIDPlJA" outgoing="_KKHMKIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKHMJIV5EemzzojpIDPlJA" name="cur.getC()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKHMJoV5EemzzojpIDPlJA" name="cur.branch.setP(cur.getP());" incoming="_KKHMKIV5EemzzojpIDPlJA" outgoing="_KKHMK4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKHMJ4V5EemzzojpIDPlJA" name="cur.getP()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKHMKYV5EemzzojpIDPlJA" name="cur.branch.setSigma(cur.getSigma());" incoming="_KKHMK4V5EemzzojpIDPlJA" outgoing="_KKHMLYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKHMKoV5EemzzojpIDPlJA" name="cur.getSigma()"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKHMLIV5EemzzojpIDPlJA" name="cur.branch.psi=cur.psi;" incoming="_KKHMLYV5EemzzojpIDPlJA" outgoing="_KKHzM4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>cur.branch.psi=cur.psi;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKHzMIV5EemzzojpIDPlJA" name="cur.psi.put(n1.getName(),new ArrayList&lt;Element>());" incoming="_KKHzM4V5EemzzojpIDPlJA" outgoing="_KKHzNoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKHzMYV5EemzzojpIDPlJA" name="n1.getName()"/>
          <argument xmi:id="_KKHzMoV5EemzzojpIDPlJA" name="new ArrayList&lt;Element>()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKHzNIV5EemzzojpIDPlJA" name="cur.psi.get(n1.getName()).add(cur.branch.psi.get(n1.getName()).get(0));" incoming="_KKHzNoV5EemzzojpIDPlJA" outgoing="_KKHzOYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKHzNYV5EemzzojpIDPlJA" name="cur.branch.psi.get(n1.getName()).get(0)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKHzN4V5EemzzojpIDPlJA" name="cur.branch.psi.get(n1.getName()).remove(0);" incoming="_KKHzOYV5EemzzojpIDPlJA" outgoing="_KKIaQIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKHzOIV5EemzzojpIDPlJA" name="0"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKHzOoV5EemzzojpIDPlJA" name="If_24_cond" incoming="_KKIaQIV5EemzzojpIDPlJA" outgoing="_KKIaQYV5EemzzojpIDPlJA _KKIaRYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKHzO4V5EemzzojpIDPlJA" name="If_24_merge" incoming="_KKIaQYV5EemzzojpIDPlJA _KKIaRoV5EemzzojpIDPlJA" outgoing="_KKIaR4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKIaRIV5EemzzojpIDPlJA" name="cur.branch=null;" incoming="_KKIaRYV5EemzzojpIDPlJA" outgoing="_KKIaRoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>cur.branch=null;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKIaSIV5EemzzojpIDPlJA" name="nfs(n2,new Function(n1.getName()),cur.psi,r,lambda);" incoming="_KKIaToV5EemzzojpIDPlJA" outgoing="_KKIaT4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKIaSYV5EemzzojpIDPlJA" name="n2"/>
          <argument xmi:id="_KKIaSoV5EemzzojpIDPlJA" name="new Function(n1.getName())"/>
          <argument xmi:id="_KKIaS4V5EemzzojpIDPlJA" name="cur.psi"/>
          <argument xmi:id="_KKIaTIV5EemzzojpIDPlJA" name="r"/>
          <argument xmi:id="_KKIaTYV5EemzzojpIDPlJA" name="lambda"/>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_KDrM8IV5EemzzojpIDPlJA" name="preUnification" visibility="public" isStatic="true" method="_KJ04QIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KDrM8YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDrM8oV5EemzzojpIDPlJA" key="documentation" value=" Performs the Pre-Unification Algorithm &#xD;&#xA; @param unif the Unification Problem&#xD;&#xA; @return {@code false}, if there is no unifier.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KDrM84V5EemzzojpIDPlJA" name="unif" type="_J6k7UIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KDrM9IV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KDyhsIV5EemzzojpIDPlJA" name="preUnification" visibility="public" isStatic="true" method="_KJ1fUIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KDyhsYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KDyhsoV5EemzzojpIDPlJA" key="documentation" value=" Performs the Pre-Unification Algorithm &#xD;&#xA; @param unif the Unification Problem&#xD;&#xA; @param steps PrintStream to keep track of the performed steps.&#xD;&#xA; @return {@code false}, if there is no unifier.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KDyhs4V5EemzzojpIDPlJA" name="unif" type="_J6k7UIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KDyhtIV5EemzzojpIDPlJA" name="steps" type="_KDu3UIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KDyhtYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KD3aMIV5EemzzojpIDPlJA" name="trivial" visibility="private" isStatic="true">
        <eAnnotations xmi:id="_KD3aMYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KD3aMoV5EemzzojpIDPlJA" key="documentation" value=" The rule (Tri)&#xD;&#xA; @param t The tuple to check.&#xD;&#xA; @return {@code boolean} true iff the rule can be applied.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KD3aM4V5EemzzojpIDPlJA" name="t" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KD3aNIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KD85wIV5EemzzojpIDPlJA" name="decomposition" visibility="private" isStatic="true">
        <eAnnotations xmi:id="_KD85wYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KD85woV5EemzzojpIDPlJA" key="documentation" value=" The rule (Dec)&#xD;&#xA; @param t The tuple of functions to decompose.&#xD;&#xA; @return The new Unification subproblems to add and a new constraint.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KD85w4V5EemzzojpIDPlJA" name="t" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KD85xIV5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KEGDsIV5EemzzojpIDPlJA" name="varElim" visibility="private" isStatic="true">
        <eAnnotations xmi:id="_KEGDsYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KEGDsoV5EemzzojpIDPlJA" key="documentation" value=" The Rule (Var.Elim.)&#xD;&#xA; @param t The tuple of Variable and Term to rename.&#xD;&#xA; @param problem the unification Problem.&#xD;&#xA; @return The renamed variable and term.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KEGDs4V5EemzzojpIDPlJA" name="t" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEGDtIV5EemzzojpIDPlJA" name="problem" type="_J6jtM4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEGDtYV5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KERC0IV5EemzzojpIDPlJA" name="tryReplace" visibility="private" isStatic="true" method="_KJ-CN4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KERC0YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KERC0oV5EemzzojpIDPlJA" key="documentation" value=" Helper Function makes the checks for replacement and provides a copy.&#xD;&#xA; @param e The Element (Variable) to replace.&#xD;&#xA; @param x The Match.&#xD;&#xA; @param tprime the term to replace with.&#xD;&#xA; @return the replacement/original term.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KERC04V5EemzzojpIDPlJA" name="e" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KERC1IV5EemzzojpIDPlJA" name="x" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KERC1YV5EemzzojpIDPlJA" name="tprime" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KERC1oV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KEUtMIV5EemzzojpIDPlJA" name="orient" visibility="private" isStatic="true">
        <eAnnotations xmi:id="_KEUtMYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KEUtMoV5EemzzojpIDPlJA" key="documentation" value=" The rule (Ori)&#xD;&#xA; @param t The tuple to orient.&#xD;&#xA; @return oriented tuple, where the Variable is the first element,&#xD;&#xA;  and the other term is the second.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KEUtM4V5EemzzojpIDPlJA" name="t" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEUtNIV5EemzzojpIDPlJA" type="_J6jGI4V5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KEZlsIV5EemzzojpIDPlJA" name="clash" visibility="private" isStatic="true">
        <eAnnotations xmi:id="_KEZlsYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KEZlsoV5EemzzojpIDPlJA" key="documentation" value=" The rule (Cla)&#xD;&#xA; @param t The tuple of functions to check.&#xD;&#xA; @return {@code boolean} true iff the aritys do not match.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KEZls4V5EemzzojpIDPlJA" name="t" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEZltIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KEd3IIV5EemzzojpIDPlJA" name="occurs" visibility="private" isStatic="true">
        <eAnnotations xmi:id="_KEd3IYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KEd3IoV5EemzzojpIDPlJA" key="documentation" value=" The rule (Occ)&#xD;&#xA; @param t The tuple to check.&#xD;&#xA; @return {@code boolean} true iff the first occurs in the second.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KEd3I4V5EemzzojpIDPlJA" name="t" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEd3JIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KEj9wIV5EemzzojpIDPlJA" name="varsOnly" visibility="private" isStatic="true">
        <eAnnotations xmi:id="_KEj9wYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KEj9woV5EemzzojpIDPlJA" key="documentation" value=" The rule (VO)&#xD;&#xA; @param var the tuple to unify.&#xD;&#xA; @param problem the unification problem.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KEj9w4V5EemzzojpIDPlJA" name="var" type="_J6jGI4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEj9xIV5EemzzojpIDPlJA" name="problem" type="_J6jtM4V5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KEo2QIV5EemzzojpIDPlJA" name="constraintSimplification" visibility="public" isStatic="true" method="_KJ-pSIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KEo2QYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KEo2QoV5EemzzojpIDPlJA" key="documentation" value=" The constraint simplification algorithm transforms constraint configurations, &#xD;&#xA; exhaustively appling special rules.&#xD;&#xA; @param prob The problem to solve.&#xD;&#xA; @param proxR This is the proximity relation matrix.&#xD;&#xA; @return True, if the constraints can be simplified and otherwise false.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KEo2Q4V5EemzzojpIDPlJA" name="prob" type="_J6liYIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEo2RIV5EemzzojpIDPlJA" name="proxR" type="_J6jtMIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEo2RYV5EemzzojpIDPlJA" name="lambda">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KEo2RoV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KEvj8IV5EemzzojpIDPlJA" name="ffs" visibility="private" isStatic="true" method="_KKFW8oV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KEvj8YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KEvj8oV5EemzzojpIDPlJA" key="documentation" value=" This method describes the rule (FFS).&#xD;&#xA; @param f1 function 1&#xD;&#xA; @param f2 function 2&#xD;&#xA; @param r Relation matrix&#xD;&#xA; @param lambda lower bound of relations&#xD;&#xA; @return  true if method worked successful, false otherwise.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KEvj84V5EemzzojpIDPlJA" name="f1" type="_J6ifEIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEvj9IV5EemzzojpIDPlJA" name="f2" type="_J6ifEIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEvj9YV5EemzzojpIDPlJA" name="r" type="_J6jtMIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KEvj9oV5EemzzojpIDPlJA" name="lambda">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KEvj94V5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KE7xMIV5EemzzojpIDPlJA" name="nfs" visibility="private" isStatic="true">
        <eAnnotations xmi:id="_KE7xMYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KE7xMoV5EemzzojpIDPlJA" key="documentation" value=" This method describes the rule (NFS).&#xD;&#xA; @param n1 name 1&#xD;&#xA; @param f2 function 2&#xD;&#xA; @param psi name class mapping&#xD;&#xA; @param r relation matrix&#xD;&#xA; @return  true if method worked successful, false otherwise.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KE7xM4V5EemzzojpIDPlJA" name="n1" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KE7xNIV5EemzzojpIDPlJA" name="f2" type="_J6ifEIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KE7xNYV5EemzzojpIDPlJA" name="psi" type="_J_DLo4V5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KE7xNoV5EemzzojpIDPlJA" name="r" type="_J6jtMIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KE7xN4V5EemzzojpIDPlJA" name="lambda">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KE7xOIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KFIlgIV5EemzzojpIDPlJA" name="nn1" visibility="private" isStatic="true" method="_KKF-BoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFIlgYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFIlgoV5EemzzojpIDPlJA" key="documentation" value=" This method describes the rule (NN1).&#xD;&#xA; @param n1 name 1&#xD;&#xA; @param n2 name 2&#xD;&#xA; @param cur current problem&#xD;&#xA; @param r relation matrix&#xD;&#xA; @param lambda lambda of the relation&#xD;&#xA; @return  true if method worked successful, false otherwise.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KFIlg4V5EemzzojpIDPlJA" name="n1" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KFIlhIV5EemzzojpIDPlJA" name="n2" type="_J6hQ8YV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KFIlhYV5EemzzojpIDPlJA" name="cur" type="_J6liYIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KFIlhoV5EemzzojpIDPlJA" name="r" type="_J6jtMIV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KFIlh4V5EemzzojpIDPlJA" name="lambda">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KFIliIV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KFOsIIV5EemzzojpIDPlJA" name="intersection" visibility="private" isStatic="true">
        <eAnnotations xmi:id="_KFOsIYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFOsIoV5EemzzojpIDPlJA" key="documentation" value=" Generates the intersection of two lists.&#xD;&#xA; @param list1 the first list.&#xD;&#xA; @param list2 the second list.&#xD;&#xA; @return the intersection list of list1 and list2.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KFOsI4V5EemzzojpIDPlJA" name="list1" type="_J97KQYV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KFOsJIV5EemzzojpIDPlJA" name="list2" type="_J97KQYV5EemzzojpIDPlJA"/>
        <ownedParameter xmi:id="_KFOsJYV5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6mJc4V5EemzzojpIDPlJA" name="InputParser" visibility="public">
      <eAnnotations xmi:id="_J6mJdIV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6mJdYV5EemzzojpIDPlJA" key="documentation" value="&#xD;&#xA; The class InputParser handles the input.&#xD;&#xA; [a - t] are function symbols and u is the fist variable. &#xD;&#xA; This means that constants are function symbols with arity zero and [u - z] are variables.&#xD;&#xA; Names are witten in UPPER case letters.&#xD;&#xA; @author  Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 3.0&#xD;&#xA; &#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_KFP6QIV5EemzzojpIDPlJA" importedElement="_J97KQYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KFP6QYV5EemzzojpIDPlJA" importedElement="_J_DLoYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KFP6Q4V5EemzzojpIDPlJA" importedElement="_KFP6QoV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KFP6RYV5EemzzojpIDPlJA" importedElement="_J6jGI4V5EemzzojpIDPlJA" visibility="private"/>
      <packageImport xmi:id="_KFP6RIV5EemzzojpIDPlJA" importedPackage="_J6hQ8IV5EemzzojpIDPlJA" visibility="private"/>
      <ownedAttribute xmi:id="_KFQhUIV5EemzzojpIDPlJA" name="FIRST_VARIABLE" visibility="private" isLeaf="true" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_KFQhUYV5EemzzojpIDPlJA" name="" value="'u'">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_KFSWgIV5EemzzojpIDPlJA" name="listOfFunctions" visibility="private" isStatic="true" type="_J6ifEIV5EemzzojpIDPlJA" isOrdered="true" isUnique="false" association="_KFt0UoV5EemzzojpIDPlJA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KFSWgYV5EemzzojpIDPlJA" value="*"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKNSwIV5EemzzojpIDPlJA" name="parse" specification="_KFTkoIV5EemzzojpIDPlJA" node="_KKN50IV5EemzzojpIDPlJA _KKN50YV5EemzzojpIDPlJA _KKN50oV5EemzzojpIDPlJA _KKN504V5EemzzojpIDPlJA _KKN51IV5EemzzojpIDPlJA _KKN51oV5EemzzojpIDPlJA _KKN52YV5EemzzojpIDPlJA _KKOg4IV5EemzzojpIDPlJA _KKOg44V5EemzzojpIDPlJA _KKOg5YV5EemzzojpIDPlJA _KKOg6IV5EemzzojpIDPlJA _KKOg64V5EemzzojpIDPlJA _KKOg7IV5EemzzojpIDPlJA _KKOg7oV5EemzzojpIDPlJA _KKPH9IV5EemzzojpIDPlJA _KKPH-IV5EemzzojpIDPlJA _KKPH_IV5EemzzojpIDPlJA _KKPvAoV5EemzzojpIDPlJA _KKPvBoV5EemzzojpIDPlJA _KKQWE4V5EemzzojpIDPlJA _KKQWFYV5EemzzojpIDPlJA _KKQWGIV5EemzzojpIDPlJA _KKQWG4V5EemzzojpIDPlJA _KKQWHIV5EemzzojpIDPlJA _KKQ9IYV5EemzzojpIDPlJA _KKQ9JIV5EemzzojpIDPlJA _KKQ9J4V5EemzzojpIDPlJA _KKQ9K4V5EemzzojpIDPlJA _KKQ9LIV5EemzzojpIDPlJA _KKQ9LoV5EemzzojpIDPlJA _KKQ9MYV5EemzzojpIDPlJA _KKRkMIV5EemzzojpIDPlJA _KKRkNIV5EemzzojpIDPlJA _KKRkNYV5EemzzojpIDPlJA _KKRkN4V5EemzzojpIDPlJA _KKRkQIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKN51YV5EemzzojpIDPlJA" name="InitNode_Element.reset();" target="_KKN51IV5EemzzojpIDPlJA" source="_KKN50oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKN514V5EemzzojpIDPlJA" name="Element.reset();_ArrayList&lt;UnificationProblem> ret=new Array" target="_KKN51oV5EemzzojpIDPlJA" source="_KKN51IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKN52oV5EemzzojpIDPlJA" name="ArrayList&lt;UnificationProblem> _int split;" target="_KKN52YV5EemzzojpIDPlJA" source="_KKN51oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKOg4YV5EemzzojpIDPlJA" name="int split;_UnificationProblem unif;" target="_KKOg4IV5EemzzojpIDPlJA" source="_KKN52YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKOg5IV5EemzzojpIDPlJA" name="UnificationProblem unif;_listOfFunctions=new ArrayList&lt;Funct" target="_KKOg44V5EemzzojpIDPlJA" source="_KKOg4IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKOg5oV5EemzzojpIDPlJA" name="listOfFunctions=new ArrayList&lt;_Element left=null;" target="_KKOg5YV5EemzzojpIDPlJA" source="_KKOg44V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKOg6YV5EemzzojpIDPlJA" name="Element left=null;_Element right=null;" target="_KKOg6IV5EemzzojpIDPlJA" source="_KKOg5YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKOg7YV5EemzzojpIDPlJA" name="Element right=null;_If_0_cond" target="_KKOg64V5EemzzojpIDPlJA" source="_KKOg6IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKPH8oV5EemzzojpIDPlJA" name="If_0_cond_split=s.indexOf(&quot;=?&quot;);" target="_KKOg7oV5EemzzojpIDPlJA" source="_KKOg64V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKPH84V5EemzzojpIDPlJA" value="s.contains(&quot;=?&quot;)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKPH94V5EemzzojpIDPlJA" name="split=s.indexOf(&quot;=?&quot;);_left=parseSub(s.substring(0,split - 1" target="_KKPH9IV5EemzzojpIDPlJA" source="_KKOg7oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKPH-4V5EemzzojpIDPlJA" name="left=parseSub(s.substring(0,sp_right=parseSub(s.substring(sp" target="_KKPH-IV5EemzzojpIDPlJA" source="_KKPH9IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKPvAIV5EemzzojpIDPlJA" name="If_0_cond_split=s.indexOf(&quot;=&quot;);" target="_KKPH_IV5EemzzojpIDPlJA" source="_KKOg64V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKPvAYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKPvBYV5EemzzojpIDPlJA" name="split=s.indexOf(&quot;=&quot;);_left=parseSub(s.substring(0,split - 1)" target="_KKPvAoV5EemzzojpIDPlJA" source="_KKPH_IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQWEIV5EemzzojpIDPlJA" name="left=parseSub(s.substring(0,sp_right=parseSub(s.substring(sp" target="_KKPvBoV5EemzzojpIDPlJA" source="_KKPvAoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQWEYV5EemzzojpIDPlJA" name="thenPathTo_If_0_merge" target="_KKOg7IV5EemzzojpIDPlJA" source="_KKPH-IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQWEoV5EemzzojpIDPlJA" name="right=parseSub(s.substring(spl_If_0_merge" target="_KKOg7IV5EemzzojpIDPlJA" source="_KKPvBoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQWFIV5EemzzojpIDPlJA" name="If_0_merge_unif=new UnificationProblem(left,right);" target="_KKQWE4V5EemzzojpIDPlJA" source="_KKOg7IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQWF4V5EemzzojpIDPlJA" name="unif=new UnificationProblem(le_sort(listOfFunctions);" target="_KKQWFYV5EemzzojpIDPlJA" source="_KKQWE4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQWGoV5EemzzojpIDPlJA" name="sort(listOfFunctions);_unif.setSortedListOfFunctions(listOfF" target="_KKQWGIV5EemzzojpIDPlJA" source="_KKQWFYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQ9IoV5EemzzojpIDPlJA" name="int i=0_merge" target="_KKQWG4V5EemzzojpIDPlJA" source="_KKQ9IYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQ9I4V5EemzzojpIDPlJA" name="For_0_merge_cond" target="_KKQWHIV5EemzzojpIDPlJA" source="_KKQWG4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQ9JYV5EemzzojpIDPlJA" name="For_0_cond_merge" target="_KKQWG4V5EemzzojpIDPlJA" source="_KKQ9JIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQ9JoV5EemzzojpIDPlJA" name="unif.setSortedListOfFunctions(_int i=0" target="_KKQ9IYV5EemzzojpIDPlJA" source="_KKQWGIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQ9KIV5EemzzojpIDPlJA" name="For_0_cond_Function f1=listOfFunctions.get(i);" target="_KKQ9J4V5EemzzojpIDPlJA" source="_KKQWHIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKQ9KYV5EemzzojpIDPlJA" value="i &lt; listOfFunctions.size() - 1"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQ9L4V5EemzzojpIDPlJA" name="int j=i + 1_merge" target="_KKQ9K4V5EemzzojpIDPlJA" source="_KKQ9LoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQ9MIV5EemzzojpIDPlJA" name="For_1_merge_cond" target="_KKQ9LIV5EemzzojpIDPlJA" source="_KKQ9K4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQ9MoV5EemzzojpIDPlJA" name="For_1_cond_merge" target="_KKQ9K4V5EemzzojpIDPlJA" source="_KKQ9MYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKQ9M4V5EemzzojpIDPlJA" name="Function f1=listOfFunctions.ge_int j=i + 1" target="_KKQ9LoV5EemzzojpIDPlJA" source="_KKQ9J4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKRkMYV5EemzzojpIDPlJA" name="For_1_cond_Function f2=listOfFunctions.get(j);" target="_KKRkMIV5EemzzojpIDPlJA" source="_KKQ9LIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKRkMoV5EemzzojpIDPlJA" value="j &lt; listOfFunctions.size()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKRkNoV5EemzzojpIDPlJA" name="Function f2=listOfFunctions.ge_If_1_cond" target="_KKRkNIV5EemzzojpIDPlJA" source="_KKRkMIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKRkOYV5EemzzojpIDPlJA" name="If_1_cond_unif.addOpenCase(new Tuple&lt;Function>(f1,f2));" target="_KKRkN4V5EemzzojpIDPlJA" source="_KKRkNIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKRkOoV5EemzzojpIDPlJA" value="f1.arity() == f2.arity()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKRkO4V5EemzzojpIDPlJA" name="thenPathTo_If_1_merge" target="_KKRkNYV5EemzzojpIDPlJA" source="_KKRkN4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKRkPIV5EemzzojpIDPlJA" name="unif.addOpenCase(new Tuple&lt;Fun_If_1_merge" target="_KKRkNYV5EemzzojpIDPlJA" source="_KKRkN4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKRkPYV5EemzzojpIDPlJA" name="If_1_merge_j++" target="_KKQ9MYV5EemzzojpIDPlJA" source="_KKRkNYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKRkPoV5EemzzojpIDPlJA" name="For_1_cond_i++" target="_KKQ9JIV5EemzzojpIDPlJA" source="_KKQ9LIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKRkP4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKRkQoV5EemzzojpIDPlJA" name="For_0_cond_ret.add(unif);" target="_KKRkQIV5EemzzojpIDPlJA" source="_KKQWHIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKSLQIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSLQYV5EemzzojpIDPlJA" name="ret.add(unif);_FinalNode" target="_KKN504V5EemzzojpIDPlJA" source="_KKRkQIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKN52IV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKN524V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKOg4oV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKOg54V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKOg6oV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKQ9IIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKQ9KoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKQ9LYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKRkM4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKN50IV5EemzzojpIDPlJA" name="input" parameter="_KFTko4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKN50YV5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" parameter="_KFTkpIV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KKN50oV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKN51YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKN504V5EemzzojpIDPlJA" name="FinalNode" incoming="_KKSLQYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKN51IV5EemzzojpIDPlJA" name="Element.reset();" incoming="_KKN51YV5EemzzojpIDPlJA" outgoing="_KKN514V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKN51oV5EemzzojpIDPlJA" name="ArrayList&lt;UnificationProblem> ret=new ArrayList&lt;>();" incoming="_KKN514V5EemzzojpIDPlJA" outgoing="_KKN52oV5EemzzojpIDPlJA" variable="_KKN52IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKN52YV5EemzzojpIDPlJA" name="int split;" incoming="_KKN52oV5EemzzojpIDPlJA" outgoing="_KKOg4YV5EemzzojpIDPlJA" variable="_KKN524V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKOg4IV5EemzzojpIDPlJA" name="UnificationProblem unif;" incoming="_KKOg4YV5EemzzojpIDPlJA" outgoing="_KKOg5IV5EemzzojpIDPlJA" variable="_KKOg4oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKOg44V5EemzzojpIDPlJA" name="listOfFunctions=new ArrayList&lt;Function>();" incoming="_KKOg5IV5EemzzojpIDPlJA" outgoing="_KKOg5oV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>listOfFunctions=new ArrayList&lt;Function>();
</body>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKOg5YV5EemzzojpIDPlJA" name="Element left=null;" incoming="_KKOg5oV5EemzzojpIDPlJA" outgoing="_KKOg6YV5EemzzojpIDPlJA" variable="_KKOg54V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKOg6IV5EemzzojpIDPlJA" name="Element right=null;" incoming="_KKOg6YV5EemzzojpIDPlJA" outgoing="_KKOg7YV5EemzzojpIDPlJA" variable="_KKOg6oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKOg64V5EemzzojpIDPlJA" name="If_0_cond" incoming="_KKOg7YV5EemzzojpIDPlJA" outgoing="_KKPH8oV5EemzzojpIDPlJA _KKPvAIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKOg7IV5EemzzojpIDPlJA" name="If_0_merge" incoming="_KKQWEYV5EemzzojpIDPlJA _KKQWEoV5EemzzojpIDPlJA" outgoing="_KKQWFIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKOg7oV5EemzzojpIDPlJA" name="split=s.indexOf(&quot;=?&quot;);" incoming="_KKPH8oV5EemzzojpIDPlJA" outgoing="_KKPH94V5EemzzojpIDPlJA">
          <argument xmi:id="_KKPH8IV5EemzzojpIDPlJA" name="&quot;=?&quot;"/>
          <result xmi:id="_KKPH8YV5EemzzojpIDPlJA" name="split"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKPH9IV5EemzzojpIDPlJA" name="left=parseSub(s.substring(0,split - 1));" incoming="_KKPH94V5EemzzojpIDPlJA" outgoing="_KKPH-4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKPH9YV5EemzzojpIDPlJA" name="s.substring(0,split - 1)"/>
          <result xmi:id="_KKPH9oV5EemzzojpIDPlJA" name="left"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKPH-IV5EemzzojpIDPlJA" name="right=parseSub(s.substring(split + 2));" incoming="_KKPH-4V5EemzzojpIDPlJA" outgoing="_KKQWEYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKPH-YV5EemzzojpIDPlJA" name="s.substring(split + 2)"/>
          <result xmi:id="_KKPH-oV5EemzzojpIDPlJA" name="right"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKPH_IV5EemzzojpIDPlJA" name="split=s.indexOf(&quot;=&quot;);" incoming="_KKPvAIV5EemzzojpIDPlJA" outgoing="_KKPvBYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKPH_YV5EemzzojpIDPlJA" name="&quot;=&quot;"/>
          <result xmi:id="_KKPH_oV5EemzzojpIDPlJA" name="split"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKPvAoV5EemzzojpIDPlJA" name="left=parseSub(s.substring(0,split - 1));" incoming="_KKPvBYV5EemzzojpIDPlJA" outgoing="_KKQWEIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKPvA4V5EemzzojpIDPlJA" name="s.substring(0,split - 1)"/>
          <result xmi:id="_KKPvBIV5EemzzojpIDPlJA" name="left"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKPvBoV5EemzzojpIDPlJA" name="right=parseSub(s.substring(split + 1));" incoming="_KKQWEIV5EemzzojpIDPlJA" outgoing="_KKQWEoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKPvB4V5EemzzojpIDPlJA" name="s.substring(split + 1)"/>
          <result xmi:id="_KKPvCIV5EemzzojpIDPlJA" name="right"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKQWE4V5EemzzojpIDPlJA" name="unif=new UnificationProblem(left,right);" incoming="_KKQWFIV5EemzzojpIDPlJA" outgoing="_KKQWF4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>unif=new UnificationProblem(left,right);
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKQWFYV5EemzzojpIDPlJA" name="sort(listOfFunctions);" incoming="_KKQWF4V5EemzzojpIDPlJA" outgoing="_KKQWGoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKQWFoV5EemzzojpIDPlJA" name="listOfFunctions"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKQWGIV5EemzzojpIDPlJA" name="unif.setSortedListOfFunctions(listOfFunctions);" incoming="_KKQWGoV5EemzzojpIDPlJA" outgoing="_KKQ9JoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKQWGYV5EemzzojpIDPlJA" name="listOfFunctions"/>
        </node>
        <node xmi:type="uml:MergeNode" xmi:id="_KKQWG4V5EemzzojpIDPlJA" name="For_0_merge" incoming="_KKQ9IoV5EemzzojpIDPlJA _KKQ9JYV5EemzzojpIDPlJA" outgoing="_KKQ9I4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKQWHIV5EemzzojpIDPlJA" name="For_0_cond" incoming="_KKQ9I4V5EemzzojpIDPlJA" outgoing="_KKQ9KIV5EemzzojpIDPlJA _KKRkQoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKQ9IYV5EemzzojpIDPlJA" name="int i=0" incoming="_KKQ9JoV5EemzzojpIDPlJA" outgoing="_KKQ9IoV5EemzzojpIDPlJA" variable="_KKQ9IIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKQ9JIV5EemzzojpIDPlJA" name="i++" incoming="_KKRkPoV5EemzzojpIDPlJA" outgoing="_KKQ9JYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKQ9J4V5EemzzojpIDPlJA" name="Function f1=listOfFunctions.get(i);" incoming="_KKQ9KIV5EemzzojpIDPlJA" outgoing="_KKQ9M4V5EemzzojpIDPlJA" variable="_KKQ9KoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKQ9K4V5EemzzojpIDPlJA" name="For_1_merge" incoming="_KKQ9L4V5EemzzojpIDPlJA _KKQ9MoV5EemzzojpIDPlJA" outgoing="_KKQ9MIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKQ9LIV5EemzzojpIDPlJA" name="For_1_cond" incoming="_KKQ9MIV5EemzzojpIDPlJA" outgoing="_KKRkMYV5EemzzojpIDPlJA _KKRkPoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKQ9LoV5EemzzojpIDPlJA" name="int j=i + 1" incoming="_KKQ9M4V5EemzzojpIDPlJA" outgoing="_KKQ9L4V5EemzzojpIDPlJA" variable="_KKQ9LYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKQ9MYV5EemzzojpIDPlJA" name="j++" incoming="_KKRkPYV5EemzzojpIDPlJA" outgoing="_KKQ9MoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKRkMIV5EemzzojpIDPlJA" name="Function f2=listOfFunctions.get(j);" incoming="_KKRkMYV5EemzzojpIDPlJA" outgoing="_KKRkNoV5EemzzojpIDPlJA" variable="_KKRkM4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKRkNIV5EemzzojpIDPlJA" name="If_1_cond" incoming="_KKRkNoV5EemzzojpIDPlJA" outgoing="_KKRkOYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKRkNYV5EemzzojpIDPlJA" name="If_1_merge" incoming="_KKRkO4V5EemzzojpIDPlJA _KKRkPIV5EemzzojpIDPlJA" outgoing="_KKRkPYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKRkN4V5EemzzojpIDPlJA" name="unif.addOpenCase(new Tuple&lt;Function>(f1,f2));" incoming="_KKRkOYV5EemzzojpIDPlJA" outgoing="_KKRkO4V5EemzzojpIDPlJA _KKRkPIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKRkOIV5EemzzojpIDPlJA" name="new Tuple&lt;Function>(f1,f2)"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKRkQIV5EemzzojpIDPlJA" name="ret.add(unif);" incoming="_KKRkQoV5EemzzojpIDPlJA" outgoing="_KKSLQYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKRkQYV5EemzzojpIDPlJA" name="unif"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKSLQoV5EemzzojpIDPlJA" name="parseSub" specification="_KFXPAIV5EemzzojpIDPlJA" node="_KKSLQ4V5EemzzojpIDPlJA _KKSLRIV5EemzzojpIDPlJA _KKSLRYV5EemzzojpIDPlJA _KKSLRoV5EemzzojpIDPlJA _KKSLR4V5EemzzojpIDPlJA _KKSLSoV5EemzzojpIDPlJA _KKSLTYV5EemzzojpIDPlJA _KKSyUIV5EemzzojpIDPlJA _KKSyU4V5EemzzojpIDPlJA _KKSyVoV5EemzzojpIDPlJA _KKSyWIV5EemzzojpIDPlJA _KKSyWoV5EemzzojpIDPlJA _KKSyW4V5EemzzojpIDPlJA _KKSyXYV5EemzzojpIDPlJA _KKSyYIV5EemzzojpIDPlJA _KKSyY4V5EemzzojpIDPlJA _KKSyaIV5EemzzojpIDPlJA _KKTZYIV5EemzzojpIDPlJA _KKTZZYV5EemzzojpIDPlJA _KKTZaIV5EemzzojpIDPlJA _KKTZaYV5EemzzojpIDPlJA _KKTZa4V5EemzzojpIDPlJA _KKUAcoV5EemzzojpIDPlJA _KKUngYV5EemzzojpIDPlJA _KKVOkIV5EemzzojpIDPlJA _KKVOkYV5EemzzojpIDPlJA _KKVOk4V5EemzzojpIDPlJA _KKVOloV5EemzzojpIDPlJA _KKVOmYV5EemzzojpIDPlJA _KKVOmoV5EemzzojpIDPlJA _KKV1o4V5EemzzojpIDPlJA _KKV1p4V5EemzzojpIDPlJA _KKV1qIV5EemzzojpIDPlJA _KKWctYV5EemzzojpIDPlJA _KKWcuYV5EemzzojpIDPlJA _KKXDwIV5EemzzojpIDPlJA _KKXDwYV5EemzzojpIDPlJA _KKXDxIV5EemzzojpIDPlJA _KKXDxYV5EemzzojpIDPlJA _KKXDyIV5EemzzojpIDPlJA _KKXq0IV5EemzzojpIDPlJA _KKXq04V5EemzzojpIDPlJA _KKXq1YV5EemzzojpIDPlJA _KKXq2YV5EemzzojpIDPlJA _KKXq2oV5EemzzojpIDPlJA _KKXq3YV5EemzzojpIDPlJA _KKXq3oV5EemzzojpIDPlJA _KKYR4IV5EemzzojpIDPlJA _KKYR44V5EemzzojpIDPlJA _KKYR5oV5EemzzojpIDPlJA _KKYR6IV5EemzzojpIDPlJA _KKYR7IV5EemzzojpIDPlJA _KKYR7YV5EemzzojpIDPlJA _KKY48oV5EemzzojpIDPlJA _KKY484V5EemzzojpIDPlJA _KKY49oV5EemzzojpIDPlJA _KKY4-YV5EemzzojpIDPlJA _KKY4_IV5EemzzojpIDPlJA _KKY4_oV5EemzzojpIDPlJA _KKY5AoV5EemzzojpIDPlJA _KKaHFoV5EemzzojpIDPlJA _KKaHF4V5EemzzojpIDPlJA _KKauIIV5EemzzojpIDPlJA _KKauI4V5EemzzojpIDPlJA _KKauJIV5EemzzojpIDPlJA _KKauKYV5EemzzojpIDPlJA _KKbVMIV5EemzzojpIDPlJA _KKbVMYV5EemzzojpIDPlJA _KKbVM4V5EemzzojpIDPlJA _KKbVNoV5EemzzojpIDPlJA _KKbVOYV5EemzzojpIDPlJA _KKbVOoV5EemzzojpIDPlJA _KKbVQIV5EemzzojpIDPlJA _KKb8QoV5EemzzojpIDPlJA _KKb8Q4V5EemzzojpIDPlJA _KKb8SYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSLSIV5EemzzojpIDPlJA" name="InitNode_String name;" target="_KKSLR4V5EemzzojpIDPlJA" source="_KKSLRYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSLS4V5EemzzojpIDPlJA" name="String name;_boolean inName;" target="_KKSLSoV5EemzzojpIDPlJA" source="_KKSLR4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSLToV5EemzzojpIDPlJA" name="boolean inName;_char c;" target="_KKSLTYV5EemzzojpIDPlJA" source="_KKSLSoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSyUYV5EemzzojpIDPlJA" name="char c;_Element elem=null;" target="_KKSyUIV5EemzzojpIDPlJA" source="_KKSLTYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSyVIV5EemzzojpIDPlJA" name="Element elem=null;_int closing;" target="_KKSyU4V5EemzzojpIDPlJA" source="_KKSyUIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSyV4V5EemzzojpIDPlJA" name="int closing;_name=&quot;&quot;;" target="_KKSyVoV5EemzzojpIDPlJA" source="_KKSyU4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSyWYV5EemzzojpIDPlJA" name="name=&quot;&quot;;_inName=false;" target="_KKSyWIV5EemzzojpIDPlJA" source="_KKSyVoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSyXoV5EemzzojpIDPlJA" name="int pos=0_merge" target="_KKSyWoV5EemzzojpIDPlJA" source="_KKSyXYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSyX4V5EemzzojpIDPlJA" name="For_2_merge_cond" target="_KKSyW4V5EemzzojpIDPlJA" source="_KKSyWoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSyYYV5EemzzojpIDPlJA" name="For_2_cond_merge" target="_KKSyWoV5EemzzojpIDPlJA" source="_KKSyYIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSyYoV5EemzzojpIDPlJA" name="inName=false;_int pos=0" target="_KKSyXYV5EemzzojpIDPlJA" source="_KKSyWIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKSyZoV5EemzzojpIDPlJA" name="For_2_cond_c=input.charAt(pos);" target="_KKSyY4V5EemzzojpIDPlJA" source="_KKSyW4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKSyZ4V5EemzzojpIDPlJA" value="pos &lt; input.length()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKTZYYV5EemzzojpIDPlJA" name="c=input.charAt(pos);_If_2_cond" target="_KKSyaIV5EemzzojpIDPlJA" source="_KKSyY4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKTZYoV5EemzzojpIDPlJA" name="If_2_else" target="_KKTZYIV5EemzzojpIDPlJA" source="_KKSyaIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKTZZIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKTZZoV5EemzzojpIDPlJA" name="If_2_cond_continue;" target="_KKTZZYV5EemzzojpIDPlJA" source="_KKSyaIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKTZY4V5EemzzojpIDPlJA" value="c == ' ' &amp;&amp; !inName"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKTZZ4V5EemzzojpIDPlJA" name="continue;_If_2_merge" target="_KKTZYIV5EemzzojpIDPlJA" source="_KKTZZYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKTZaoV5EemzzojpIDPlJA" name="If_2_merge_If_3_cond" target="_KKTZaIV5EemzzojpIDPlJA" source="_KKTZYIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKUAcIV5EemzzojpIDPlJA" name="If_3_cond_closing=getIndexOfCorrespondingBracket(input,pos);" target="_KKTZa4V5EemzzojpIDPlJA" source="_KKTZaIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKUAcYV5EemzzojpIDPlJA" value="c == '('"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKUngIV5EemzzojpIDPlJA" name="closing=getIndexOfCorrespondin_elem=new Function(name);" target="_KKUAcoV5EemzzojpIDPlJA" source="_KKTZa4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKUngoV5EemzzojpIDPlJA" name="elem=new Function(name);_boolean alreadyIn=false;" target="_KKUngYV5EemzzojpIDPlJA" source="_KKUAcoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKVOlIV5EemzzojpIDPlJA" name="int i=0_merge" target="_KKVOkIV5EemzzojpIDPlJA" source="_KKVOk4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKVOlYV5EemzzojpIDPlJA" name="For_3_merge_cond" target="_KKVOkYV5EemzzojpIDPlJA" source="_KKVOkIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKVOl4V5EemzzojpIDPlJA" name="For_3_cond_merge" target="_KKVOkIV5EemzzojpIDPlJA" source="_KKVOloV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKVOmIV5EemzzojpIDPlJA" name="boolean alreadyIn=false;_int i=0" target="_KKVOk4V5EemzzojpIDPlJA" source="_KKUngYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKVOm4V5EemzzojpIDPlJA" name="For_3_cond_If_4_cond" target="_KKVOmYV5EemzzojpIDPlJA" source="_KKVOkYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKVOnIV5EemzzojpIDPlJA" value="i &lt; listOfFunctions.size()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKV1oIV5EemzzojpIDPlJA" name="If_4_else" target="_KKVOmoV5EemzzojpIDPlJA" source="_KKVOmYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKV1ooV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKV1pIV5EemzzojpIDPlJA" name="If_4_cond_alreadyIn=true;" target="_KKV1o4V5EemzzojpIDPlJA" source="_KKVOmYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKV1oYV5EemzzojpIDPlJA" value="elem.equals(listOfFunctions.get(i))"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKV1pYV5EemzzojpIDPlJA" name="alreadyIn=true;_If_4_merge" target="_KKVOmoV5EemzzojpIDPlJA" source="_KKV1o4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKV1poV5EemzzojpIDPlJA" name="If_4_merge_i++" target="_KKVOloV5EemzzojpIDPlJA" source="_KKVOmoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKWcsIV5EemzzojpIDPlJA" name="For_3_cond_If_5_cond" target="_KKV1p4V5EemzzojpIDPlJA" source="_KKVOkYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKWcsYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKWcsoV5EemzzojpIDPlJA" name="If_5_else" target="_KKV1qIV5EemzzojpIDPlJA" source="_KKV1p4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKWctIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKWct4V5EemzzojpIDPlJA" name="If_5_cond_listOfFunctions.add((Function)elem);" target="_KKWctYV5EemzzojpIDPlJA" source="_KKV1p4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKWcs4V5EemzzojpIDPlJA" value="!alreadyIn"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKWcuIV5EemzzojpIDPlJA" name="listOfFunctions.add((Function)_If_5_merge" target="_KKV1qIV5EemzzojpIDPlJA" source="_KKWctYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKWcu4V5EemzzojpIDPlJA" name="If_5_merge_((Function)elem).addArgument((parseSub(s)));" target="_KKWcuYV5EemzzojpIDPlJA" source="_KKV1qIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKXDwoV5EemzzojpIDPlJA" name="If_3_cond_If_6_cond" target="_KKXDwIV5EemzzojpIDPlJA" source="_KKTZaIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKXDw4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKXDxoV5EemzzojpIDPlJA" name="If_6_cond_If_7_cond" target="_KKXDxIV5EemzzojpIDPlJA" source="_KKXDwIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKXDx4V5EemzzojpIDPlJA" value="c &lt; FIRST_VARIABLE"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKXDyYV5EemzzojpIDPlJA" name="If_7_cond_name+=c;" target="_KKXDyIV5EemzzojpIDPlJA" source="_KKXDxIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKXDyoV5EemzzojpIDPlJA" value="inName"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKXq0YV5EemzzojpIDPlJA" name="If_7_cond_inName=true;" target="_KKXq0IV5EemzzojpIDPlJA" source="_KKXDxIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKXq0oV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKXq1IV5EemzzojpIDPlJA" name="inName=true;_name+=c;" target="_KKXq04V5EemzzojpIDPlJA" source="_KKXq0IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKXq1oV5EemzzojpIDPlJA" name="name+=c;_elem=new Constant(&quot;&quot;);" target="_KKXq1YV5EemzzojpIDPlJA" source="_KKXq04V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKXq14V5EemzzojpIDPlJA" name="thenPathTo_If_7_merge" target="_KKXDxYV5EemzzojpIDPlJA" source="_KKXDyIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKXq2IV5EemzzojpIDPlJA" name="elem=new Constant(&quot;&quot;);_If_7_merge" target="_KKXDxYV5EemzzojpIDPlJA" source="_KKXq1YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKXq24V5EemzzojpIDPlJA" name="If_6_cond_If_8_cond" target="_KKXq2YV5EemzzojpIDPlJA" source="_KKXDwIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKXq3IV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKXq34V5EemzzojpIDPlJA" name="If_8_cond_If_9_cond" target="_KKXq3YV5EemzzojpIDPlJA" source="_KKXq2YV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKXq4IV5EemzzojpIDPlJA" value="c &lt;= 'z'"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKYR4YV5EemzzojpIDPlJA" name="If_9_cond_name+=c;" target="_KKYR4IV5EemzzojpIDPlJA" source="_KKXq3YV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKYR4oV5EemzzojpIDPlJA" value="inName"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKYR5IV5EemzzojpIDPlJA" name="If_9_cond_inName=true;" target="_KKYR44V5EemzzojpIDPlJA" source="_KKXq3YV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKYR5YV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKYR54V5EemzzojpIDPlJA" name="inName=true;_name+=c;" target="_KKYR5oV5EemzzojpIDPlJA" source="_KKYR44V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKYR6YV5EemzzojpIDPlJA" name="name+=c;_elem=new Variable();" target="_KKYR6IV5EemzzojpIDPlJA" source="_KKYR5oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKYR6oV5EemzzojpIDPlJA" name="thenPathTo_If_9_merge" target="_KKXq3oV5EemzzojpIDPlJA" source="_KKYR4IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKYR64V5EemzzojpIDPlJA" name="elem=new Variable();_If_9_merge" target="_KKXq3oV5EemzzojpIDPlJA" source="_KKYR6IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKY48IV5EemzzojpIDPlJA" name="If_8_cond_If_10_cond" target="_KKYR7IV5EemzzojpIDPlJA" source="_KKXq2YV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKY48YV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKY49IV5EemzzojpIDPlJA" name="If_10_cond_If_11_cond" target="_KKY48oV5EemzzojpIDPlJA" source="_KKYR7IV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKY49YV5EemzzojpIDPlJA" value="Character.isUpperCase(c)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKY494V5EemzzojpIDPlJA" name="If_11_cond_name+=c;" target="_KKY49oV5EemzzojpIDPlJA" source="_KKY48oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKY4-IV5EemzzojpIDPlJA" value="inName"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKY4-oV5EemzzojpIDPlJA" name="If_11_cond_inName=true;" target="_KKY4-YV5EemzzojpIDPlJA" source="_KKY48oV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKY4-4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKY4_YV5EemzzojpIDPlJA" name="inName=true;_name+=c;" target="_KKY4_IV5EemzzojpIDPlJA" source="_KKY4-YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKY4_4V5EemzzojpIDPlJA" name="name+=c;_elem=new Function(name,true);" target="_KKY4_oV5EemzzojpIDPlJA" source="_KKY4_IV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKY5AIV5EemzzojpIDPlJA" name="thenPathTo_If_11_merge" target="_KKY484V5EemzzojpIDPlJA" source="_KKY49oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKY5AYV5EemzzojpIDPlJA" name="elem=new Function(name,true);_If_11_merge" target="_KKY484V5EemzzojpIDPlJA" source="_KKY4_oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKZgAYV5EemzzojpIDPlJA" name="If_10_cond_elem.setName(name);" target="_KKY5AoV5EemzzojpIDPlJA" source="_KKYR7IV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKZgAoV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKZgA4V5EemzzojpIDPlJA" name="elem.setName(name);_FinalNode" target="_KKSLRoV5EemzzojpIDPlJA" source="_KKY5AoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKZgBIV5EemzzojpIDPlJA" name="thenPathTo_If_10_merge" target="_KKYR7YV5EemzzojpIDPlJA" source="_KKY484V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKaHEIV5EemzzojpIDPlJA" name="If_10_cond_toThen_If_10_merge" target="_KKYR7IV5EemzzojpIDPlJA" source="_KKYR7YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKaHEYV5EemzzojpIDPlJA" name="thenPathTo_If_8_merge" target="_KKXq2oV5EemzzojpIDPlJA" source="_KKXq3oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKaHEoV5EemzzojpIDPlJA" name="If_8_cond_toThen_If_8_merge" target="_KKXq2YV5EemzzojpIDPlJA" source="_KKXq2oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKaHE4V5EemzzojpIDPlJA" name="thenPathTo_If_6_merge" target="_KKXDwYV5EemzzojpIDPlJA" source="_KKXDxYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKaHFIV5EemzzojpIDPlJA" name="If_6_cond_toThen_If_6_merge" target="_KKXDwIV5EemzzojpIDPlJA" source="_KKXDwYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKaHFYV5EemzzojpIDPlJA" name="If_3_merge_pos++" target="_KKSyYIV5EemzzojpIDPlJA" source="_KKTZaYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKaHGIV5EemzzojpIDPlJA" name="For_2_cond_If_12_cond" target="_KKaHFoV5EemzzojpIDPlJA" source="_KKSyW4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKaHGYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKaHGoV5EemzzojpIDPlJA" name="If_12_else" target="_KKaHF4V5EemzzojpIDPlJA" source="_KKaHFoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKaHHIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKauIoV5EemzzojpIDPlJA" name="If_12_cond_elem.setName(name);" target="_KKauIIV5EemzzojpIDPlJA" source="_KKaHFoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKaHG4V5EemzzojpIDPlJA" value="name != &quot;&quot;"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKauJYV5EemzzojpIDPlJA" name="elem.setName(name);_If_13_cond" target="_KKauI4V5EemzzojpIDPlJA" source="_KKauIIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKauJoV5EemzzojpIDPlJA" name="If_13_else" target="_KKauJIV5EemzzojpIDPlJA" source="_KKauI4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKauKIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKauKoV5EemzzojpIDPlJA" name="If_13_cond_boolean alreadyIn=false;" target="_KKauKYV5EemzzojpIDPlJA" source="_KKauI4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKauJ4V5EemzzojpIDPlJA" value="elem instanceof Constant"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKbVNIV5EemzzojpIDPlJA" name="int i=0_merge" target="_KKbVMIV5EemzzojpIDPlJA" source="_KKbVM4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKbVNYV5EemzzojpIDPlJA" name="For_4_merge_cond" target="_KKbVMYV5EemzzojpIDPlJA" source="_KKbVMIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKbVN4V5EemzzojpIDPlJA" name="For_4_cond_merge" target="_KKbVMIV5EemzzojpIDPlJA" source="_KKbVNoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKbVOIV5EemzzojpIDPlJA" name="boolean alreadyIn=false;_int i=0" target="_KKbVM4V5EemzzojpIDPlJA" source="_KKauKYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKbVO4V5EemzzojpIDPlJA" name="For_4_cond_If_14_cond" target="_KKbVOYV5EemzzojpIDPlJA" source="_KKbVMYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKbVPIV5EemzzojpIDPlJA" value="i &lt; listOfFunctions.size()"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKbVPYV5EemzzojpIDPlJA" name="If_14_else" target="_KKbVOoV5EemzzojpIDPlJA" source="_KKbVOYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKbVP4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKbVQYV5EemzzojpIDPlJA" name="If_14_cond_alreadyIn=true;" target="_KKbVQIV5EemzzojpIDPlJA" source="_KKbVOYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKbVPoV5EemzzojpIDPlJA" value="elem.equals(listOfFunctions.get(i))"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKb8QIV5EemzzojpIDPlJA" name="alreadyIn=true;_If_14_merge" target="_KKbVOoV5EemzzojpIDPlJA" source="_KKbVQIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKb8QYV5EemzzojpIDPlJA" name="If_14_merge_i++" target="_KKbVNoV5EemzzojpIDPlJA" source="_KKbVOoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKb8RIV5EemzzojpIDPlJA" name="For_4_cond_If_15_cond" target="_KKb8QoV5EemzzojpIDPlJA" source="_KKbVMYV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKb8RYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKb8RoV5EemzzojpIDPlJA" name="If_15_else" target="_KKb8Q4V5EemzzojpIDPlJA" source="_KKb8QoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKb8SIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKb8S4V5EemzzojpIDPlJA" name="If_15_cond_listOfFunctions.add((Function)elem);" target="_KKb8SYV5EemzzojpIDPlJA" source="_KKb8QoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKb8R4V5EemzzojpIDPlJA" value="!alreadyIn"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKb8TIV5EemzzojpIDPlJA" name="listOfFunctions.add((Function)_If_15_merge" target="_KKb8Q4V5EemzzojpIDPlJA" source="_KKb8SYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKb8TYV5EemzzojpIDPlJA" name="If_15_merge_If_13_merge" target="_KKauJIV5EemzzojpIDPlJA" source="_KKb8Q4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKcjUIV5EemzzojpIDPlJA" name="If_13_merge_If_12_merge" target="_KKaHF4V5EemzzojpIDPlJA" source="_KKauJIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKcjUYV5EemzzojpIDPlJA" name="If_12_merge_FinalNode" target="_KKSLRoV5EemzzojpIDPlJA" source="_KKaHF4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKSLSYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKSLTIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKSLT4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKSyUoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKSyVYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKSyXIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKUng4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKVOkoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKauK4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKbVMoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKSLQ4V5EemzzojpIDPlJA" name="input" parameter="_KFXPA4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKSLRIV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" parameter="_KFXPBIV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KKSLRYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKSLSIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKSLRoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKZgA4V5EemzzojpIDPlJA _KKcjUYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKSLR4V5EemzzojpIDPlJA" name="String name;" incoming="_KKSLSIV5EemzzojpIDPlJA" outgoing="_KKSLS4V5EemzzojpIDPlJA" variable="_KKSLSYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKSLSoV5EemzzojpIDPlJA" name="boolean inName;" incoming="_KKSLS4V5EemzzojpIDPlJA" outgoing="_KKSLToV5EemzzojpIDPlJA" variable="_KKSLTIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKSLTYV5EemzzojpIDPlJA" name="char c;" incoming="_KKSLToV5EemzzojpIDPlJA" outgoing="_KKSyUYV5EemzzojpIDPlJA" variable="_KKSLT4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKSyUIV5EemzzojpIDPlJA" name="Element elem=null;" incoming="_KKSyUYV5EemzzojpIDPlJA" outgoing="_KKSyVIV5EemzzojpIDPlJA" variable="_KKSyUoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKSyU4V5EemzzojpIDPlJA" name="int closing;" incoming="_KKSyVIV5EemzzojpIDPlJA" outgoing="_KKSyV4V5EemzzojpIDPlJA" variable="_KKSyVYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKSyVoV5EemzzojpIDPlJA" name="name=&quot;&quot;;" incoming="_KKSyV4V5EemzzojpIDPlJA" outgoing="_KKSyWYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>name=&quot;&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKSyWIV5EemzzojpIDPlJA" name="inName=false;" incoming="_KKSyWYV5EemzzojpIDPlJA" outgoing="_KKSyYoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>inName=false;
</body>
        </node>
        <node xmi:type="uml:MergeNode" xmi:id="_KKSyWoV5EemzzojpIDPlJA" name="For_2_merge" incoming="_KKSyXoV5EemzzojpIDPlJA _KKSyYYV5EemzzojpIDPlJA" outgoing="_KKSyX4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKSyW4V5EemzzojpIDPlJA" name="For_2_cond" incoming="_KKSyX4V5EemzzojpIDPlJA" outgoing="_KKSyZoV5EemzzojpIDPlJA _KKaHGIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKSyXYV5EemzzojpIDPlJA" name="int pos=0" incoming="_KKSyYoV5EemzzojpIDPlJA" outgoing="_KKSyXoV5EemzzojpIDPlJA" variable="_KKSyXIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKSyYIV5EemzzojpIDPlJA" name="pos++" incoming="_KKaHFYV5EemzzojpIDPlJA" outgoing="_KKSyYYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKSyY4V5EemzzojpIDPlJA" name="c=input.charAt(pos);" incoming="_KKSyZoV5EemzzojpIDPlJA" outgoing="_KKTZYYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKSyZIV5EemzzojpIDPlJA" name="pos"/>
          <result xmi:id="_KKSyZYV5EemzzojpIDPlJA" name="c"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKSyaIV5EemzzojpIDPlJA" name="If_2_cond" incoming="_KKTZYYV5EemzzojpIDPlJA" outgoing="_KKTZYoV5EemzzojpIDPlJA _KKTZZoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKTZYIV5EemzzojpIDPlJA" name="If_2_merge" incoming="_KKTZYoV5EemzzojpIDPlJA _KKTZZ4V5EemzzojpIDPlJA" outgoing="_KKTZaoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKTZZYV5EemzzojpIDPlJA" name="continue;" incoming="_KKTZZoV5EemzzojpIDPlJA" outgoing="_KKTZZ4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>continue;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKTZaIV5EemzzojpIDPlJA" name="If_3_cond" incoming="_KKTZaoV5EemzzojpIDPlJA" outgoing="_KKUAcIV5EemzzojpIDPlJA _KKXDwoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKTZaYV5EemzzojpIDPlJA" name="If_3_merge" outgoing="_KKaHFYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKTZa4V5EemzzojpIDPlJA" name="closing=getIndexOfCorrespondingBracket(input,pos);" incoming="_KKUAcIV5EemzzojpIDPlJA" outgoing="_KKUngIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKTZbIV5EemzzojpIDPlJA" name="input"/>
          <argument xmi:id="_KKTZbYV5EemzzojpIDPlJA" name="pos"/>
          <result xmi:id="_KKTZboV5EemzzojpIDPlJA" name="closing"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKUAcoV5EemzzojpIDPlJA" name="elem=new Function(name);" incoming="_KKUngIV5EemzzojpIDPlJA" outgoing="_KKUngoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>elem=new Function(name);
</body>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKUngYV5EemzzojpIDPlJA" name="boolean alreadyIn=false;" incoming="_KKUngoV5EemzzojpIDPlJA" outgoing="_KKVOmIV5EemzzojpIDPlJA" variable="_KKUng4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKVOkIV5EemzzojpIDPlJA" name="For_3_merge" incoming="_KKVOlIV5EemzzojpIDPlJA _KKVOl4V5EemzzojpIDPlJA" outgoing="_KKVOlYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKVOkYV5EemzzojpIDPlJA" name="For_3_cond" incoming="_KKVOlYV5EemzzojpIDPlJA" outgoing="_KKVOm4V5EemzzojpIDPlJA _KKWcsIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKVOk4V5EemzzojpIDPlJA" name="int i=0" incoming="_KKVOmIV5EemzzojpIDPlJA" outgoing="_KKVOlIV5EemzzojpIDPlJA" variable="_KKVOkoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKVOloV5EemzzojpIDPlJA" name="i++" incoming="_KKV1poV5EemzzojpIDPlJA" outgoing="_KKVOl4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKVOmYV5EemzzojpIDPlJA" name="If_4_cond" incoming="_KKVOm4V5EemzzojpIDPlJA" outgoing="_KKV1oIV5EemzzojpIDPlJA _KKV1pIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKVOmoV5EemzzojpIDPlJA" name="If_4_merge" incoming="_KKV1oIV5EemzzojpIDPlJA _KKV1pYV5EemzzojpIDPlJA" outgoing="_KKV1poV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKV1o4V5EemzzojpIDPlJA" name="alreadyIn=true;" incoming="_KKV1pIV5EemzzojpIDPlJA" outgoing="_KKV1pYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>alreadyIn=true;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKV1p4V5EemzzojpIDPlJA" name="If_5_cond" incoming="_KKWcsIV5EemzzojpIDPlJA" outgoing="_KKWcsoV5EemzzojpIDPlJA _KKWct4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKV1qIV5EemzzojpIDPlJA" name="If_5_merge" incoming="_KKWcsoV5EemzzojpIDPlJA _KKWcuIV5EemzzojpIDPlJA" outgoing="_KKWcu4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKWctYV5EemzzojpIDPlJA" name="listOfFunctions.add((Function)elem);" incoming="_KKWct4V5EemzzojpIDPlJA" outgoing="_KKWcuIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKWctoV5EemzzojpIDPlJA" name="(Function)elem"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKWcuYV5EemzzojpIDPlJA" name="((Function)elem).addArgument((parseSub(s)));" incoming="_KKWcu4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKWcuoV5EemzzojpIDPlJA" name="(parseSub(s))"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKXDwIV5EemzzojpIDPlJA" name="If_6_cond" incoming="_KKXDwoV5EemzzojpIDPlJA _KKaHFIV5EemzzojpIDPlJA" outgoing="_KKXDxoV5EemzzojpIDPlJA _KKXq24V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKXDwYV5EemzzojpIDPlJA" name="If_6_merge" incoming="_KKaHE4V5EemzzojpIDPlJA" outgoing="_KKaHFIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKXDxIV5EemzzojpIDPlJA" name="If_7_cond" incoming="_KKXDxoV5EemzzojpIDPlJA" outgoing="_KKXDyYV5EemzzojpIDPlJA _KKXq0YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKXDxYV5EemzzojpIDPlJA" name="If_7_merge" incoming="_KKXq14V5EemzzojpIDPlJA _KKXq2IV5EemzzojpIDPlJA" outgoing="_KKaHE4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKXDyIV5EemzzojpIDPlJA" name="name+=c;" incoming="_KKXDyYV5EemzzojpIDPlJA" outgoing="_KKXq14V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>name+=c;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKXq0IV5EemzzojpIDPlJA" name="inName=true;" incoming="_KKXq0YV5EemzzojpIDPlJA" outgoing="_KKXq1IV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>inName=true;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKXq04V5EemzzojpIDPlJA" name="name+=c;" incoming="_KKXq1IV5EemzzojpIDPlJA" outgoing="_KKXq1oV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>name+=c;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKXq1YV5EemzzojpIDPlJA" name="elem=new Constant(&quot;&quot;);" incoming="_KKXq1oV5EemzzojpIDPlJA" outgoing="_KKXq2IV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>elem=new Constant(&quot;&quot;);
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKXq2YV5EemzzojpIDPlJA" name="If_8_cond" incoming="_KKXq24V5EemzzojpIDPlJA _KKaHEoV5EemzzojpIDPlJA" outgoing="_KKXq34V5EemzzojpIDPlJA _KKY48IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKXq2oV5EemzzojpIDPlJA" name="If_8_merge" incoming="_KKaHEYV5EemzzojpIDPlJA" outgoing="_KKaHEoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKXq3YV5EemzzojpIDPlJA" name="If_9_cond" incoming="_KKXq34V5EemzzojpIDPlJA" outgoing="_KKYR4YV5EemzzojpIDPlJA _KKYR5IV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKXq3oV5EemzzojpIDPlJA" name="If_9_merge" incoming="_KKYR6oV5EemzzojpIDPlJA _KKYR64V5EemzzojpIDPlJA" outgoing="_KKaHEYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKYR4IV5EemzzojpIDPlJA" name="name+=c;" incoming="_KKYR4YV5EemzzojpIDPlJA" outgoing="_KKYR6oV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>name+=c;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKYR44V5EemzzojpIDPlJA" name="inName=true;" incoming="_KKYR5IV5EemzzojpIDPlJA" outgoing="_KKYR54V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>inName=true;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKYR5oV5EemzzojpIDPlJA" name="name+=c;" incoming="_KKYR54V5EemzzojpIDPlJA" outgoing="_KKYR6YV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>name+=c;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKYR6IV5EemzzojpIDPlJA" name="elem=new Variable();" incoming="_KKYR6YV5EemzzojpIDPlJA" outgoing="_KKYR64V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>elem=new Variable();
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKYR7IV5EemzzojpIDPlJA" name="If_10_cond" incoming="_KKY48IV5EemzzojpIDPlJA _KKaHEIV5EemzzojpIDPlJA" outgoing="_KKY49IV5EemzzojpIDPlJA _KKZgAYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKYR7YV5EemzzojpIDPlJA" name="If_10_merge" incoming="_KKZgBIV5EemzzojpIDPlJA" outgoing="_KKaHEIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKY48oV5EemzzojpIDPlJA" name="If_11_cond" incoming="_KKY49IV5EemzzojpIDPlJA" outgoing="_KKY494V5EemzzojpIDPlJA _KKY4-oV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKY484V5EemzzojpIDPlJA" name="If_11_merge" incoming="_KKY5AIV5EemzzojpIDPlJA _KKY5AYV5EemzzojpIDPlJA" outgoing="_KKZgBIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKY49oV5EemzzojpIDPlJA" name="name+=c;" incoming="_KKY494V5EemzzojpIDPlJA" outgoing="_KKY5AIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>name+=c;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKY4-YV5EemzzojpIDPlJA" name="inName=true;" incoming="_KKY4-oV5EemzzojpIDPlJA" outgoing="_KKY4_YV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>inName=true;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKY4_IV5EemzzojpIDPlJA" name="name+=c;" incoming="_KKY4_YV5EemzzojpIDPlJA" outgoing="_KKY4_4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>name+=c;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKY4_oV5EemzzojpIDPlJA" name="elem=new Function(name,true);" incoming="_KKY4_4V5EemzzojpIDPlJA" outgoing="_KKY5AYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>elem=new Function(name,true);
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKY5AoV5EemzzojpIDPlJA" name="elem.setName(name);" incoming="_KKZgAYV5EemzzojpIDPlJA" outgoing="_KKZgA4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKZgAIV5EemzzojpIDPlJA" name="name"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKaHFoV5EemzzojpIDPlJA" name="If_12_cond" incoming="_KKaHGIV5EemzzojpIDPlJA" outgoing="_KKaHGoV5EemzzojpIDPlJA _KKauIoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKaHF4V5EemzzojpIDPlJA" name="If_12_merge" incoming="_KKaHGoV5EemzzojpIDPlJA _KKcjUIV5EemzzojpIDPlJA" outgoing="_KKcjUYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKauIIV5EemzzojpIDPlJA" name="elem.setName(name);" incoming="_KKauIoV5EemzzojpIDPlJA" outgoing="_KKauJYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKauIYV5EemzzojpIDPlJA" name="name"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKauI4V5EemzzojpIDPlJA" name="If_13_cond" incoming="_KKauJYV5EemzzojpIDPlJA" outgoing="_KKauJoV5EemzzojpIDPlJA _KKauKoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKauJIV5EemzzojpIDPlJA" name="If_13_merge" incoming="_KKauJoV5EemzzojpIDPlJA _KKb8TYV5EemzzojpIDPlJA" outgoing="_KKcjUIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKauKYV5EemzzojpIDPlJA" name="boolean alreadyIn=false;" incoming="_KKauKoV5EemzzojpIDPlJA" outgoing="_KKbVOIV5EemzzojpIDPlJA" variable="_KKauK4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKbVMIV5EemzzojpIDPlJA" name="For_4_merge" incoming="_KKbVNIV5EemzzojpIDPlJA _KKbVN4V5EemzzojpIDPlJA" outgoing="_KKbVNYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKbVMYV5EemzzojpIDPlJA" name="For_4_cond" incoming="_KKbVNYV5EemzzojpIDPlJA" outgoing="_KKbVO4V5EemzzojpIDPlJA _KKb8RIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKbVM4V5EemzzojpIDPlJA" name="int i=0" incoming="_KKbVOIV5EemzzojpIDPlJA" outgoing="_KKbVNIV5EemzzojpIDPlJA" variable="_KKbVMoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKbVNoV5EemzzojpIDPlJA" name="i++" incoming="_KKb8QYV5EemzzojpIDPlJA" outgoing="_KKbVN4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKbVOYV5EemzzojpIDPlJA" name="If_14_cond" incoming="_KKbVO4V5EemzzojpIDPlJA" outgoing="_KKbVPYV5EemzzojpIDPlJA _KKbVQYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKbVOoV5EemzzojpIDPlJA" name="If_14_merge" incoming="_KKbVPYV5EemzzojpIDPlJA _KKb8QIV5EemzzojpIDPlJA" outgoing="_KKb8QYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKbVQIV5EemzzojpIDPlJA" name="alreadyIn=true;" incoming="_KKbVQYV5EemzzojpIDPlJA" outgoing="_KKb8QIV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>alreadyIn=true;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKb8QoV5EemzzojpIDPlJA" name="If_15_cond" incoming="_KKb8RIV5EemzzojpIDPlJA" outgoing="_KKb8RoV5EemzzojpIDPlJA _KKb8S4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKb8Q4V5EemzzojpIDPlJA" name="If_15_merge" incoming="_KKb8RoV5EemzzojpIDPlJA _KKb8TIV5EemzzojpIDPlJA" outgoing="_KKb8TYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKb8SYV5EemzzojpIDPlJA" name="listOfFunctions.add((Function)elem);" incoming="_KKb8S4V5EemzzojpIDPlJA" outgoing="_KKb8TIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKb8SoV5EemzzojpIDPlJA" name="(Function)elem"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKcjUoV5EemzzojpIDPlJA" name="getIndexOfCorrespondingBracket" specification="_KFX2EIV5EemzzojpIDPlJA" node="_KKcjU4V5EemzzojpIDPlJA _KKcjVIV5EemzzojpIDPlJA _KKcjVYV5EemzzojpIDPlJA _KKcjVoV5EemzzojpIDPlJA _KKcjV4V5EemzzojpIDPlJA _KKcjWIV5EemzzojpIDPlJA _KKcjWYV5EemzzojpIDPlJA _KKcjX4V5EemzzojpIDPlJA _KKcjYoV5EemzzojpIDPlJA _KKdKYoV5EemzzojpIDPlJA _KKdKY4V5EemzzojpIDPlJA _KKdKaIV5EemzzojpIDPlJA _KKdKa4V5EemzzojpIDPlJA _KKdKbIV5EemzzojpIDPlJA _KKdKcYV5EemzzojpIDPlJA _KKdKdIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKcjWoV5EemzzojpIDPlJA" name="InitNode_If_16_cond" target="_KKcjWIV5EemzzojpIDPlJA" source="_KKcjVoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKcjW4V5EemzzojpIDPlJA" name="If_16_else" target="_KKcjWYV5EemzzojpIDPlJA" source="_KKcjWIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKcjXYV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKcjXoV5EemzzojpIDPlJA" name="If_16_cond_FinalNode" target="_KKcjV4V5EemzzojpIDPlJA" source="_KKcjWIV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKcjXIV5EemzzojpIDPlJA" value="s.charAt(startIndex) != '('"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKcjYIV5EemzzojpIDPlJA" name="If_16_merge_int level=0;" target="_KKcjX4V5EemzzojpIDPlJA" source="_KKcjWYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdKYIV5EemzzojpIDPlJA" name="int level=0;_int index=startIndex;" target="_KKcjYoV5EemzzojpIDPlJA" source="_KKcjX4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdKZIV5EemzzojpIDPlJA" name="int index=startIndex;_If_17_cond" target="_KKdKYoV5EemzzojpIDPlJA" source="_KKcjYoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdKZYV5EemzzojpIDPlJA" name="If_17_else" target="_KKdKY4V5EemzzojpIDPlJA" source="_KKdKYoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKdKZ4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdKaYV5EemzzojpIDPlJA" name="If_17_cond_level++;" target="_KKdKaIV5EemzzojpIDPlJA" source="_KKdKYoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKdKZoV5EemzzojpIDPlJA" value="s.charAt(index) == '('"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdKaoV5EemzzojpIDPlJA" name="level++;_If_17_merge" target="_KKdKY4V5EemzzojpIDPlJA" source="_KKdKaIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdKbYV5EemzzojpIDPlJA" name="If_17_merge_If_18_cond" target="_KKdKa4V5EemzzojpIDPlJA" source="_KKdKY4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdKboV5EemzzojpIDPlJA" name="If_18_else" target="_KKdKbIV5EemzzojpIDPlJA" source="_KKdKa4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKdKcIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdKcoV5EemzzojpIDPlJA" name="If_18_cond_level--;" target="_KKdKcYV5EemzzojpIDPlJA" source="_KKdKa4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKdKb4V5EemzzojpIDPlJA" value="s.charAt(index) == ')'"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdKc4V5EemzzojpIDPlJA" name="level--;_If_18_merge" target="_KKdKbIV5EemzzojpIDPlJA" source="_KKdKcYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdxcIV5EemzzojpIDPlJA" name="If_18_merge_index++;" target="_KKdKdIV5EemzzojpIDPlJA" source="_KKdKbIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdxcYV5EemzzojpIDPlJA" name="index++;_FinalNode" target="_KKcjV4V5EemzzojpIDPlJA" source="_KKdKdIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKcjYYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKdKYYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKcjU4V5EemzzojpIDPlJA" name="s" parameter="_KFX2E4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKcjVIV5EemzzojpIDPlJA" name="startIndex" parameter="_KFX2FIV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKcjVYV5EemzzojpIDPlJA" parameter="_KFX2FYV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KKcjVoV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKcjWoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKcjV4V5EemzzojpIDPlJA" name="FinalNode" incoming="_KKcjXoV5EemzzojpIDPlJA _KKdxcYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKcjWIV5EemzzojpIDPlJA" name="If_16_cond" incoming="_KKcjWoV5EemzzojpIDPlJA" outgoing="_KKcjW4V5EemzzojpIDPlJA _KKcjXoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKcjWYV5EemzzojpIDPlJA" name="If_16_merge" incoming="_KKcjW4V5EemzzojpIDPlJA" outgoing="_KKcjYIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKcjX4V5EemzzojpIDPlJA" name="int level=0;" incoming="_KKcjYIV5EemzzojpIDPlJA" outgoing="_KKdKYIV5EemzzojpIDPlJA" variable="_KKcjYYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKcjYoV5EemzzojpIDPlJA" name="int index=startIndex;" incoming="_KKdKYIV5EemzzojpIDPlJA" outgoing="_KKdKZIV5EemzzojpIDPlJA" variable="_KKdKYYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKdKYoV5EemzzojpIDPlJA" name="If_17_cond" incoming="_KKdKZIV5EemzzojpIDPlJA" outgoing="_KKdKZYV5EemzzojpIDPlJA _KKdKaYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKdKY4V5EemzzojpIDPlJA" name="If_17_merge" incoming="_KKdKZYV5EemzzojpIDPlJA _KKdKaoV5EemzzojpIDPlJA" outgoing="_KKdKbYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKdKaIV5EemzzojpIDPlJA" name="level++;" incoming="_KKdKaYV5EemzzojpIDPlJA" outgoing="_KKdKaoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>level++;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKdKa4V5EemzzojpIDPlJA" name="If_18_cond" incoming="_KKdKbYV5EemzzojpIDPlJA" outgoing="_KKdKboV5EemzzojpIDPlJA _KKdKcoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKdKbIV5EemzzojpIDPlJA" name="If_18_merge" incoming="_KKdKboV5EemzzojpIDPlJA _KKdKc4V5EemzzojpIDPlJA" outgoing="_KKdxcIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKdKcYV5EemzzojpIDPlJA" name="level--;" incoming="_KKdKcoV5EemzzojpIDPlJA" outgoing="_KKdKc4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>level--;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKdKdIV5EemzzojpIDPlJA" name="index++;" incoming="_KKdxcIV5EemzzojpIDPlJA" outgoing="_KKdxcYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>index++;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKdxcoV5EemzzojpIDPlJA" name="getCorrectSubstrings" specification="_KFZEMIV5EemzzojpIDPlJA" node="_KKdxc4V5EemzzojpIDPlJA _KKdxdIV5EemzzojpIDPlJA _KKdxdYV5EemzzojpIDPlJA _KKdxdoV5EemzzojpIDPlJA _KKdxd4V5EemzzojpIDPlJA _KKdxeIV5EemzzojpIDPlJA _KKdxeYV5EemzzojpIDPlJA _KKdxfIV5EemzzojpIDPlJA _KKdxf4V5EemzzojpIDPlJA _KKdxgoV5EemzzojpIDPlJA _KKeYgoV5EemzzojpIDPlJA _KKeYg4V5EemzzojpIDPlJA _KKeYiIV5EemzzojpIDPlJA _KKeYi4V5EemzzojpIDPlJA _KKeYjIV5EemzzojpIDPlJA _KKeYkYV5EemzzojpIDPlJA _KKe_koV5EemzzojpIDPlJA _KKe_k4V5EemzzojpIDPlJA _KKe_mIV5EemzzojpIDPlJA _KKe_m4V5EemzzojpIDPlJA _KKe_noV5EemzzojpIDPlJA _KKe_oIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdxeoV5EemzzojpIDPlJA" name="InitNode_ArrayList&lt;String> ret=new ArrayList&lt;String>();" target="_KKdxeYV5EemzzojpIDPlJA" source="_KKdxd4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdxfYV5EemzzojpIDPlJA" name="ArrayList&lt;String> ret=new Arra_int start=startIndex;" target="_KKdxfIV5EemzzojpIDPlJA" source="_KKdxeYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKdxgIV5EemzzojpIDPlJA" name="int start=startIndex;_int index=startIndex;" target="_KKdxf4V5EemzzojpIDPlJA" source="_KKdxfIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKeYgIV5EemzzojpIDPlJA" name="int index=startIndex;_int level=0;" target="_KKdxgoV5EemzzojpIDPlJA" source="_KKdxf4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKeYhIV5EemzzojpIDPlJA" name="int level=0;_If_19_cond" target="_KKeYgoV5EemzzojpIDPlJA" source="_KKdxgoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKeYhYV5EemzzojpIDPlJA" name="If_19_else" target="_KKeYg4V5EemzzojpIDPlJA" source="_KKeYgoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKeYh4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKeYiYV5EemzzojpIDPlJA" name="If_19_cond_level++;" target="_KKeYiIV5EemzzojpIDPlJA" source="_KKeYgoV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKeYhoV5EemzzojpIDPlJA" value="s.charAt(index) == '('"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKeYioV5EemzzojpIDPlJA" name="level++;_If_19_merge" target="_KKeYg4V5EemzzojpIDPlJA" source="_KKeYiIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKeYjYV5EemzzojpIDPlJA" name="If_19_merge_If_20_cond" target="_KKeYi4V5EemzzojpIDPlJA" source="_KKeYg4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKeYjoV5EemzzojpIDPlJA" name="If_20_else" target="_KKeYjIV5EemzzojpIDPlJA" source="_KKeYi4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKeYkIV5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKe_kIV5EemzzojpIDPlJA" name="If_20_cond_level--;" target="_KKeYkYV5EemzzojpIDPlJA" source="_KKeYi4V5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKeYj4V5EemzzojpIDPlJA" value="s.charAt(index) == ')'"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKe_kYV5EemzzojpIDPlJA" name="level--;_If_20_merge" target="_KKeYjIV5EemzzojpIDPlJA" source="_KKeYkYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKe_lIV5EemzzojpIDPlJA" name="If_20_merge_If_21_cond" target="_KKe_koV5EemzzojpIDPlJA" source="_KKeYjIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKe_lYV5EemzzojpIDPlJA" name="If_21_else" target="_KKe_k4V5EemzzojpIDPlJA" source="_KKe_koV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKe_l4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKe_moV5EemzzojpIDPlJA" name="If_21_cond_ret.add(s.substring(start,index));" target="_KKe_mIV5EemzzojpIDPlJA" source="_KKe_koV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKe_loV5EemzzojpIDPlJA" value="s.charAt(index) == ',' &amp;&amp; level == 0"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKe_nIV5EemzzojpIDPlJA" name="ret.add(s.substring(start,inde_start=++index;" target="_KKe_m4V5EemzzojpIDPlJA" source="_KKe_mIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKe_nYV5EemzzojpIDPlJA" name="start=++index;_If_21_merge" target="_KKe_k4V5EemzzojpIDPlJA" source="_KKe_m4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKe_n4V5EemzzojpIDPlJA" name="If_21_merge_index++;" target="_KKe_noV5EemzzojpIDPlJA" source="_KKe_k4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKfmoYV5EemzzojpIDPlJA" name="index++;_ret.add(s.substring(start,endIndex + 1));" target="_KKe_oIV5EemzzojpIDPlJA" source="_KKe_noV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKfmooV5EemzzojpIDPlJA" name="ret.add(s.substring(start,endI_FinalNode" target="_KKdxeIV5EemzzojpIDPlJA" source="_KKe_oIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKdxe4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKdxfoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKdxgYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKeYgYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKdxc4V5EemzzojpIDPlJA" name="s" parameter="_KFZEM4V5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKdxdIV5EemzzojpIDPlJA" name="startIndex" parameter="_KFZENIV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKdxdYV5EemzzojpIDPlJA" name="endIndex" parameter="_KFZENYV5EemzzojpIDPlJA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_KKdxdoV5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" parameter="_KFZENoV5EemzzojpIDPlJA">
          <name xsi:nil="true"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_KKdxd4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KKdxeoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKdxeIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKfmooV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKdxeYV5EemzzojpIDPlJA" name="ArrayList&lt;String> ret=new ArrayList&lt;String>();" incoming="_KKdxeoV5EemzzojpIDPlJA" outgoing="_KKdxfYV5EemzzojpIDPlJA" variable="_KKdxe4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKdxfIV5EemzzojpIDPlJA" name="int start=startIndex;" incoming="_KKdxfYV5EemzzojpIDPlJA" outgoing="_KKdxgIV5EemzzojpIDPlJA" variable="_KKdxfoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKdxf4V5EemzzojpIDPlJA" name="int index=startIndex;" incoming="_KKdxgIV5EemzzojpIDPlJA" outgoing="_KKeYgIV5EemzzojpIDPlJA" variable="_KKdxgYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKdxgoV5EemzzojpIDPlJA" name="int level=0;" incoming="_KKeYgIV5EemzzojpIDPlJA" outgoing="_KKeYhIV5EemzzojpIDPlJA" variable="_KKeYgYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKeYgoV5EemzzojpIDPlJA" name="If_19_cond" incoming="_KKeYhIV5EemzzojpIDPlJA" outgoing="_KKeYhYV5EemzzojpIDPlJA _KKeYiYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKeYg4V5EemzzojpIDPlJA" name="If_19_merge" incoming="_KKeYhYV5EemzzojpIDPlJA _KKeYioV5EemzzojpIDPlJA" outgoing="_KKeYjYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKeYiIV5EemzzojpIDPlJA" name="level++;" incoming="_KKeYiYV5EemzzojpIDPlJA" outgoing="_KKeYioV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>level++;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKeYi4V5EemzzojpIDPlJA" name="If_20_cond" incoming="_KKeYjYV5EemzzojpIDPlJA" outgoing="_KKeYjoV5EemzzojpIDPlJA _KKe_kIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKeYjIV5EemzzojpIDPlJA" name="If_20_merge" incoming="_KKeYjoV5EemzzojpIDPlJA _KKe_kYV5EemzzojpIDPlJA" outgoing="_KKe_lIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKeYkYV5EemzzojpIDPlJA" name="level--;" incoming="_KKe_kIV5EemzzojpIDPlJA" outgoing="_KKe_kYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>level--;
</body>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKe_koV5EemzzojpIDPlJA" name="If_21_cond" incoming="_KKe_lIV5EemzzojpIDPlJA" outgoing="_KKe_lYV5EemzzojpIDPlJA _KKe_moV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKe_k4V5EemzzojpIDPlJA" name="If_21_merge" incoming="_KKe_lYV5EemzzojpIDPlJA _KKe_nYV5EemzzojpIDPlJA" outgoing="_KKe_n4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKe_mIV5EemzzojpIDPlJA" name="ret.add(s.substring(start,index));" incoming="_KKe_moV5EemzzojpIDPlJA" outgoing="_KKe_nIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKe_mYV5EemzzojpIDPlJA" name="s.substring(start,index)"/>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKe_m4V5EemzzojpIDPlJA" name="start=++index;" incoming="_KKe_nIV5EemzzojpIDPlJA" outgoing="_KKe_nYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>start=++index;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKe_noV5EemzzojpIDPlJA" name="index++;" incoming="_KKe_n4V5EemzzojpIDPlJA" outgoing="_KKfmoYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>index++;
</body>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKe_oIV5EemzzojpIDPlJA" name="ret.add(s.substring(start,endIndex + 1));" incoming="_KKfmoYV5EemzzojpIDPlJA" outgoing="_KKfmooV5EemzzojpIDPlJA">
          <argument xmi:id="_KKfmoIV5EemzzojpIDPlJA" name="s.substring(start,endIndex + 1)"/>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_KFTkoIV5EemzzojpIDPlJA" name="parse" visibility="public" isStatic="true" method="_KKNSwIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFTkoYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFTkooV5EemzzojpIDPlJA" key="documentation" value=" This method parses the input in two parts, left and right.&#xD;&#xA; @param input String, which should be unified.&#xD;&#xA; @return This returns a list with the parts.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KFTko4V5EemzzojpIDPlJA" name="input">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KFTkpIV5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KFWA4IV5EemzzojpIDPlJA" name="sort" visibility="private" isStatic="true">
        <eAnnotations xmi:id="_KFWA4YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFWA4oV5EemzzojpIDPlJA" key="documentation" value=" Sorts the list of function symbols, such that constants are at the beginning, and &#xD;&#xA; those with higher arity come later.&#xD;&#xA; @param l ArrayList to be sorted.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KFWA44V5EemzzojpIDPlJA" name="l" type="_J97KQYV5EemzzojpIDPlJA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KFXPAIV5EemzzojpIDPlJA" name="parseSub" visibility="private" isStatic="true" method="_KKSLQoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFXPAYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFXPAoV5EemzzojpIDPlJA" key="documentation" value=" This method parses a string and identifies to which element each character &#xD;&#xA; belongs (function, variable, constant,name).&#xD;&#xA; @param input This is a string.&#xD;&#xA; @return This returns an element.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KFXPA4V5EemzzojpIDPlJA" name="input">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KFXPBIV5EemzzojpIDPlJA" type="_J6hQ8YV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KFX2EIV5EemzzojpIDPlJA" name="getIndexOfCorrespondingBracket" visibility="private" isStatic="true" method="_KKcjUoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFX2EYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFX2EoV5EemzzojpIDPlJA" key="documentation" value=" Get the corresponding to a opening bracket.&#xD;&#xA; @param s input String.&#xD;&#xA; @param startIndex index of the opening bracket in the string.&#xD;&#xA; @return the index of the closing bracket, -1 if startIndex isn't an opening bracket.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KFX2E4V5EemzzojpIDPlJA" name="s">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KFX2FIV5EemzzojpIDPlJA" name="startIndex">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KFX2FYV5EemzzojpIDPlJA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KFZEMIV5EemzzojpIDPlJA" name="getCorrectSubstrings" visibility="private" isStatic="true" method="_KKdxcoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFZEMYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFZEMoV5EemzzojpIDPlJA" key="documentation" value=" Generates Substring of a String, splitting the String on ',' chars, which are on the right level.&#xD;&#xA; @param s input String.&#xD;&#xA; @param startIndex Index of first char.&#xD;&#xA; @param endIndex Index of the last char.&#xD;&#xA; @return List of Substrings.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KFZEM4V5EemzzojpIDPlJA" name="s">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KFZENIV5EemzzojpIDPlJA" name="startIndex">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KFZENYV5EemzzojpIDPlJA" name="endIndex">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KFZENoV5EemzzojpIDPlJA" type="_J97KQYV5EemzzojpIDPlJA" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6mwgIV5EemzzojpIDPlJA" name="AlgorithmsJUnit1" visibility="package">
      <eAnnotations xmi:id="_J6mwgYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6mwgoV5EemzzojpIDPlJA" key="documentation" value=" Test Cases for Pre-Unification.&#xD;&#xA; @author Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_KFZrQ4V5EemzzojpIDPlJA" importedElement="_KFZrQoV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KFaSUYV5EemzzojpIDPlJA" importedElement="_KFaSUIV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KFaSUoV5EemzzojpIDPlJA" importedElement="_J-ej4oV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KFaSU4V5EemzzojpIDPlJA" importedElement="_J-fK8YV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KFaSVIV5EemzzojpIDPlJA" importedElement="_J-fyAYV5EemzzojpIDPlJA" visibility="private"/>
      <packageImport xmi:id="_KFZrQIV5EemzzojpIDPlJA" importedPackage="_J6rB9IV5EemzzojpIDPlJA" visibility="private"/>
      <ownedAttribute xmi:id="_KFbgcIV5EemzzojpIDPlJA" name="unif" type="_J6k7UIV5EemzzojpIDPlJA" association="_KFt0VIV5EemzzojpIDPlJA"/>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKip8IV5EemzzojpIDPlJA" name="setUp" specification="_KFdVoIV5EemzzojpIDPlJA" node="_KKip8YV5EemzzojpIDPlJA _KKip8oV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKip84V5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KKip8oV5EemzzojpIDPlJA" source="_KKip8YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKip8YV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKip84V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKip8oV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKip84V5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKip9IV5EemzzojpIDPlJA" name="tearDown" specification="_KFejwIV5EemzzojpIDPlJA" node="_KKip9YV5EemzzojpIDPlJA _KKip9oV5EemzzojpIDPlJA _KKip94V5EemzzojpIDPlJA _KKip-oV5EemzzojpIDPlJA _KKjRAYV5EemzzojpIDPlJA _KKjRBIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKip-YV5EemzzojpIDPlJA" name="InitNode_System.out.println(&quot;After:&quot;);" target="_KKip94V5EemzzojpIDPlJA" source="_KKip9YV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKjRAIV5EemzzojpIDPlJA" name="System.out.println(&quot;After:&quot;);_System.out.println(&quot;P = &quot; + un" target="_KKip-oV5EemzzojpIDPlJA" source="_KKip94V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKjRA4V5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + un_System.out.println(&quot;C = &quot; + u" target="_KKjRAYV5EemzzojpIDPlJA" source="_KKip-oV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKjRBoV5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + un_System.out.println(&quot;s = &quot; + u" target="_KKjRBIV5EemzzojpIDPlJA" source="_KKjRAYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKjRB4V5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + un_FinalNode" target="_KKip9oV5EemzzojpIDPlJA" source="_KKjRBIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKip9YV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKip-YV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKip9oV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKjRB4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKip94V5EemzzojpIDPlJA" name="System.out.println(&quot;After:&quot;);" incoming="_KKip-YV5EemzzojpIDPlJA" outgoing="_KKjRAIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKip-IV5EemzzojpIDPlJA" name="&quot;After:&quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKip-oV5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + unif.prob.getP().toString());" incoming="_KKjRAIV5EemzzojpIDPlJA" outgoing="_KKjRA4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKip-4V5EemzzojpIDPlJA" name="&quot;P = &quot; + unif.prob.getP().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKjRAYV5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + unif.prob.getC().toString());" incoming="_KKjRA4V5EemzzojpIDPlJA" outgoing="_KKjRBoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKjRAoV5EemzzojpIDPlJA" name="&quot;C = &quot; + unif.prob.getC().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKjRBIV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + unif.prob.getSigma().toString());" incoming="_KKjRBoV5EemzzojpIDPlJA" outgoing="_KKjRB4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKjRBYV5EemzzojpIDPlJA" name="&quot;s = &quot; + unif.prob.getSigma().toString()"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKjRCIV5EemzzojpIDPlJA" name="testPreUnification1" specification="_KFfK0IV5EemzzojpIDPlJA" node="_KKjRCYV5EemzzojpIDPlJA _KKjRCoV5EemzzojpIDPlJA _KKjRC4V5EemzzojpIDPlJA _KKj4EYV5EemzzojpIDPlJA _KKj4FIV5EemzzojpIDPlJA _KKj4GIV5EemzzojpIDPlJA _KKj4G4V5EemzzojpIDPlJA _KKj4HoV5EemzzojpIDPlJA _KKj4IYV5EemzzojpIDPlJA _KKkfIYV5EemzzojpIDPlJA _KKkfJIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKjRDIV5EemzzojpIDPlJA" name="InitNode_String s=&quot;p(x,y,x)&quot;;" target="_KKjRC4V5EemzzojpIDPlJA" source="_KKjRCYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKj4EoV5EemzzojpIDPlJA" name="String s=&quot;p(x,y,x)&quot;;_String t=&quot;q(f(a),g(d),y)&quot;;" target="_KKj4EYV5EemzzojpIDPlJA" source="_KKjRC4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKj4F4V5EemzzojpIDPlJA" name="String t=&quot;q(f(a),g(d),y)&quot;;_unif=InputParser.parse(s + &quot; =? &quot;" target="_KKj4FIV5EemzzojpIDPlJA" source="_KKj4EYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKj4GoV5EemzzojpIDPlJA" name="unif=InputParser.parse(s + &quot; =_System.out.println(&quot;Before:&quot;)" target="_KKj4GIV5EemzzojpIDPlJA" source="_KKj4FIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKj4HYV5EemzzojpIDPlJA" name="System.out.println(&quot;Before:&quot;);_System.out.println(&quot;P = &quot; + u" target="_KKj4G4V5EemzzojpIDPlJA" source="_KKj4GIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKj4IIV5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + un_System.out.println(&quot;C = &quot; + u" target="_KKj4HoV5EemzzojpIDPlJA" source="_KKj4G4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKkfIIV5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + un_System.out.println(&quot;s = &quot; + u" target="_KKj4IYV5EemzzojpIDPlJA" source="_KKj4HoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKkfIoV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + un_boolean result=Algorithms.pre" target="_KKkfIYV5EemzzojpIDPlJA" source="_KKj4IYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKkfJoV5EemzzojpIDPlJA" name="boolean result=Algorithms.preU_assertTrue(result);" target="_KKkfJIV5EemzzojpIDPlJA" source="_KKkfIYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKkfJ4V5EemzzojpIDPlJA" name="assertTrue(result);_FinalNode" target="_KKjRCoV5EemzzojpIDPlJA" source="_KKkfJIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKj4EIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKj4E4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKkfI4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKjRCYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKjRDIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKjRCoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKkfJ4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKjRC4V5EemzzojpIDPlJA" name="String s=&quot;p(x,y,x)&quot;;" incoming="_KKjRDIV5EemzzojpIDPlJA" outgoing="_KKj4EoV5EemzzojpIDPlJA" variable="_KKj4EIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKj4EYV5EemzzojpIDPlJA" name="String t=&quot;q(f(a),g(d),y)&quot;;" incoming="_KKj4EoV5EemzzojpIDPlJA" outgoing="_KKj4F4V5EemzzojpIDPlJA" variable="_KKj4E4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKj4FIV5EemzzojpIDPlJA" name="unif=InputParser.parse(s + &quot; =? &quot; + t).get(0);" incoming="_KKj4F4V5EemzzojpIDPlJA" outgoing="_KKj4GoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKj4FYV5EemzzojpIDPlJA" name="0"/>
          <result xmi:id="_KKj4FoV5EemzzojpIDPlJA" name="unif"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKj4GIV5EemzzojpIDPlJA" name="System.out.println(&quot;Before:&quot;);" incoming="_KKj4GoV5EemzzojpIDPlJA" outgoing="_KKj4HYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKj4GYV5EemzzojpIDPlJA" name="&quot;Before:&quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKj4G4V5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + unif.prob.getP().toString());" incoming="_KKj4HYV5EemzzojpIDPlJA" outgoing="_KKj4IIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKj4HIV5EemzzojpIDPlJA" name="&quot;P = &quot; + unif.prob.getP().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKj4HoV5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + unif.prob.getC().toString());" incoming="_KKj4IIV5EemzzojpIDPlJA" outgoing="_KKkfIIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKj4H4V5EemzzojpIDPlJA" name="&quot;C = &quot; + unif.prob.getC().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKj4IYV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + unif.prob.getSigma().toString());" incoming="_KKkfIIV5EemzzojpIDPlJA" outgoing="_KKkfIoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKj4IoV5EemzzojpIDPlJA" name="&quot;s = &quot; + unif.prob.getSigma().toString()"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKkfIYV5EemzzojpIDPlJA" name="boolean result=Algorithms.preUnification(unif);" incoming="_KKkfIoV5EemzzojpIDPlJA" outgoing="_KKkfJoV5EemzzojpIDPlJA" variable="_KKkfI4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKkfJIV5EemzzojpIDPlJA" name="assertTrue(result);" incoming="_KKkfJoV5EemzzojpIDPlJA" outgoing="_KKkfJ4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKkfJYV5EemzzojpIDPlJA" name="result"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKkfKIV5EemzzojpIDPlJA" name="testPreUnification2" specification="_KFgY8IV5EemzzojpIDPlJA" node="_KKlGMIV5EemzzojpIDPlJA _KKlGMYV5EemzzojpIDPlJA _KKlGMoV5EemzzojpIDPlJA _KKlGNYV5EemzzojpIDPlJA _KKlGOIV5EemzzojpIDPlJA _KKlGPIV5EemzzojpIDPlJA _KKlGP4V5EemzzojpIDPlJA _KKltQYV5EemzzojpIDPlJA _KKltRIV5EemzzojpIDPlJA _KKltR4V5EemzzojpIDPlJA _KKltSoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKlGM4V5EemzzojpIDPlJA" name="InitNode_String s=&quot;p(x,x)&quot;;" target="_KKlGMoV5EemzzojpIDPlJA" source="_KKlGMIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKlGNoV5EemzzojpIDPlJA" name="String s=&quot;p(x,x)&quot;;_String t=&quot;q(f(y,y),f(a,c))&quot;;" target="_KKlGNYV5EemzzojpIDPlJA" source="_KKlGMoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKlGO4V5EemzzojpIDPlJA" name="String t=&quot;q(f(y,y),f(a,c))&quot;;_unif=InputParser.parse(s + &quot; =?" target="_KKlGOIV5EemzzojpIDPlJA" source="_KKlGNYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKlGPoV5EemzzojpIDPlJA" name="unif=InputParser.parse(s + &quot; =_System.out.println(&quot;Before:&quot;)" target="_KKlGPIV5EemzzojpIDPlJA" source="_KKlGOIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKltQIV5EemzzojpIDPlJA" name="System.out.println(&quot;Before:&quot;);_System.out.println(&quot;P = &quot; + u" target="_KKlGP4V5EemzzojpIDPlJA" source="_KKlGPIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKltQ4V5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + un_System.out.println(&quot;C = &quot; + u" target="_KKltQYV5EemzzojpIDPlJA" source="_KKlGP4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKltRoV5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + un_System.out.println(&quot;s = &quot; + u" target="_KKltRIV5EemzzojpIDPlJA" source="_KKltQYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKltSIV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + un_boolean result=Algorithms.pre" target="_KKltR4V5EemzzojpIDPlJA" source="_KKltRIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKltTIV5EemzzojpIDPlJA" name="boolean result=Algorithms.preU_assertTrue(result);" target="_KKltSoV5EemzzojpIDPlJA" source="_KKltR4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKltTYV5EemzzojpIDPlJA" name="assertTrue(result);_FinalNode" target="_KKlGMYV5EemzzojpIDPlJA" source="_KKltSoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKlGNIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKlGN4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKltSYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKlGMIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKlGM4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKlGMYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKltTYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKlGMoV5EemzzojpIDPlJA" name="String s=&quot;p(x,x)&quot;;" incoming="_KKlGM4V5EemzzojpIDPlJA" outgoing="_KKlGNoV5EemzzojpIDPlJA" variable="_KKlGNIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKlGNYV5EemzzojpIDPlJA" name="String t=&quot;q(f(y,y),f(a,c))&quot;;" incoming="_KKlGNoV5EemzzojpIDPlJA" outgoing="_KKlGO4V5EemzzojpIDPlJA" variable="_KKlGN4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKlGOIV5EemzzojpIDPlJA" name="unif=InputParser.parse(s + &quot; =? &quot; + t).get(0);" incoming="_KKlGO4V5EemzzojpIDPlJA" outgoing="_KKlGPoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKlGOYV5EemzzojpIDPlJA" name="0"/>
          <result xmi:id="_KKlGOoV5EemzzojpIDPlJA" name="unif"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKlGPIV5EemzzojpIDPlJA" name="System.out.println(&quot;Before:&quot;);" incoming="_KKlGPoV5EemzzojpIDPlJA" outgoing="_KKltQIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKlGPYV5EemzzojpIDPlJA" name="&quot;Before:&quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKlGP4V5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + unif.prob.getP().toString());" incoming="_KKltQIV5EemzzojpIDPlJA" outgoing="_KKltQ4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKlGQIV5EemzzojpIDPlJA" name="&quot;P = &quot; + unif.prob.getP().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKltQYV5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + unif.prob.getC().toString());" incoming="_KKltQ4V5EemzzojpIDPlJA" outgoing="_KKltRoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKltQoV5EemzzojpIDPlJA" name="&quot;C = &quot; + unif.prob.getC().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKltRIV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + unif.prob.getSigma().toString());" incoming="_KKltRoV5EemzzojpIDPlJA" outgoing="_KKltSIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKltRYV5EemzzojpIDPlJA" name="&quot;s = &quot; + unif.prob.getSigma().toString()"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKltR4V5EemzzojpIDPlJA" name="boolean result=Algorithms.preUnification(unif);" incoming="_KKltSIV5EemzzojpIDPlJA" outgoing="_KKltTIV5EemzzojpIDPlJA" variable="_KKltSYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKltSoV5EemzzojpIDPlJA" name="assertTrue(result);" incoming="_KKltTIV5EemzzojpIDPlJA" outgoing="_KKltTYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKltS4V5EemzzojpIDPlJA" name="result"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKmUUIV5EemzzojpIDPlJA" name="testPreUnification3" specification="_KFhnEIV5EemzzojpIDPlJA" node="_KKmUUYV5EemzzojpIDPlJA _KKmUUoV5EemzzojpIDPlJA _KKmUU4V5EemzzojpIDPlJA _KKmUVoV5EemzzojpIDPlJA _KKmUWYV5EemzzojpIDPlJA _KKmUXYV5EemzzojpIDPlJA _KKmUYIV5EemzzojpIDPlJA _KKm7YoV5EemzzojpIDPlJA _KKm7ZYV5EemzzojpIDPlJA _KKm7aIV5EemzzojpIDPlJA _KKm7a4V5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKmUVIV5EemzzojpIDPlJA" name="InitNode_String s=&quot;p(f(x))&quot;;" target="_KKmUU4V5EemzzojpIDPlJA" source="_KKmUUYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKmUV4V5EemzzojpIDPlJA" name="String s=&quot;p(f(x))&quot;;_String t=&quot;q(x)&quot;;" target="_KKmUVoV5EemzzojpIDPlJA" source="_KKmUU4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKmUXIV5EemzzojpIDPlJA" name="String t=&quot;q(x)&quot;;_unif=InputParser.parse(s + &quot; =? &quot; + t).get(" target="_KKmUWYV5EemzzojpIDPlJA" source="_KKmUVoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKmUX4V5EemzzojpIDPlJA" name="unif=InputParser.parse(s + &quot; =_System.out.println(&quot;Before:&quot;)" target="_KKmUXYV5EemzzojpIDPlJA" source="_KKmUWYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKm7YYV5EemzzojpIDPlJA" name="System.out.println(&quot;Before:&quot;);_System.out.println(&quot;P = &quot; + u" target="_KKmUYIV5EemzzojpIDPlJA" source="_KKmUXYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKm7ZIV5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + un_System.out.println(&quot;C = &quot; + u" target="_KKm7YoV5EemzzojpIDPlJA" source="_KKmUYIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKm7Z4V5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + un_System.out.println(&quot;s = &quot; + u" target="_KKm7ZYV5EemzzojpIDPlJA" source="_KKm7YoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKm7aYV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + un_boolean result=Algorithms.pre" target="_KKm7aIV5EemzzojpIDPlJA" source="_KKm7ZYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKm7bYV5EemzzojpIDPlJA" name="boolean result=Algorithms.preU_assertFalse(result);" target="_KKm7a4V5EemzzojpIDPlJA" source="_KKm7aIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKm7boV5EemzzojpIDPlJA" name="assertFalse(result);_FinalNode" target="_KKmUUoV5EemzzojpIDPlJA" source="_KKm7a4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKmUVYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKmUWIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKm7aoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKmUUYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKmUVIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKmUUoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKm7boV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKmUU4V5EemzzojpIDPlJA" name="String s=&quot;p(f(x))&quot;;" incoming="_KKmUVIV5EemzzojpIDPlJA" outgoing="_KKmUV4V5EemzzojpIDPlJA" variable="_KKmUVYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKmUVoV5EemzzojpIDPlJA" name="String t=&quot;q(x)&quot;;" incoming="_KKmUV4V5EemzzojpIDPlJA" outgoing="_KKmUXIV5EemzzojpIDPlJA" variable="_KKmUWIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKmUWYV5EemzzojpIDPlJA" name="unif=InputParser.parse(s + &quot; =? &quot; + t).get(0);" incoming="_KKmUXIV5EemzzojpIDPlJA" outgoing="_KKmUX4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKmUWoV5EemzzojpIDPlJA" name="0"/>
          <result xmi:id="_KKmUW4V5EemzzojpIDPlJA" name="unif"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKmUXYV5EemzzojpIDPlJA" name="System.out.println(&quot;Before:&quot;);" incoming="_KKmUX4V5EemzzojpIDPlJA" outgoing="_KKm7YYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKmUXoV5EemzzojpIDPlJA" name="&quot;Before:&quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKmUYIV5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + unif.prob.getP().toString());" incoming="_KKm7YYV5EemzzojpIDPlJA" outgoing="_KKm7ZIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKm7YIV5EemzzojpIDPlJA" name="&quot;P = &quot; + unif.prob.getP().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKm7YoV5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + unif.prob.getC().toString());" incoming="_KKm7ZIV5EemzzojpIDPlJA" outgoing="_KKm7Z4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKm7Y4V5EemzzojpIDPlJA" name="&quot;C = &quot; + unif.prob.getC().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKm7ZYV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + unif.prob.getSigma().toString());" incoming="_KKm7Z4V5EemzzojpIDPlJA" outgoing="_KKm7aYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKm7ZoV5EemzzojpIDPlJA" name="&quot;s = &quot; + unif.prob.getSigma().toString()"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKm7aIV5EemzzojpIDPlJA" name="boolean result=Algorithms.preUnification(unif);" incoming="_KKm7aYV5EemzzojpIDPlJA" outgoing="_KKm7bYV5EemzzojpIDPlJA" variable="_KKm7aoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKm7a4V5EemzzojpIDPlJA" name="assertFalse(result);" incoming="_KKm7bYV5EemzzojpIDPlJA" outgoing="_KKm7boV5EemzzojpIDPlJA">
          <argument xmi:id="_KKm7bIV5EemzzojpIDPlJA" name="result"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKnicIV5EemzzojpIDPlJA" name="testPreUnification4" specification="_KFi1MIV5EemzzojpIDPlJA" node="_KKnicYV5EemzzojpIDPlJA _KKnicoV5EemzzojpIDPlJA _KKnic4V5EemzzojpIDPlJA _KKnidoV5EemzzojpIDPlJA _KKnieYV5EemzzojpIDPlJA _KKoJgIV5EemzzojpIDPlJA _KKoJg4V5EemzzojpIDPlJA _KKoJhoV5EemzzojpIDPlJA _KKoJiYV5EemzzojpIDPlJA _KKoJjIV5EemzzojpIDPlJA _KKowkoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKnidIV5EemzzojpIDPlJA" name="InitNode_String s=&quot;p(f(x))&quot;;" target="_KKnic4V5EemzzojpIDPlJA" source="_KKnicYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKnid4V5EemzzojpIDPlJA" name="String s=&quot;p(f(x))&quot;;_String t=&quot;q(a,y)&quot;;" target="_KKnidoV5EemzzojpIDPlJA" source="_KKnic4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKnifIV5EemzzojpIDPlJA" name="String t=&quot;q(a,y)&quot;;_unif=InputParser.parse(s + &quot; =? &quot; + t).ge" target="_KKnieYV5EemzzojpIDPlJA" source="_KKnidoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKoJgoV5EemzzojpIDPlJA" name="unif=InputParser.parse(s + &quot; =_System.out.println(&quot;Before:&quot;)" target="_KKoJgIV5EemzzojpIDPlJA" source="_KKnieYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKoJhYV5EemzzojpIDPlJA" name="System.out.println(&quot;Before:&quot;);_System.out.println(&quot;P = &quot; + u" target="_KKoJg4V5EemzzojpIDPlJA" source="_KKoJgIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKoJiIV5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + un_System.out.println(&quot;C = &quot; + u" target="_KKoJhoV5EemzzojpIDPlJA" source="_KKoJg4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKoJi4V5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + un_System.out.println(&quot;s = &quot; + u" target="_KKoJiYV5EemzzojpIDPlJA" source="_KKoJhoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKowkIV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + un_boolean result=Algorithms.pre" target="_KKoJjIV5EemzzojpIDPlJA" source="_KKoJiYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKowlIV5EemzzojpIDPlJA" name="boolean result=Algorithms.preU_assertFalse(result);" target="_KKowkoV5EemzzojpIDPlJA" source="_KKoJjIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKowlYV5EemzzojpIDPlJA" name="assertFalse(result);_FinalNode" target="_KKnicoV5EemzzojpIDPlJA" source="_KKowkoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKnidYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKnieIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKowkYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKnicYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKnidIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKnicoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKowlYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKnic4V5EemzzojpIDPlJA" name="String s=&quot;p(f(x))&quot;;" incoming="_KKnidIV5EemzzojpIDPlJA" outgoing="_KKnid4V5EemzzojpIDPlJA" variable="_KKnidYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKnidoV5EemzzojpIDPlJA" name="String t=&quot;q(a,y)&quot;;" incoming="_KKnid4V5EemzzojpIDPlJA" outgoing="_KKnifIV5EemzzojpIDPlJA" variable="_KKnieIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKnieYV5EemzzojpIDPlJA" name="unif=InputParser.parse(s + &quot; =? &quot; + t).get(0);" incoming="_KKnifIV5EemzzojpIDPlJA" outgoing="_KKoJgoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKnieoV5EemzzojpIDPlJA" name="0"/>
          <result xmi:id="_KKnie4V5EemzzojpIDPlJA" name="unif"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKoJgIV5EemzzojpIDPlJA" name="System.out.println(&quot;Before:&quot;);" incoming="_KKoJgoV5EemzzojpIDPlJA" outgoing="_KKoJhYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKoJgYV5EemzzojpIDPlJA" name="&quot;Before:&quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKoJg4V5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + unif.prob.getP().toString());" incoming="_KKoJhYV5EemzzojpIDPlJA" outgoing="_KKoJiIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKoJhIV5EemzzojpIDPlJA" name="&quot;P = &quot; + unif.prob.getP().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKoJhoV5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + unif.prob.getC().toString());" incoming="_KKoJiIV5EemzzojpIDPlJA" outgoing="_KKoJi4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKoJh4V5EemzzojpIDPlJA" name="&quot;C = &quot; + unif.prob.getC().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKoJiYV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + unif.prob.getSigma().toString());" incoming="_KKoJi4V5EemzzojpIDPlJA" outgoing="_KKowkIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKoJioV5EemzzojpIDPlJA" name="&quot;s = &quot; + unif.prob.getSigma().toString()"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKoJjIV5EemzzojpIDPlJA" name="boolean result=Algorithms.preUnification(unif);" incoming="_KKowkIV5EemzzojpIDPlJA" outgoing="_KKowlIV5EemzzojpIDPlJA" variable="_KKowkYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKowkoV5EemzzojpIDPlJA" name="assertFalse(result);" incoming="_KKowlIV5EemzzojpIDPlJA" outgoing="_KKowlYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKowk4V5EemzzojpIDPlJA" name="result"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKowloV5EemzzojpIDPlJA" name="testPreUnification5" specification="_KFkDUIV5EemzzojpIDPlJA" node="_KKowl4V5EemzzojpIDPlJA _KKowmIV5EemzzojpIDPlJA _KKowmYV5EemzzojpIDPlJA _KKownIV5EemzzojpIDPlJA _KKown4V5EemzzojpIDPlJA _KKpXooV5EemzzojpIDPlJA _KKpXpYV5EemzzojpIDPlJA _KKpXqIV5EemzzojpIDPlJA _KKpXq4V5EemzzojpIDPlJA _KKp-sIV5EemzzojpIDPlJA _KKp-s4V5EemzzojpIDPlJA _KKp-toV5EemzzojpIDPlJA _KKp-t4V5EemzzojpIDPlJA _KKp-vIV5EemzzojpIDPlJA _KKqlwoV5EemzzojpIDPlJA _KKqlxYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKowmoV5EemzzojpIDPlJA" name="InitNode_String s=&quot;p(x,y,x)&quot;;" target="_KKowmYV5EemzzojpIDPlJA" source="_KKowl4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKownYV5EemzzojpIDPlJA" name="String s=&quot;p(x,y,x)&quot;;_String t=&quot;q(f(a),g(d),y)&quot;;" target="_KKownIV5EemzzojpIDPlJA" source="_KKowmYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKpXoYV5EemzzojpIDPlJA" name="String t=&quot;q(f(a),g(d),y)&quot;;_unif=InputParser.parse(s + &quot; =? &quot;" target="_KKown4V5EemzzojpIDPlJA" source="_KKownIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKpXo4V5EemzzojpIDPlJA" name="unif=InputParser.parse(s + &quot; =_StringBuffer step=new StringB" target="_KKpXooV5EemzzojpIDPlJA" source="_KKown4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKpXp4V5EemzzojpIDPlJA" name="StringBuffer step=new StringBu_System.out.println(&quot;Before:&quot;)" target="_KKpXpYV5EemzzojpIDPlJA" source="_KKpXooV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKpXqoV5EemzzojpIDPlJA" name="System.out.println(&quot;Before:&quot;);_System.out.println(&quot;P = &quot; + u" target="_KKpXqIV5EemzzojpIDPlJA" source="_KKpXpYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKpXrYV5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + un_System.out.println(&quot;C = &quot; + u" target="_KKpXq4V5EemzzojpIDPlJA" source="_KKpXqIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKp-soV5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + un_System.out.println(&quot;s = &quot; + u" target="_KKp-sIV5EemzzojpIDPlJA" source="_KKpXq4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKp-tIV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + un_boolean result=Algorithms.pre" target="_KKp-s4V5EemzzojpIDPlJA" source="_KKp-sIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKp-uIV5EemzzojpIDPlJA" name="boolean result=Algorithms.preU_If_0_cond" target="_KKp-toV5EemzzojpIDPlJA" source="_KKp-s4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKp-uYV5EemzzojpIDPlJA" name="If_0_else" target="_KKp-t4V5EemzzojpIDPlJA" source="_KKp-toV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKp-u4V5EemzzojpIDPlJA" value="else"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKqlwIV5EemzzojpIDPlJA" name="If_0_cond_step.delete(step.length() - 2,step.length() - 1);" target="_KKp-vIV5EemzzojpIDPlJA" source="_KKp-toV5EemzzojpIDPlJA">
          <guard xmi:type="uml:LiteralString" xmi:id="_KKp-uoV5EemzzojpIDPlJA" value="step.length() > 0"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKqlwYV5EemzzojpIDPlJA" name="step.delete(step.length() - 2,_If_0_merge" target="_KKp-t4V5EemzzojpIDPlJA" source="_KKp-vIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKqlxIV5EemzzojpIDPlJA" name="If_0_merge_System.out.println(step);" target="_KKqlwoV5EemzzojpIDPlJA" source="_KKp-t4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKqlx4V5EemzzojpIDPlJA" name="System.out.println(step);_assertTrue(result);" target="_KKqlxYV5EemzzojpIDPlJA" source="_KKqlwoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKqlyIV5EemzzojpIDPlJA" name="assertTrue(result);_FinalNode" target="_KKowmIV5EemzzojpIDPlJA" source="_KKqlxYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKowm4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKownoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKpXpIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKp-tYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKowl4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KKowmoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKowmIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKqlyIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKowmYV5EemzzojpIDPlJA" name="String s=&quot;p(x,y,x)&quot;;" incoming="_KKowmoV5EemzzojpIDPlJA" outgoing="_KKownYV5EemzzojpIDPlJA" variable="_KKowm4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKownIV5EemzzojpIDPlJA" name="String t=&quot;q(f(a),g(d),y)&quot;;" incoming="_KKownYV5EemzzojpIDPlJA" outgoing="_KKpXoYV5EemzzojpIDPlJA" variable="_KKownoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKown4V5EemzzojpIDPlJA" name="unif=InputParser.parse(s + &quot; =? &quot; + t).get(0);" incoming="_KKpXoYV5EemzzojpIDPlJA" outgoing="_KKpXo4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKowoIV5EemzzojpIDPlJA" name="0"/>
          <result xmi:id="_KKpXoIV5EemzzojpIDPlJA" name="unif"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKpXooV5EemzzojpIDPlJA" name="StringBuffer step=new StringBuffer();" incoming="_KKpXo4V5EemzzojpIDPlJA" outgoing="_KKpXp4V5EemzzojpIDPlJA" variable="_KKpXpIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKpXpYV5EemzzojpIDPlJA" name="System.out.println(&quot;Before:&quot;);" incoming="_KKpXp4V5EemzzojpIDPlJA" outgoing="_KKpXqoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKpXpoV5EemzzojpIDPlJA" name="&quot;Before:&quot;"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKpXqIV5EemzzojpIDPlJA" name="System.out.println(&quot;P = &quot; + unif.prob.getP().toString());" incoming="_KKpXqoV5EemzzojpIDPlJA" outgoing="_KKpXrYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKpXqYV5EemzzojpIDPlJA" name="&quot;P = &quot; + unif.prob.getP().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKpXq4V5EemzzojpIDPlJA" name="System.out.println(&quot;C = &quot; + unif.prob.getC().toString());" incoming="_KKpXrYV5EemzzojpIDPlJA" outgoing="_KKp-soV5EemzzojpIDPlJA">
          <argument xmi:id="_KKpXrIV5EemzzojpIDPlJA" name="&quot;C = &quot; + unif.prob.getC().toString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKp-sIV5EemzzojpIDPlJA" name="System.out.println(&quot;s = &quot; + unif.prob.getSigma().toString());" incoming="_KKp-soV5EemzzojpIDPlJA" outgoing="_KKp-tIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKp-sYV5EemzzojpIDPlJA" name="&quot;s = &quot; + unif.prob.getSigma().toString()"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKp-s4V5EemzzojpIDPlJA" name="boolean result=Algorithms.preUnification(unif,step);" incoming="_KKp-tIV5EemzzojpIDPlJA" outgoing="_KKp-uIV5EemzzojpIDPlJA" variable="_KKp-tYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_KKp-toV5EemzzojpIDPlJA" name="If_0_cond" incoming="_KKp-uIV5EemzzojpIDPlJA" outgoing="_KKp-uYV5EemzzojpIDPlJA _KKqlwIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_KKp-t4V5EemzzojpIDPlJA" name="If_0_merge" incoming="_KKp-uYV5EemzzojpIDPlJA _KKqlwYV5EemzzojpIDPlJA" outgoing="_KKqlxIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKp-vIV5EemzzojpIDPlJA" name="step.delete(step.length() - 2,step.length() - 1);" incoming="_KKqlwIV5EemzzojpIDPlJA" outgoing="_KKqlwYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKp-vYV5EemzzojpIDPlJA" name="step.length() - 2"/>
          <argument xmi:id="_KKp-voV5EemzzojpIDPlJA" name="step.length() - 1"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKqlwoV5EemzzojpIDPlJA" name="System.out.println(step);" incoming="_KKqlxIV5EemzzojpIDPlJA" outgoing="_KKqlx4V5EemzzojpIDPlJA">
          <argument xmi:id="_KKqlw4V5EemzzojpIDPlJA" name="step"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKqlxYV5EemzzojpIDPlJA" name="assertTrue(result);" incoming="_KKqlx4V5EemzzojpIDPlJA" outgoing="_KKqlyIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKqlxoV5EemzzojpIDPlJA" name="result"/>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_KFdVoIV5EemzzojpIDPlJA" name="setUp" method="_KKip8IV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFdVoYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFdVooV5EemzzojpIDPlJA" key="documentation" value=" @throws java.lang.Exception&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFejwIV5EemzzojpIDPlJA" name="tearDown" method="_KKip9IV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFejwYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFejwoV5EemzzojpIDPlJA" key="documentation" value=" @throws java.lang.Exception&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFfK0IV5EemzzojpIDPlJA" name="testPreUnification1" method="_KKjRCIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFfK0YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFfK0oV5EemzzojpIDPlJA" key="documentation" value=" Test method for {@link unificationProblem.Algorithms#preUnification(unificationProblem.UnificationProblem)}.&#xD;&#xA; Tests &quot;Example 4&quot;.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFgY8IV5EemzzojpIDPlJA" name="testPreUnification2" method="_KKkfKIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFgY8YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFgY8oV5EemzzojpIDPlJA" key="documentation" value=" Test method for {@link unificationProblem.Algorithms#preUnification(unificationProblem.UnificationProblem)}.&#xD;&#xA; Tests Example 5.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFhnEIV5EemzzojpIDPlJA" name="testPreUnification3" method="_KKmUUIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFhnEYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFhnEoV5EemzzojpIDPlJA" key="documentation" value=" Test method for {@link unificationProblem.Algorithms#preUnification(unificationProblem.UnificationProblem)}.&#xD;&#xA; Tests FAIL from (Occ).&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFi1MIV5EemzzojpIDPlJA" name="testPreUnification4" method="_KKnicIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFi1MYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFi1MoV5EemzzojpIDPlJA" key="documentation" value=" Test method for {@link unificationProblem.Algorithms#preUnification(unificationProblem.UnificationProblem)}.&#xD;&#xA; Tests FAIL from (Cla).&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFkDUIV5EemzzojpIDPlJA" name="testPreUnification5" method="_KKowloV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFkDUYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFkDUoV5EemzzojpIDPlJA" key="documentation" value=" Test method for {@link unificationProblem.&#xD;&#xA; Algorithms#preUnification(unificationProblem.UnificationProblem, PrintStream)}.&#xD;&#xA; @throws FileNotFoundException ignored&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J6mwg4V5EemzzojpIDPlJA" name="InputParserTest" visibility="package">
      <eAnnotations xmi:id="_J6mwhIV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
        <details xmi:id="_J6mwhYV5EemzzojpIDPlJA" key="documentation" value=" Test Cases for InputParser.&#xD;&#xA; @author Jan-Michael Holzinger &amp;amp; Sophie Hofmanninger&#xD;&#xA; @version 1.0&#xD;&#xA;"/>
      </eAnnotations>
      <elementImport xmi:id="_KFlRcYV5EemzzojpIDPlJA" importedElement="_J97KQYV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KFlRcoV5EemzzojpIDPlJA" importedElement="_J-ej4oV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KFlRc4V5EemzzojpIDPlJA" importedElement="_J-fK8YV5EemzzojpIDPlJA" visibility="private"/>
      <elementImport xmi:id="_KFlRdIV5EemzzojpIDPlJA" importedElement="_J-fyAYV5EemzzojpIDPlJA" visibility="private"/>
      <packageImport xmi:id="_KFlRcIV5EemzzojpIDPlJA" importedPackage="_J6rB9IV5EemzzojpIDPlJA" visibility="private"/>
      <ownedAttribute xmi:id="_KFlRdYV5EemzzojpIDPlJA" name="s">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_KFl4gIV5EemzzojpIDPlJA" name="t">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_KFl4gYV5EemzzojpIDPlJA" name="u">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_KFl4goV5EemzzojpIDPlJA" name="v">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKtCAIV5EemzzojpIDPlJA" name="setUp" specification="_KFmfkIV5EemzzojpIDPlJA" node="_KKtCAYV5EemzzojpIDPlJA _KKtCAoV5EemzzojpIDPlJA _KKtCA4V5EemzzojpIDPlJA _KKtpEIV5EemzzojpIDPlJA _KKtpEoV5EemzzojpIDPlJA _KKtpFIV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKtCBIV5EemzzojpIDPlJA" name="InitNode_s=&quot;p(x,y,x)&quot;;" target="_KKtCA4V5EemzzojpIDPlJA" source="_KKtCAYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKtpEYV5EemzzojpIDPlJA" name="s=&quot;p(x,y,x)&quot;;_t=&quot;q(f(a),g(d),y)&quot;;" target="_KKtpEIV5EemzzojpIDPlJA" source="_KKtCA4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKtpE4V5EemzzojpIDPlJA" name="t=&quot;q(f(a),g(d),y)&quot;;_u=&quot;p(x,x)&quot;;" target="_KKtpEoV5EemzzojpIDPlJA" source="_KKtpEIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKtpFYV5EemzzojpIDPlJA" name="u=&quot;p(x,x)&quot;;_v=&quot;q(f(y,y),f(a,c))&quot;;" target="_KKtpFIV5EemzzojpIDPlJA" source="_KKtpEoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKtpFoV5EemzzojpIDPlJA" name="v=&quot;q(f(y,y),f(a,c))&quot;;_FinalNode" target="_KKtCAoV5EemzzojpIDPlJA" source="_KKtpFIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKtCAYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKtCBIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKtCAoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKtpFoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKtCA4V5EemzzojpIDPlJA" name="s=&quot;p(x,y,x)&quot;;" incoming="_KKtCBIV5EemzzojpIDPlJA" outgoing="_KKtpEYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>s=&quot;p(x,y,x)&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKtpEIV5EemzzojpIDPlJA" name="t=&quot;q(f(a),g(d),y)&quot;;" incoming="_KKtpEYV5EemzzojpIDPlJA" outgoing="_KKtpE4V5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>t=&quot;q(f(a),g(d),y)&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKtpEoV5EemzzojpIDPlJA" name="u=&quot;p(x,x)&quot;;" incoming="_KKtpE4V5EemzzojpIDPlJA" outgoing="_KKtpFYV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>u=&quot;p(x,x)&quot;;
</body>
        </node>
        <node xmi:type="uml:OpaqueAction" xmi:id="_KKtpFIV5EemzzojpIDPlJA" name="v=&quot;q(f(y,y),f(a,c))&quot;;" incoming="_KKtpFYV5EemzzojpIDPlJA" outgoing="_KKtpFoV5EemzzojpIDPlJA">
          <language>JAVA</language>
          <body>v=&quot;q(f(y,y),f(a,c))&quot;;
</body>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKtpF4V5EemzzojpIDPlJA" name="tearDown" specification="_KFntsIV5EemzzojpIDPlJA" node="_KKtpGIV5EemzzojpIDPlJA _KKtpGYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKtpGoV5EemzzojpIDPlJA" name="InitNode_FinalNode" target="_KKtpGYV5EemzzojpIDPlJA" source="_KKtpGIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKtpGIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKtpGoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKtpGYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKtpGoV5EemzzojpIDPlJA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKtpG4V5EemzzojpIDPlJA" name="testParseNormal1_1" specification="_KFoUwIV5EemzzojpIDPlJA" node="_KKtpHIV5EemzzojpIDPlJA _KKtpHYV5EemzzojpIDPlJA _KKtpHoV5EemzzojpIDPlJA _KKuQIoV5EemzzojpIDPlJA _KKuQJYV5EemzzojpIDPlJA _KKuQKYV5EemzzojpIDPlJA _KKuQLYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKuQIIV5EemzzojpIDPlJA" name="InitNode_String test1=s + &quot; =? &quot; + t;" target="_KKtpHoV5EemzzojpIDPlJA" source="_KKtpHIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKuQI4V5EemzzojpIDPlJA" name="String test1=s + &quot; =? &quot; + t;_UnificationProblem unif1=InputP" target="_KKuQIoV5EemzzojpIDPlJA" source="_KKtpHoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKuQKIV5EemzzojpIDPlJA" name="UnificationProblem unif1=Input_assertEquals(6,unif1.getNumbe" target="_KKuQJYV5EemzzojpIDPlJA" source="_KKuQIoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKuQLIV5EemzzojpIDPlJA" name="assertEquals(6,unif1.getNumber_assertEquals(s,unif1.getLeft(" target="_KKuQKYV5EemzzojpIDPlJA" source="_KKuQJYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKuQMIV5EemzzojpIDPlJA" name="assertEquals(s,unif1.getLeft()_assertEquals(3,unif1.getNumbe" target="_KKuQLYV5EemzzojpIDPlJA" source="_KKuQKYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKuQMYV5EemzzojpIDPlJA" name="assertEquals(3,unif1.getNumber_FinalNode" target="_KKtpHYV5EemzzojpIDPlJA" source="_KKuQLYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKuQIYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKuQJIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKtpHIV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKuQIIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKtpHYV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKuQMYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKtpHoV5EemzzojpIDPlJA" name="String test1=s + &quot; =? &quot; + t;" incoming="_KKuQIIV5EemzzojpIDPlJA" outgoing="_KKuQI4V5EemzzojpIDPlJA" variable="_KKuQIYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKuQIoV5EemzzojpIDPlJA" name="UnificationProblem unif1=InputParser.parse(test1).get(0);" incoming="_KKuQI4V5EemzzojpIDPlJA" outgoing="_KKuQKIV5EemzzojpIDPlJA" variable="_KKuQJIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKuQJYV5EemzzojpIDPlJA" name="assertEquals(6,unif1.getNumberOfFunctions());" incoming="_KKuQKIV5EemzzojpIDPlJA" outgoing="_KKuQLIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKuQJoV5EemzzojpIDPlJA" name="6"/>
          <argument xmi:id="_KKuQJ4V5EemzzojpIDPlJA" name="unif1.getNumberOfFunctions()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKuQKYV5EemzzojpIDPlJA" name="assertEquals(s,unif1.getLeft().toFullString());" incoming="_KKuQLIV5EemzzojpIDPlJA" outgoing="_KKuQMIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKuQKoV5EemzzojpIDPlJA" name="s"/>
          <argument xmi:id="_KKuQK4V5EemzzojpIDPlJA" name="unif1.getLeft().toFullString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKuQLYV5EemzzojpIDPlJA" name="assertEquals(3,unif1.getNumberOfOpenCases());" incoming="_KKuQMIV5EemzzojpIDPlJA" outgoing="_KKuQMYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKuQLoV5EemzzojpIDPlJA" name="3"/>
          <argument xmi:id="_KKuQL4V5EemzzojpIDPlJA" name="unif1.getNumberOfOpenCases()"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKuQMoV5EemzzojpIDPlJA" name="testParseNormal1_2" specification="_KFo70IV5EemzzojpIDPlJA" node="_KKuQM4V5EemzzojpIDPlJA _KKuQNIV5EemzzojpIDPlJA _KKu3MIV5EemzzojpIDPlJA _KKu3M4V5EemzzojpIDPlJA _KKu3NoV5EemzzojpIDPlJA _KKu3OoV5EemzzojpIDPlJA _KKu3PoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKu3MYV5EemzzojpIDPlJA" name="InitNode_String test1=u + &quot; =? &quot; + v;" target="_KKu3MIV5EemzzojpIDPlJA" source="_KKuQM4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKu3NIV5EemzzojpIDPlJA" name="String test1=u + &quot; =? &quot; + v;_UnificationProblem unif1=InputP" target="_KKu3M4V5EemzzojpIDPlJA" source="_KKu3MIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKu3OYV5EemzzojpIDPlJA" name="UnificationProblem unif1=Input_assertEquals(5,unif1.getNumbe" target="_KKu3NoV5EemzzojpIDPlJA" source="_KKu3M4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKu3PYV5EemzzojpIDPlJA" name="assertEquals(5,unif1.getNumber_assertEquals(u,unif1.getLeft(" target="_KKu3OoV5EemzzojpIDPlJA" source="_KKu3NoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKu3QYV5EemzzojpIDPlJA" name="assertEquals(u,unif1.getLeft()_assertEquals(4,unif1.getNumbe" target="_KKu3PoV5EemzzojpIDPlJA" source="_KKu3OoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKu3QoV5EemzzojpIDPlJA" name="assertEquals(4,unif1.getNumber_FinalNode" target="_KKuQNIV5EemzzojpIDPlJA" source="_KKu3PoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKu3MoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKu3NYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKuQM4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KKu3MYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKuQNIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKu3QoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKu3MIV5EemzzojpIDPlJA" name="String test1=u + &quot; =? &quot; + v;" incoming="_KKu3MYV5EemzzojpIDPlJA" outgoing="_KKu3NIV5EemzzojpIDPlJA" variable="_KKu3MoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKu3M4V5EemzzojpIDPlJA" name="UnificationProblem unif1=InputParser.parse(test1).get(0);" incoming="_KKu3NIV5EemzzojpIDPlJA" outgoing="_KKu3OYV5EemzzojpIDPlJA" variable="_KKu3NYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKu3NoV5EemzzojpIDPlJA" name="assertEquals(5,unif1.getNumberOfFunctions());" incoming="_KKu3OYV5EemzzojpIDPlJA" outgoing="_KKu3PYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKu3N4V5EemzzojpIDPlJA" name="5"/>
          <argument xmi:id="_KKu3OIV5EemzzojpIDPlJA" name="unif1.getNumberOfFunctions()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKu3OoV5EemzzojpIDPlJA" name="assertEquals(u,unif1.getLeft().toFullString());" incoming="_KKu3PYV5EemzzojpIDPlJA" outgoing="_KKu3QYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKu3O4V5EemzzojpIDPlJA" name="u"/>
          <argument xmi:id="_KKu3PIV5EemzzojpIDPlJA" name="unif1.getLeft().toFullString()"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKu3PoV5EemzzojpIDPlJA" name="assertEquals(4,unif1.getNumberOfOpenCases());" incoming="_KKu3QYV5EemzzojpIDPlJA" outgoing="_KKu3QoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKu3P4V5EemzzojpIDPlJA" name="4"/>
          <argument xmi:id="_KKu3QIV5EemzzojpIDPlJA" name="unif1.getNumberOfOpenCases()"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKveQIV5EemzzojpIDPlJA" name="testParseNormal2_1" specification="_KFpi4IV5EemzzojpIDPlJA" node="_KKveQYV5EemzzojpIDPlJA _KKveQoV5EemzzojpIDPlJA _KKveQ4V5EemzzojpIDPlJA _KKveRoV5EemzzojpIDPlJA _KKveSYV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKveRIV5EemzzojpIDPlJA" name="InitNode_String test2=s + &quot; = &quot; + t;" target="_KKveQ4V5EemzzojpIDPlJA" source="_KKveQYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKveR4V5EemzzojpIDPlJA" name="String test2=s + &quot; = &quot; + t;_UnificationProblem unif2=InputPa" target="_KKveRoV5EemzzojpIDPlJA" source="_KKveQ4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKveTIV5EemzzojpIDPlJA" name="UnificationProblem unif2=Input_assertEquals(6,unif2.getNumbe" target="_KKveSYV5EemzzojpIDPlJA" source="_KKveRoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKveTYV5EemzzojpIDPlJA" name="assertEquals(6,unif2.getNumber_FinalNode" target="_KKveQoV5EemzzojpIDPlJA" source="_KKveSYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKveRYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKveSIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKveQYV5EemzzojpIDPlJA" name="InitNode" outgoing="_KKveRIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKveQoV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKveTYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKveQ4V5EemzzojpIDPlJA" name="String test2=s + &quot; = &quot; + t;" incoming="_KKveRIV5EemzzojpIDPlJA" outgoing="_KKveR4V5EemzzojpIDPlJA" variable="_KKveRYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKveRoV5EemzzojpIDPlJA" name="UnificationProblem unif2=InputParser.parse(test2).get(0);" incoming="_KKveR4V5EemzzojpIDPlJA" outgoing="_KKveTIV5EemzzojpIDPlJA" variable="_KKveSIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKveSYV5EemzzojpIDPlJA" name="assertEquals(6,unif2.getNumberOfFunctions());" incoming="_KKveTIV5EemzzojpIDPlJA" outgoing="_KKveTYV5EemzzojpIDPlJA">
          <argument xmi:id="_KKveSoV5EemzzojpIDPlJA" name="6"/>
          <argument xmi:id="_KKveS4V5EemzzojpIDPlJA" name="unif2.getNumberOfFunctions()"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_KKveToV5EemzzojpIDPlJA" name="testParseNormal3" specification="_KFqxAIV5EemzzojpIDPlJA" node="_KKveT4V5EemzzojpIDPlJA _KKveUIV5EemzzojpIDPlJA _KKveUYV5EemzzojpIDPlJA _KKwFUoV5EemzzojpIDPlJA _KKwFVYV5EemzzojpIDPlJA _KKwFWYV5EemzzojpIDPlJA _KKwFXIV5EemzzojpIDPlJA _KKwFX4V5EemzzojpIDPlJA _KKwFYoV5EemzzojpIDPlJA">
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKwFUIV5EemzzojpIDPlJA" name="InitNode_String test3=s + &quot; =? &quot; + t+ &quot;;&quot;+ s+ &quot; = &quot;+ t;" target="_KKveUYV5EemzzojpIDPlJA" source="_KKveT4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKwFU4V5EemzzojpIDPlJA" name="String test3=s + &quot; =? &quot; + t+ &quot;_ArrayList&lt;UnificationProblem>" target="_KKwFUoV5EemzzojpIDPlJA" source="_KKveUYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKwFWIV5EemzzojpIDPlJA" name="ArrayList&lt;UnificationProblem> _assertEquals(2,twoProblems.si" target="_KKwFVYV5EemzzojpIDPlJA" source="_KKwFUoV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKwFWoV5EemzzojpIDPlJA" name="assertEquals(2,twoProblems.siz_UnificationProblem unif1=twoP" target="_KKwFWYV5EemzzojpIDPlJA" source="_KKwFVYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKwFXYV5EemzzojpIDPlJA" name="UnificationProblem unif1=twoPr_UnificationProblem unif2=twoP" target="_KKwFXIV5EemzzojpIDPlJA" source="_KKwFWYV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKwFYYV5EemzzojpIDPlJA" name="UnificationProblem unif2=twoPr_assertTrue(unif1.getLeft().eq" target="_KKwFX4V5EemzzojpIDPlJA" source="_KKwFXIV5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKwFZIV5EemzzojpIDPlJA" name="assertTrue(unif1.getLeft().equ_assertTrue(unif1.getRight().e" target="_KKwFYoV5EemzzojpIDPlJA" source="_KKwFX4V5EemzzojpIDPlJA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_KKwsYIV5EemzzojpIDPlJA" name="assertTrue(unif1.getRight().eq_FinalNode" target="_KKveUIV5EemzzojpIDPlJA" source="_KKwFYoV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKwFUYV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKwFVIV5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKwFW4V5EemzzojpIDPlJA"/>
        <variable xmi:id="_KKwFXoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:InitialNode" xmi:id="_KKveT4V5EemzzojpIDPlJA" name="InitNode" outgoing="_KKwFUIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_KKveUIV5EemzzojpIDPlJA" name="FinalNode" incoming="_KKwsYIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKveUYV5EemzzojpIDPlJA" name="String test3=s + &quot; =? &quot; + t+ &quot;;&quot;+ s+ &quot; = &quot;+ t;" incoming="_KKwFUIV5EemzzojpIDPlJA" outgoing="_KKwFU4V5EemzzojpIDPlJA" variable="_KKwFUYV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKwFUoV5EemzzojpIDPlJA" name="ArrayList&lt;UnificationProblem> twoProblems=InputParser.parse(test3);" incoming="_KKwFU4V5EemzzojpIDPlJA" outgoing="_KKwFWIV5EemzzojpIDPlJA" variable="_KKwFVIV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKwFVYV5EemzzojpIDPlJA" name="assertEquals(2,twoProblems.size());" incoming="_KKwFWIV5EemzzojpIDPlJA" outgoing="_KKwFWoV5EemzzojpIDPlJA">
          <argument xmi:id="_KKwFVoV5EemzzojpIDPlJA" name="2"/>
          <argument xmi:id="_KKwFV4V5EemzzojpIDPlJA" name="twoProblems.size()"/>
        </node>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKwFWYV5EemzzojpIDPlJA" name="UnificationProblem unif1=twoProblems.get(0);" incoming="_KKwFWoV5EemzzojpIDPlJA" outgoing="_KKwFXYV5EemzzojpIDPlJA" variable="_KKwFW4V5EemzzojpIDPlJA"/>
        <node xmi:type="uml:AddVariableValueAction" xmi:id="_KKwFXIV5EemzzojpIDPlJA" name="UnificationProblem unif2=twoProblems.get(1);" incoming="_KKwFXYV5EemzzojpIDPlJA" outgoing="_KKwFYYV5EemzzojpIDPlJA" variable="_KKwFXoV5EemzzojpIDPlJA"/>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKwFX4V5EemzzojpIDPlJA" name="assertTrue(unif1.getLeft().equals(unif2.getLeft()));" incoming="_KKwFYYV5EemzzojpIDPlJA" outgoing="_KKwFZIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKwFYIV5EemzzojpIDPlJA" name="unif1.getLeft().equals(unif2.getLeft())"/>
        </node>
        <node xmi:type="uml:CallOperationAction" xmi:id="_KKwFYoV5EemzzojpIDPlJA" name="assertTrue(unif1.getRight().equals(unif2.getRight()));" incoming="_KKwFZIV5EemzzojpIDPlJA" outgoing="_KKwsYIV5EemzzojpIDPlJA">
          <argument xmi:id="_KKwFY4V5EemzzojpIDPlJA" name="unif1.getRight().equals(unif2.getRight())"/>
        </node>
      </ownedBehavior>
      <ownedOperation xmi:id="_KFmfkIV5EemzzojpIDPlJA" name="setUp" method="_KKtCAIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFmfkYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFmfkoV5EemzzojpIDPlJA" key="documentation" value=" @throws java.lang.Exception ignored &#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFntsIV5EemzzojpIDPlJA" name="tearDown" method="_KKtpF4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFntsYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFntsoV5EemzzojpIDPlJA" key="documentation" value=" @throws java.lang.Exception ignored&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFoUwIV5EemzzojpIDPlJA" name="testParseNormal1_1" method="_KKtpG4V5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFoUwYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFoUwoV5EemzzojpIDPlJA" key="documentation" value=" Test normal input with &quot;=?&quot;&#xD;&#xA; Test method for {@link unificationProblem.InputParser#parse(java.lang.String)}.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFo70IV5EemzzojpIDPlJA" name="testParseNormal1_2" method="_KKuQMoV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFo70YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFo70oV5EemzzojpIDPlJA" key="documentation" value=" Test normal input with &quot;=?&quot;&#xD;&#xA; Test method for {@link unificationProblem.InputParser#parse(java.lang.String)}.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFpi4IV5EemzzojpIDPlJA" name="testParseNormal2_1" method="_KKveQIV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFpi4YV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFpi4oV5EemzzojpIDPlJA" key="documentation" value=" Test normal input with &quot;=&quot;&#xD;&#xA; Test method for {@link unificationProblem.InputParser#parse(java.lang.String)}.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
      <ownedOperation xmi:id="_KFqxAIV5EemzzojpIDPlJA" name="testParseNormal3" method="_KKveToV5EemzzojpIDPlJA">
        <eAnnotations xmi:id="_KFqxAYV5EemzzojpIDPlJA" source="http://www.eclipse.org/umlgen/reverse/java/doc">
          <details xmi:id="_KFqxAoV5EemzzojpIDPlJA" key="documentation" value=" Test normal input with more than 1 equation.&#xD;&#xA; Test method for {@link unificationProblem.InputParser#parse(java.lang.String)}.&#xD;&#xA;&#x9;"/>
        </eAnnotations>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFsmOIV5EemzzojpIDPlJA" name="unificationProblem_util" client="_J6kURoV5EemzzojpIDPlJA" supplier="_J97KQIV5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFtNQIV5EemzzojpIDPlJA" name="unificationProblem_elements" client="_J6kURoV5EemzzojpIDPlJA" supplier="_J6hQ8IV5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFtNQYV5EemzzojpIDPlJA" name="unificationProblem_tool" client="_J6kURoV5EemzzojpIDPlJA" supplier="_J6ifE4V5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFtNQoV5EemzzojpIDPlJA" name="unificationProblem_unificationProblem" client="_J6kURoV5EemzzojpIDPlJA" supplier="_J6kURoV5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFtNQ4V5EemzzojpIDPlJA" name="unificationProblem_Assertions" client="_J6kURoV5EemzzojpIDPlJA" supplier="_J6rB9IV5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFtNRIV5EemzzojpIDPlJA" name="unificationProblem_io" client="_J6kURoV5EemzzojpIDPlJA" supplier="_KFZrQYV5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Usage" xmi:id="_KFtNRYV5EemzzojpIDPlJA" name="unificationProblem_api" client="_J6kURoV5EemzzojpIDPlJA" supplier="_J6rB84V5EemzzojpIDPlJA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFtNRoV5EemzzojpIDPlJA" name="right_target" memberEnd="_KB32IIV5EemzzojpIDPlJA _KFtNR4V5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFtNR4V5EemzzojpIDPlJA" name="target" type="_J6k7UIV5EemzzojpIDPlJA" association="_KFtNRoV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFtNSIV5EemzzojpIDPlJA" name="left_target" memberEnd="_KB5EQIV5EemzzojpIDPlJA _KFtNSYV5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFtNSYV5EemzzojpIDPlJA" name="target" type="_J6k7UIV5EemzzojpIDPlJA" association="_KFtNSIV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFtNSoV5EemzzojpIDPlJA" name="sortedListOfFunctions_target" memberEnd="_KB8HkIV5EemzzojpIDPlJA _KFtNS4V5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFtNS4V5EemzzojpIDPlJA" name="target" type="_J6k7UIV5EemzzojpIDPlJA" association="_KFtNSoV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFtNTIV5EemzzojpIDPlJA" name="proximityRelations_target" memberEnd="_KB98wIV5EemzzojpIDPlJA _KFtNTYV5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFtNTYV5EemzzojpIDPlJA" name="target" type="_J6k7UIV5EemzzojpIDPlJA" association="_KFtNTIV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFtNToV5EemzzojpIDPlJA" name="openCases_target" memberEnd="_KCBAEIV5EemzzojpIDPlJA _KFtNT4V5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFtNT4V5EemzzojpIDPlJA" name="target" type="_J6k7UIV5EemzzojpIDPlJA" association="_KFtNToV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFtNUIV5EemzzojpIDPlJA" name="prob_target" memberEnd="_KCC1QIV5EemzzojpIDPlJA _KFtNUYV5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFtNUYV5EemzzojpIDPlJA" name="target" type="_J6k7UIV5EemzzojpIDPlJA" association="_KFtNUIV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFtNUoV5EemzzojpIDPlJA" name="p_target" memberEnd="_KDFXEIV5EemzzojpIDPlJA _KFtNU4V5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFtNU4V5EemzzojpIDPlJA" name="target" type="_J6liYIV5EemzzojpIDPlJA" association="_KFtNUoV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFtNVIV5EemzzojpIDPlJA" name="c_target" memberEnd="_KDHMQIV5EemzzojpIDPlJA _KFtNVYV5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFtNVYV5EemzzojpIDPlJA" name="target" type="_J6liYIV5EemzzojpIDPlJA" association="_KFtNVIV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFtNVoV5EemzzojpIDPlJA" name="sigma_target" memberEnd="_KDJBcIV5EemzzojpIDPlJA _KFtNV4V5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFtNV4V5EemzzojpIDPlJA" name="target" type="_J6liYIV5EemzzojpIDPlJA" association="_KFtNVoV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFt0UIV5EemzzojpIDPlJA" name="branch_target" memberEnd="_KDMEwIV5EemzzojpIDPlJA _KFt0UYV5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFt0UYV5EemzzojpIDPlJA" name="target" type="_J6liYIV5EemzzojpIDPlJA" association="_KFt0UIV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFt0UoV5EemzzojpIDPlJA" name="listOfFunctions_target" memberEnd="_KFSWgIV5EemzzojpIDPlJA _KFt0U4V5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFt0U4V5EemzzojpIDPlJA" name="target" type="_J6mJc4V5EemzzojpIDPlJA" association="_KFt0UoV5EemzzojpIDPlJA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_KFt0VIV5EemzzojpIDPlJA" name="unif_target" memberEnd="_KFbgcIV5EemzzojpIDPlJA _KFt0VYV5EemzzojpIDPlJA">
      <ownedEnd xmi:id="_KFt0VYV5EemzzojpIDPlJA" name="target" type="_J6mwgIV5EemzzojpIDPlJA" association="_KFt0VIV5EemzzojpIDPlJA"/>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_J6rB8IV5EemzzojpIDPlJA" name="org">
    <packagedElement xmi:type="uml:Package" xmi:id="_J6rB8YV5EemzzojpIDPlJA" name="junit">
      <packagedElement xmi:type="uml:Package" xmi:id="_J6rB8oV5EemzzojpIDPlJA" name="jupiter">
        <packagedElement xmi:type="uml:Package" xmi:id="_J6rB84V5EemzzojpIDPlJA" name="api">
          <packagedElement xmi:type="uml:Package" xmi:id="_J6rB9IV5EemzzojpIDPlJA" name="Assertions">
            <packagedElement xmi:type="uml:DataType" xmi:id="_J6rB9YV5EemzzojpIDPlJA" name="assertTrue"/>
            <packagedElement xmi:type="uml:DataType" xmi:id="_J-ej4IV5EemzzojpIDPlJA" name="assertEquals"/>
          </packagedElement>
          <packagedElement xmi:type="uml:DataType" xmi:id="_J-ej4oV5EemzzojpIDPlJA" name="AfterEach"/>
          <packagedElement xmi:type="uml:DataType" xmi:id="_J-fK8YV5EemzzojpIDPlJA" name="BeforeEach"/>
          <packagedElement xmi:type="uml:DataType" xmi:id="_J-fyAYV5EemzzojpIDPlJA" name="Test"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_J7BnQIV5EemzzojpIDPlJA" name="java">
    <packagedElement xmi:type="uml:Package" xmi:id="_J7BnQYV5EemzzojpIDPlJA" name="lang">
      <packagedElement xmi:type="uml:DataType" xmi:id="_J7BnQoV5EemzzojpIDPlJA" name="Object"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_KDu3UIV5EemzzojpIDPlJA" name="StringBuffer"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_J97KQIV5EemzzojpIDPlJA" name="util">
      <packagedElement xmi:type="uml:DataType" xmi:id="_J97KQYV5EemzzojpIDPlJA" name="ArrayList"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_J_DLoYV5EemzzojpIDPlJA" name="Collections"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_J_DLo4V5EemzzojpIDPlJA" name="Map"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_J_DysIV5EemzzojpIDPlJA" name="HashMap"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_J_DysoV5EemzzojpIDPlJA" name="List"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_KAHioYV5EemzzojpIDPlJA" name="Collection"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_KFP6QoV5EemzzojpIDPlJA" name="Comparator"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_KFZrQYV5EemzzojpIDPlJA" name="io">
      <packagedElement xmi:type="uml:DataType" xmi:id="_KFZrQoV5EemzzojpIDPlJA" name="FileNotFoundException"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_KFaSUIV5EemzzojpIDPlJA" name="PrintStream"/>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:DataType" xmi:id="_J-1wQIV5EemzzojpIDPlJA" name="E"/>
  <packagedElement xmi:type="uml:Usage" xmi:id="_KFrYEIV5EemzzojpIDPlJA" name="ConstraintUnifier_Assertions" client="_J5_sgIV5EemzzojpIDPlJA" supplier="_J6rB9IV5EemzzojpIDPlJA"/>
  <packagedElement xmi:type="uml:Usage" xmi:id="_KFrYEYV5EemzzojpIDPlJA" name="ConstraintUnifier_tool" client="_J5_sgIV5EemzzojpIDPlJA" supplier="_J6ifE4V5EemzzojpIDPlJA"/>
  <packagedElement xmi:type="uml:Usage" xmi:id="_KFrYEoV5EemzzojpIDPlJA" name="ConstraintUnifier_unificationProblem" client="_J5_sgIV5EemzzojpIDPlJA" supplier="_J6kURoV5EemzzojpIDPlJA"/>
</uml:Model>
